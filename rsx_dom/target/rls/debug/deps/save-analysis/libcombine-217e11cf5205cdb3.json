{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2","program":"/home/djedou/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","combine","/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=217e11cf5205cdb3","-C","extra-filename=-217e11cf5205cdb3","--out-dir","/home/djedou/Desktop/rust_projects/djed_dev/djed_rsx_dom/rsx_dom/target/rls/debug/deps","-L","dependency=/home/djedou/Desktop/rust_projects/djed_dev/djed_rsx_dom/rsx_dom/target/rls/debug/deps","--extern","ascii=/home/djedou/Desktop/rust_projects/djed_dev/djed_rsx_dom/rsx_dom/target/rls/debug/deps/libascii-e048f26bf9cabd19.rmeta","--extern","byteorder=/home/djedou/Desktop/rust_projects/djed_dev/djed_rsx_dom/rsx_dom/target/rls/debug/deps/libbyteorder-c28f5fd38aa58f5e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/djedou/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/djedou/Desktop/rust_projects/djed_dev/djed_rsx_dom/rsx_dom/target/rls/debug/deps/libcombine-217e11cf5205cdb3.rmeta"},"prelude":{"crate_id":{"name":"combine","disambiguator":[2583644226590750866,234521853006503509]},"crate_root":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src","external_crates":[{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","num":18,"id":{"name":"byteorder","disambiguator":[3505383833257188409,11887139625640366731]}},{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","num":19,"id":{"name":"ascii","disambiguator":[15105600721360861831,9120771265944163011]}}],"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":0,"byte_end":28863,"line_start":1,"line_end":844,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6882,"byte_end":6896,"line_start":162,"line_end":162,"column_start":22,"column_end":36},"alias_span":null,"name":"ConsumedResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6898,"byte_end":6908,"line_start":162,"line_end":162,"column_start":38,"column_end":48},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6910,"byte_end":6921,"line_start":162,"line_end":162,"column_start":50,"column_end":61},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6923,"byte_end":6929,"line_start":162,"line_end":162,"column_start":63,"column_end":69},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6931,"byte_end":6936,"line_start":162,"line_end":162,"column_start":71,"column_end":76},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6938,"byte_end":6944,"line_start":162,"line_end":162,"column_start":78,"column_end":84},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6946,"byte_end":6956,"line_start":162,"line_end":162,"column_start":86,"column_end":96},"alias_span":null,"name":"StreamOnce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7160,"byte_end":7169,"line_start":168,"line_end":168,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7208,"byte_end":7211,"line_start":171,"line_end":171,"column_start":22,"column_end":25},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7213,"byte_end":7220,"line_start":171,"line_end":171,"column_start":27,"column_end":34},"alias_span":null,"name":"between","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":659},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7222,"byte_end":7228,"line_start":171,"line_end":171,"column_start":36,"column_end":42},"alias_span":null,"name":"choice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7230,"byte_end":7235,"line_start":171,"line_end":171,"column_start":44,"column_end":49},"alias_span":null,"name":"count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7237,"byte_end":7250,"line_start":171,"line_end":171,"column_start":51,"column_end":64},"alias_span":null,"name":"count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7252,"byte_end":7262,"line_start":171,"line_end":171,"column_start":66,"column_end":76},"alias_span":null,"name":"env_parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":689},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7264,"byte_end":7267,"line_start":171,"line_end":171,"column_start":78,"column_end":81},"alias_span":null,"name":"eof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7269,"byte_end":7279,"line_start":171,"line_end":171,"column_start":83,"column_end":93},"alias_span":null,"name":"look_ahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7302,"byte_end":7306,"line_start":172,"line_end":172,"column_start":22,"column_end":26},"alias_span":null,"name":"many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":631},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7308,"byte_end":7315,"line_start":172,"line_end":172,"column_start":28,"column_end":35},"alias_span":null,"name":"none_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1617},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7317,"byte_end":7332,"line_start":172,"line_end":172,"column_start":37,"column_end":52},"alias_span":null,"name":"not_followed_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7334,"byte_end":7340,"line_start":172,"line_end":172,"column_start":54,"column_end":60},"alias_span":null,"name":"one_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7342,"byte_end":7350,"line_start":172,"line_end":172,"column_start":62,"column_end":70},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":804},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7352,"byte_end":7358,"line_start":172,"line_end":172,"column_start":72,"column_end":78},"alias_span":null,"name":"parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7360,"byte_end":7368,"line_start":172,"line_end":172,"column_start":80,"column_end":88},"alias_span":null,"name":"position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7391,"byte_end":7398,"line_start":173,"line_end":173,"column_start":22,"column_end":29},"alias_span":null,"name":"satisfy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7400,"byte_end":7411,"line_start":173,"line_end":173,"column_start":31,"column_end":42},"alias_span":null,"name":"satisfy_map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7413,"byte_end":7419,"line_start":173,"line_end":173,"column_start":44,"column_end":50},"alias_span":null,"name":"sep_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7421,"byte_end":7431,"line_start":173,"line_end":173,"column_start":52,"column_end":62},"alias_span":null,"name":"sep_end_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1543},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7433,"byte_end":7443,"line_start":173,"line_end":173,"column_start":64,"column_end":74},"alias_span":null,"name":"skip_count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1576},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7445,"byte_end":7463,"line_start":173,"line_end":173,"column_start":76,"column_end":94},"alias_span":null,"name":"skip_count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":733},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7486,"byte_end":7495,"line_start":174,"line_end":174,"column_start":22,"column_end":31},"alias_span":null,"name":"skip_many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7497,"byte_end":7502,"line_start":174,"line_end":174,"column_start":33,"column_end":38},"alias_span":null,"name":"token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7504,"byte_end":7510,"line_start":174,"line_end":174,"column_start":40,"column_end":46},"alias_span":null,"name":"tokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7512,"byte_end":7515,"line_start":174,"line_end":174,"column_start":48,"column_end":51},"alias_span":null,"name":"try","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":669},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7517,"byte_end":7527,"line_start":174,"line_end":174,"column_start":53,"column_end":63},"alias_span":null,"name":"unexpected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7529,"byte_end":7534,"line_start":174,"line_end":174,"column_start":65,"column_end":70},"alias_span":null,"name":"value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":841},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7536,"byte_end":7543,"line_start":174,"line_end":174,"column_start":72,"column_end":79},"alias_span":null,"name":"chainl1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":852},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7545,"byte_end":7552,"line_start":174,"line_end":174,"column_start":81,"column_end":88},"alias_span":null,"name":"chainr1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7554,"byte_end":7559,"line_start":174,"line_end":174,"column_start":90,"column_end":95},"alias_span":null,"name":"many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":766},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7582,"byte_end":7589,"line_start":175,"line_end":175,"column_start":22,"column_end":29},"alias_span":null,"name":"sep_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7591,"byte_end":7602,"line_start":175,"line_end":175,"column_start":31,"column_end":42},"alias_span":null,"name":"sep_end_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":7604,"byte_end":7614,"line_start":175,"line_end":175,"column_start":44,"column_end":54},"alias_span":null,"name":"skip_many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2493},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198910,"byte_end":198915,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Digit","value":"","parent":{"krate":0,"index":1170}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":0,"byte_end":28863,"line_start":1,"line_end":844,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":526},{"krate":0,"index":1010},{"krate":0,"index":1087},{"krate":0,"index":1170}],"decl_id":null,"docs":" This crate contains parser combinators, roughly based on the Haskell library\n [parsec](http://hackage.haskell.org/package/parsec).","sig":null,"attributes":[{"value":"/ This crate contains parser combinators, roughly based on the Haskell library","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ [parsec](http://hackage.haskell.org/package/parsec).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":81,"byte_end":137,"line_start":2,"line_end":2,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":138,"byte_end":141,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A parser in this library can be described as a function which takes some input and if it","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":142,"byte_end":234,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ is succesful, returns a value together with the remaining input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":235,"byte_end":303,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ A parser combinator is a function which takes one or more parsers and returns a new parser.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":304,"byte_end":399,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ For instance the [`many`] parser can be used to convert a parser for single digits into one that","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":400,"byte_end":500,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"/ parses multiple digits. By modeling parsers in this way it becomes simple to compose complex","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":501,"byte_end":597,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ parsers in an almost declarative way.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":598,"byte_end":639,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":640,"byte_end":643,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":644,"byte_end":658,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":659,"byte_end":662,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `combine` limits itself to creating [LL(1) parsers](https://en.wikipedia.org/wiki/LL_parser)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":663,"byte_end":759,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ (it is possible to opt-in to LL(k) parsing using the [`try`] combinator) which makes the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":760,"byte_end":852,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/ parsers easy to reason about in both function and performance while sacrificing","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":853,"byte_end":936,"line_start":15,"line_end":15,"column_start":1,"column_end":84}},{"value":"/ some generality. In addition to you being able to reason better about the parsers you","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":937,"byte_end":1026,"line_start":16,"line_end":16,"column_start":1,"column_end":90}},{"value":"/ construct `combine` the library also takes the knowledge of being an LL parser and uses it to","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1027,"byte_end":1124,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ automatically construct good error messages.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1125,"byte_end":1173,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1174,"byte_end":1177,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1178,"byte_end":1189,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1190,"byte_end":1215,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/ use combine::{Parser, State};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1216,"byte_end":1249,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use combine::char::{digit, letter};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1250,"byte_end":1289,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ const MSG: &'static str = r#\"Parse error at line: 1, column: 1","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1290,"byte_end":1356,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/ Unexpected `|`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1357,"byte_end":1375,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ Expected `digit` or `letter`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1376,"byte_end":1408,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ \"#;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1409,"byte_end":1416,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1417,"byte_end":1420,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1421,"byte_end":1436,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/     // Wrapping a `&str` with `State` provides automatic line and column tracking. If `State`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1437,"byte_end":1534,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/     // was not used the positions would instead only be pointers into the `&str`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1535,"byte_end":1619,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/     if let Err(err) = digit().or(letter()).parse(State::new(\"|\")) {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1620,"byte_end":1691,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/         assert_eq!(MSG, format!(\"{}\", err));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1692,"byte_end":1740,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1741,"byte_end":1750,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1751,"byte_end":1756,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1757,"byte_end":1764,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1765,"byte_end":1768,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This library currently contains five modules:","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1769,"byte_end":1818,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1819,"byte_end":1822,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ * [`combinator`] contains the before mentioned parser combinators and thus contains the main","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1823,"byte_end":1919,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ building exprs for creating any sort of complex parsers. It consists of free functions such","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":1920,"byte_end":2015,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/ as [`many`] and [`satisfy`] as well as a few methods on the [`Parser`] trait which provides a few","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2016,"byte_end":2117,"line_start":42,"line_end":42,"column_start":1,"column_end":102}},{"value":"/ functions such as [`or`] which are more natural to use method calls.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2118,"byte_end":2190,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2191,"byte_end":2194,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ * [`primitives`] contains the [`Parser`] and [`Stream`] traits which are the core abstractions in","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2195,"byte_end":2296,"line_start":45,"line_end":45,"column_start":1,"column_end":102}},{"value":"/ combine as well as various structs dealing with input streams and errors. You usually only need","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2297,"byte_end":2396,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"/ to use this module if you want more control over parsing and input streams.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2397,"byte_end":2476,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2477,"byte_end":2480,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * [`char`] and [`byte`] provides parsers specifically working with streams of characters","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2481,"byte_end":2573,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ (`char`) and bytes (`u8`) respectively. As a few examples it has parsers for accepting digits,","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2574,"byte_end":2672,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ letters or whitespace.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2673,"byte_end":2699,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2700,"byte_end":2703,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * [`range`] provides some zero-copy parsers for [`RangeStream`]s.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2704,"byte_end":2773,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2774,"byte_end":2777,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2778,"byte_end":2792,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2793,"byte_end":2796,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2797,"byte_end":2804,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2805,"byte_end":2830,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/ use combine::char::{spaces, digit, char};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2831,"byte_end":2876,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ use combine::{many1, sep_by, Parser, ParseError};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2877,"byte_end":2930,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2931,"byte_end":2934,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2935,"byte_end":2950,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/     //Parse spaces first and use the with method to only keep the result of the next parser","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":2951,"byte_end":3046,"line_start":63,"line_end":63,"column_start":1,"column_end":96}},{"value":"/     let integer = spaces()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3047,"byte_end":3077,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/         //parse a string of digits into an i32","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3078,"byte_end":3128,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/         .with(many1(digit()).map(|string: String| string.parse::<i32>().unwrap()));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3129,"byte_end":3216,"line_start":66,"line_end":66,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3217,"byte_end":3220,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     //Parse integers separated by commas, skipping whitespace","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3221,"byte_end":3286,"line_start":68,"line_end":68,"column_start":1,"column_end":66}},{"value":"/     let mut integer_list = sep_by(integer, spaces().skip(char(',')));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3287,"byte_end":3360,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3361,"byte_end":3364,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     //Call parse with the input to execute the parser","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3365,"byte_end":3422,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/     let input = \"1234, 45,78\";","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3423,"byte_end":3457,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/     let result: Result<(Vec<i32>, &str), ParseError<&str>> = integer_list.parse(input);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3458,"byte_end":3549,"line_start":73,"line_end":73,"column_start":1,"column_end":92}},{"value":"/     match result {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3550,"byte_end":3572,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/         Ok((value, _remaining_input)) => println!(\"{:?}\", value),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3573,"byte_end":3642,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/         Err(err) => println!(\"{}\", err)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3643,"byte_end":3686,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3687,"byte_end":3696,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3697,"byte_end":3702,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3703,"byte_end":3710,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3711,"byte_end":3714,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ If we need a parser that is mutually recursive we can define a free function which internally","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3715,"byte_end":3812,"line_start":81,"line_end":81,"column_start":1,"column_end":98}},{"value":"/ can in turn be used as a parser by using the [`parser`][fn parser] function which turns a function with the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3813,"byte_end":3924,"line_start":82,"line_end":82,"column_start":1,"column_end":112}},{"value":"/ correct signature into a parser. In this case we define `expr` to work on any type of [`Stream`]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":3925,"byte_end":4025,"line_start":83,"line_end":83,"column_start":1,"column_end":101}},{"value":"/ which is combine's way of abstracting over different data sources such as array slices, string","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4026,"byte_end":4124,"line_start":84,"line_end":84,"column_start":1,"column_end":99}},{"value":"/ slices, iterators etc. If instead you would only need to parse string already in memory you","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4125,"byte_end":4220,"line_start":85,"line_end":85,"column_start":1,"column_end":96}},{"value":"/ could define `expr` as `fn expr(input: &str) -> ParseResult<Expr, &str>`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4221,"byte_end":4297,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4298,"byte_end":4301,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4302,"byte_end":4309,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4310,"byte_end":4326,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4327,"byte_end":4352,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/ use combine::char::{char, letter, spaces};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4353,"byte_end":4399,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ use combine::{between, many1, parser, sep_by, Parser};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4400,"byte_end":4458,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/ use combine::primitives::{State, Stream, ParseResult};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4459,"byte_end":4517,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4518,"byte_end":4521,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4522,"byte_end":4553,"line_start":95,"line_end":95,"column_start":1,"column_end":32}},{"value":"/ pub enum Expr {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4554,"byte_end":4573,"line_start":96,"line_end":96,"column_start":1,"column_end":20}},{"value":"/     Id(String),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4574,"byte_end":4593,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"/     Array(Vec<Expr>),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4594,"byte_end":4619,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"/     Pair(Box<Expr>, Box<Expr>)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4620,"byte_end":4654,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4655,"byte_end":4660,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4661,"byte_end":4664,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // The `parser!` macro can be used to define parser producing functions in most cases","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4665,"byte_end":4754,"line_start":102,"line_end":102,"column_start":1,"column_end":90}},{"value":"/ // (for more advanced uses standalone functions can be defined to handle parsing)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4755,"byte_end":4840,"line_start":103,"line_end":103,"column_start":1,"column_end":86}},{"value":"/ parser!{","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4841,"byte_end":4853,"line_start":104,"line_end":104,"column_start":1,"column_end":13}},{"value":"/    fn expr[I]()(I) -> Expr","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4854,"byte_end":4884,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/     where [I: Stream<Item=char>]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4885,"byte_end":4921,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4922,"byte_end":4927,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/     let word = many1(letter());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4928,"byte_end":4963,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4964,"byte_end":4967,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/     //Creates a parser which parses a char and skips any trailing whitespace","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":4968,"byte_end":5048,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/     let lex_char = |c| char(c).skip(spaces());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5049,"byte_end":5099,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5100,"byte_end":5103,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     let comma_list = sep_by(expr(), lex_char(','));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5104,"byte_end":5159,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/     let array = between(lex_char('['), lex_char(']'), comma_list);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5160,"byte_end":5230,"line_start":114,"line_end":114,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     //We can use tuples to run several parsers in sequence","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5235,"byte_end":5297,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/     //The resulting type is a tuple containing each parsers output","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5298,"byte_end":5368,"line_start":117,"line_end":117,"column_start":1,"column_end":71}},{"value":"/     let pair = (lex_char('('),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5369,"byte_end":5403,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5404,"byte_end":5431,"line_start":119,"line_end":119,"column_start":1,"column_end":28}},{"value":"/                 lex_char(','),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5432,"byte_end":5466,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5467,"byte_end":5494,"line_start":121,"line_end":121,"column_start":1,"column_end":28}},{"value":"/                 lex_char(')'))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5495,"byte_end":5529,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/                    .map(|t| Expr::Pair(Box::new(t.1), Box::new(t.3)));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5530,"byte_end":5604,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5605,"byte_end":5608,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/     word.map(Expr::Id)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5609,"byte_end":5635,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/         .or(array.map(Expr::Array))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5636,"byte_end":5675,"line_start":126,"line_end":126,"column_start":1,"column_end":40}},{"value":"/         .or(pair)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5676,"byte_end":5697,"line_start":127,"line_end":127,"column_start":1,"column_end":22}},{"value":"/         .skip(spaces())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5698,"byte_end":5725,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5726,"byte_end":5731,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5732,"byte_end":5737,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5738,"byte_end":5741,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5742,"byte_end":5757,"line_start":132,"line_end":132,"column_start":1,"column_end":16}},{"value":"/     let result = expr()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5758,"byte_end":5785,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/         .parse(\"[[], (hello, world), [rust]]\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5786,"byte_end":5837,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/     let expr = Expr::Array(vec![","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5838,"byte_end":5874,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/           Expr::Array(Vec::new())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5875,"byte_end":5912,"line_start":136,"line_end":136,"column_start":1,"column_end":38}},{"value":"/         , Expr::Pair(Box::new(Expr::Id(\"hello\".to_string())),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5913,"byte_end":5978,"line_start":137,"line_end":137,"column_start":1,"column_end":66}},{"value":"/                      Box::new(Expr::Id(\"world\".to_string())))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":5979,"byte_end":6044,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/         , Expr::Array(vec![Expr::Id(\"rust\".to_string())])","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6045,"byte_end":6106,"line_start":139,"line_end":139,"column_start":1,"column_end":62}},{"value":"/     ]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6107,"byte_end":6118,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(result, Ok((expr, \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6119,"byte_end":6162,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6163,"byte_end":6168,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6169,"byte_end":6176,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6177,"byte_end":6180,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`combinator`]: combinator/index.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6181,"byte_end":6222,"line_start":145,"line_end":145,"column_start":1,"column_end":42}},{"value":"/ [`primitives`]: primitives/index.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6223,"byte_end":6264,"line_start":146,"line_end":146,"column_start":1,"column_end":42}},{"value":"/ [`char`]: char/index.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6265,"byte_end":6294,"line_start":147,"line_end":147,"column_start":1,"column_end":30}},{"value":"/ [`byte`]: byte/index.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6295,"byte_end":6324,"line_start":148,"line_end":148,"column_start":1,"column_end":30}},{"value":"/ [`range`]: range/index.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6325,"byte_end":6356,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/ [`many`]: combinator/fn.many.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6357,"byte_end":6394,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/ [`try`]: combinator/fn.try.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6395,"byte_end":6430,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/ [`satisfy`]: combinator/fn.satisfy.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6431,"byte_end":6474,"line_start":152,"line_end":152,"column_start":1,"column_end":44}},{"value":"/ [`or`]: primitives/trait.Parser.html#method.or","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6475,"byte_end":6525,"line_start":153,"line_end":153,"column_start":1,"column_end":51}},{"value":"/ [`Stream`]: primitives/trait.Stream.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6526,"byte_end":6570,"line_start":154,"line_end":154,"column_start":1,"column_end":45}},{"value":"/ [`RangeStream`]: primitives/trait.RangeStream.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6571,"byte_end":6625,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/ [`Parser`]: primitives/trait.Parser.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6626,"byte_end":6670,"line_start":156,"line_end":156,"column_start":1,"column_end":45}},{"value":"/ [fn parser]: combinator/fn.parser.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":6671,"byte_end":6713,"line_start":157,"line_end":157,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primitives","qualname":"::primitives","value":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":1233},{"krate":0,"index":1258},{"krate":0,"index":1257},{"krate":0,"index":1255},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1246},{"krate":0,"index":1236},{"krate":0,"index":1260},{"krate":0,"index":1280},{"krate":0,"index":1279},{"krate":0,"index":1277},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1268},{"krate":0,"index":1262},{"krate":0,"index":84},{"krate":0,"index":1282},{"krate":0,"index":1301},{"krate":0,"index":1297},{"krate":0,"index":86},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":1305},{"krate":0,"index":1320},{"krate":0,"index":116},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":1324},{"krate":0,"index":1343},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1334},{"krate":0,"index":1332},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":1346},{"krate":0,"index":1356},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":228},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":300},{"krate":0,"index":1360},{"krate":0,"index":1396},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1377},{"krate":0,"index":1369},{"krate":0,"index":1365},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":320},{"krate":0,"index":327},{"krate":0,"index":1399},{"krate":0,"index":1407},{"krate":0,"index":1404},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":392},{"krate":0,"index":1410},{"krate":0,"index":1440},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1428},{"krate":0,"index":1425},{"krate":0,"index":396},{"krate":0,"index":403},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":421},{"krate":0,"index":426},{"krate":0,"index":463},{"krate":0,"index":474},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":505},{"krate":0,"index":509},{"krate":0,"index":514},{"krate":0,"index":518}],"decl_id":null,"docs":" Module containing the primitive types which is used to create and compose more advanced\n parsers.\n","sig":null,"attributes":[{"value":"/ Module containing the primitive types which is used to create and compose more advanced","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17087,"byte_end":17178,"line_start":480,"line_end":480,"column_start":1,"column_end":92}},{"value":"/ parsers.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17179,"byte_end":17191,"line_start":481,"line_end":481,"column_start":1,"column_end":13}},{"value":"macro_use","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17192,"byte_end":17204,"line_start":482,"line_end":482,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":30769,"byte_end":30783,"line_start":27,"line_end":27,"column_start":12,"column_end":26},"name":"SourcePosition","qualname":"::primitives::SourcePosition","value":"SourcePosition { line, column }","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235}],"decl_id":null,"docs":" Struct which represents a position in a source file.\n","sig":null,"attributes":[{"value":"/ Struct which represents a position in a source file.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":30639,"byte_end":30695,"line_start":25,"line_end":25,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1234},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":30828,"byte_end":30832,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"line","qualname":"::primitives::SourcePosition::line","value":"i32","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Current line of the input\n","sig":null,"attributes":[{"value":"/ Current line of the input","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":30790,"byte_end":30819,"line_start":28,"line_end":28,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1235},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":30883,"byte_end":30889,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"column","qualname":"::primitives::SourcePosition::column","value":"i32","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Current column of the input\n","sig":null,"attributes":[{"value":"/ Current column of the input","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":30843,"byte_end":30874,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1260},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31029,"byte_end":31041,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"BytePosition","qualname":"::primitives::BytePosition","value":"BytePosition { position }","parent":null,"children":[{"krate":0,"index":1261}],"decl_id":null,"docs":" Struct which represents a position in a byte stream.\n","sig":null,"attributes":[{"value":"/ Struct which represents a position in a byte stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":30899,"byte_end":30955,"line_start":34,"line_end":34,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31077,"byte_end":31085,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"name":"position","qualname":"::primitives::BytePosition::position","value":"usize","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" Current position\n","sig":null,"attributes":[{"value":"/ Current position","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31048,"byte_end":31068,"line_start":37,"line_end":37,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31681,"byte_end":31686,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"Token","qualname":"::primitives::Info::Token","value":"Info::Token(T)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1288},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31695,"byte_end":31700,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Range","qualname":"::primitives::Info::Range","value":"Info::Range(R)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31709,"byte_end":31714,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Owned","qualname":"::primitives::Info::Owned","value":"Info::Owned(String)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31728,"byte_end":31736,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::primitives::Info::Borrowed","value":"Info::Borrowed(&'static str)","parent":{"krate":0,"index":1282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1282},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31664,"byte_end":31668,"line_start":54,"line_end":54,"column_start":10,"column_end":14},"name":"Info","qualname":"::primitives::Info","value":"pub enum Info<T, R> {\n    Token(T),\n    Range(R),\n    Owned(String),\n    Borrowed(&'static str),\n}","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1294}],"decl_id":null,"docs":" Enum holding error information. Variants are defined for `Stream::Item` and `Stream::Range` as\n well as string variants holding simple descriptions.","sig":null,"attributes":[{"value":"/ Enum holding error information. Variants are defined for `Stream::Item` and `Stream::Range` as","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31251,"byte_end":31349,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/ well as string variants holding simple descriptions.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31350,"byte_end":31406,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31407,"byte_end":31410,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ As there is implementations of `From` for `T: Positioner`, `String` and `&'static str` the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31411,"byte_end":31505,"line_start":50,"line_end":50,"column_start":1,"column_end":95}},{"value":"/ constructor need not be used directly as calling `msg.into()` should turn a message into the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31506,"byte_end":31602,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ correct `Info` variant.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31603,"byte_end":31630,"line_start":52,"line_end":52,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31790,"byte_end":31799,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Info<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Info<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":32096,"byte_end":32105,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Info<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Info<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33905,"byte_end":33915,"line_start":134,"line_end":134,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::primitives::Error::Unexpected","value":"Error::Unexpected(Info<T, R>)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Error indicating an unexpected token has been encountered in the stream\n","sig":null,"attributes":[{"value":"/ Error indicating an unexpected token has been encountered in the stream","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33825,"byte_end":33900,"line_start":133,"line_end":133,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33998,"byte_end":34006,"line_start":136,"line_end":136,"column_start":5,"column_end":13},"name":"Expected","qualname":"::primitives::Error::Expected","value":"Error::Expected(Info<T, R>)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Error indicating that the parser expected something else\n","sig":null,"attributes":[{"value":"/ Error indicating that the parser expected something else","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33933,"byte_end":33993,"line_start":135,"line_end":135,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1314},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34048,"byte_end":34055,"line_start":138,"line_end":138,"column_start":5,"column_end":12},"name":"Message","qualname":"::primitives::Error::Message","value":"Error::Message(Info<T, R>)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Generic message\n","sig":null,"attributes":[{"value":"/ Generic message","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34024,"byte_end":34043,"line_start":137,"line_end":137,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1317},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34126,"byte_end":34131,"line_start":140,"line_end":140,"column_start":5,"column_end":10},"name":"Other","qualname":"::primitives::Error::Other","value":"Error::Other(Box<StdError + Send + Sync>)","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Variant for containing other types of errors\n","sig":null,"attributes":[{"value":"/ Variant for containing other types of errors","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34073,"byte_end":34121,"line_start":139,"line_end":139,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1305},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33807,"byte_end":33812,"line_start":132,"line_end":132,"column_start":10,"column_end":15},"name":"Error","qualname":"::primitives::Error","value":"pub enum Error<T, R> {\n\n    /// Error indicating an unexpected token has been encountered in the stream\n    Unexpected(Info<T, R>),\n\n    /// Error indicating that the parser expected something else\n    Expected(Info<T, R>),\n\n    /// Generic message\n    Message(Info<T, R>),\n\n    /// Variant for containing other types of errors\n    Other(Box<StdError + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1317}],"decl_id":null,"docs":" Enum used to store information about an error that has occurred during parsing.\n","sig":null,"attributes":[{"value":"/ Enum used to store information about an error that has occurred during parsing.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33697,"byte_end":33780,"line_start":130,"line_end":130,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34201,"byte_end":34210,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Error<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Error<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34559,"byte_end":34568,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Error<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Error<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35539,"byte_end":35551,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<Error<T, R>>::end_of_input","value":"pub fn end_of_input() -> Error<T, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `end_of_input` error.\n","sig":null,"attributes":[{"value":"/ Returns the `end_of_input` error.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35490,"byte_end":35527,"line_start":192,"line_end":192,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36240,"byte_end":36250,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"fmt_errors","qualname":"<Error<T, R>>::fmt_errors","value":"pub fn fmt_errors(&[Error<T, R>], &mut fmt::Formatter) -> fmt::Result where\nT: fmt::Display, R: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Formats a slice of errors in a human readable way.","sig":null,"attributes":[{"value":"/ Formats a slice of errors in a human readable way.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35631,"byte_end":35685,"line_start":197,"line_end":197,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35690,"byte_end":35693,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35698,"byte_end":35709,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35714,"byte_end":35741,"line_start":200,"line_end":200,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35746,"byte_end":35767,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35772,"byte_end":35799,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35804,"byte_end":35807,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35812,"byte_end":35829,"line_start":204,"line_end":204,"column_start":5,"column_end":22}},{"value":"/ let input = r\"","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35834,"byte_end":35852,"line_start":205,"line_end":205,"column_start":5,"column_end":23}},{"value":"/   ,123","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35857,"byte_end":35867,"line_start":206,"line_end":206,"column_start":5,"column_end":15}},{"value":"/ \";","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35872,"byte_end":35878,"line_start":207,"line_end":207,"column_start":5,"column_end":11}},{"value":"/ let result = spaces().with(char('.').or(char('a')).or(digit()))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35883,"byte_end":35950,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/     .parse(State::new(input));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35955,"byte_end":35989,"line_start":209,"line_end":209,"column_start":5,"column_end":39}},{"value":"/ let m = format!(\"{}\", result.unwrap_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35994,"byte_end":36041,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/ let expected = r\"Parse error at line: 2, column: 3","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36046,"byte_end":36100,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/ Unexpected `,`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36105,"byte_end":36123,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/ Expected `.`, `a` or `digit`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36128,"byte_end":36160,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36165,"byte_end":36171,"line_start":214,"line_end":214,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(m, expected);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36176,"byte_end":36204,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36209,"byte_end":36216,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":36221,"byte_end":36228,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38358,"byte_end":38366,"line_start":275,"line_end":275,"column_start":5,"column_end":13},"name":"Consumed","qualname":"::primitives::Consumed::Consumed","value":"Consumed::Consumed(T)","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser has consumed elements\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser has consumed elements","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38289,"byte_end":38353,"line_start":274,"line_end":274,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38451,"byte_end":38456,"line_start":277,"line_end":277,"column_start":5,"column_end":10},"name":"Empty","qualname":"::primitives::Consumed::Empty","value":"Consumed::Empty(T)","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser did not consume any elements\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser did not consume any elements","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38375,"byte_end":38446,"line_start":276,"line_end":276,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":1324},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38271,"byte_end":38279,"line_start":273,"line_end":273,"column_start":10,"column_end":18},"name":"Consumed","qualname":"::primitives::Consumed","value":"pub enum Consumed<T> {\n\n    /// Constructor indicating that the parser has consumed elements\n    Consumed(T),\n\n    /// Constructor indicating that the parser did not consume any elements\n    Empty(T),\n}","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1329}],"decl_id":null,"docs":" Enum used to indicate if a parser consumed any items of the stream it was given as an input.","sig":null,"attributes":[{"value":"/ Enum used to indicate if a parser consumed any items of the stream it was given as an input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":37887,"byte_end":37983,"line_start":267,"line_end":267,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":37984,"byte_end":37987,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ This is used by parsers such as `or` and `choice` to determine if they should try to parse","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":37988,"byte_end":38082,"line_start":269,"line_end":269,"column_start":1,"column_end":95}},{"value":"/ with another parser as they will only be able to provide good error reporting if the preceding","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38083,"byte_end":38181,"line_start":270,"line_end":270,"column_start":1,"column_end":99}},{"value":"/ parser did not consume any tokens.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38182,"byte_end":38220,"line_start":271,"line_end":271,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38902,"byte_end":38910,"line_start":298,"line_end":298,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Consumed<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `self` is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if `self` is empty.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38854,"byte_end":38890,"line_start":297,"line_end":297,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39100,"byte_end":39110,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Consumed<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the contained value.\n","sig":null,"attributes":[{"value":"/ Extracts the contained value.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39055,"byte_end":39088,"line_start":305,"line_end":305,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39355,"byte_end":39366,"line_start":314,"line_end":314,"column_start":12,"column_end":23},"name":"as_consumed","qualname":"<Consumed<T>>::as_consumed","value":"pub fn as_consumed(Self) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Consumed` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Consumed` state.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39227,"byte_end":39273,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"2.3.1\", note = \"Renamed to into_consumed\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39278,"byte_end":39343,"line_start":313,"line_end":313,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39488,"byte_end":39501,"line_start":319,"line_end":319,"column_start":12,"column_end":25},"name":"into_consumed","qualname":"<Consumed<T>>::into_consumed","value":"pub fn into_consumed(Self) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Consumed` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Consumed` state.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39430,"byte_end":39476,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39704,"byte_end":39712,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"as_empty","qualname":"<Consumed<T>>::as_empty","value":"pub fn as_empty(Self) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Empty` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Empty` state.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39582,"byte_end":39625,"line_start":323,"line_end":323,"column_start":5,"column_end":48}},{"value":"deprecated(since = \"2.3.1\", note = \"Renamed to into_empty\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39630,"byte_end":39692,"line_start":324,"line_end":324,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39828,"byte_end":39838,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"into_empty","qualname":"<Consumed<T>>::into_empty","value":"pub fn into_empty(Self) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Empty` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Empty` state.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39773,"byte_end":39816,"line_start":329,"line_end":329,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39998,"byte_end":40001,"line_start":335,"line_end":335,"column_start":12,"column_end":15},"name":"map","qualname":"<Consumed<T>>::map","value":"pub fn map<F, U>(Self, F) -> Consumed<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps over the contained value without changing the consumed state.\n","sig":null,"attributes":[{"value":"/ Maps over the contained value without changing the consumed state.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":39916,"byte_end":39986,"line_start":334,"line_end":334,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40247,"byte_end":40252,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"merge","qualname":"<Consumed<T>>::merge","value":"pub fn merge(&Self, Consumed<T>) -> Consumed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41935,"byte_end":41942,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"name":"combine","qualname":"<Consumed<T>>::combine","value":"pub fn combine<F, U, I>(Self, F) -> ParseResult<U, I> where F: FnOnce(T) ->\nParseResult<U, I>, I: StreamOnce","parent":null,"children":[],"decl_id":null,"docs":" Combines the `Consumed` flags from `self` and the result of `f`.","sig":null,"attributes":[{"value":"/ Combines the `Consumed` flags from `self` and the result of `f`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40447,"byte_end":40515,"line_start":352,"line_end":352,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40520,"byte_end":40523,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40528,"byte_end":40539,"line_start":354,"line_end":354,"column_start":5,"column_end":16}},{"value":"/ Empty    <> Empty    -> Empty","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40544,"byte_end":40577,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/ Consumed <> Empty    -> Consumed","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40582,"byte_end":40618,"line_start":356,"line_end":356,"column_start":5,"column_end":41}},{"value":"/ Empty    <> Consumed -> Consumed","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40623,"byte_end":40659,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"/ Consumed <> Consumed -> Consumed","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40664,"byte_end":40700,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40705,"byte_end":40712,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40717,"byte_end":40720,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40725,"byte_end":40732,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine as pc;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40737,"byte_end":40770,"line_start":362,"line_end":362,"column_start":5,"column_end":38}},{"value":"/ # use pc::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40775,"byte_end":40791,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40796,"byte_end":40813,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/ //Parses a character of string literal and handles the escaped characters \\\\ and \\\" as \\","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40818,"byte_end":40910,"line_start":365,"line_end":365,"column_start":5,"column_end":97}},{"value":"/ //and \" respectively","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40915,"byte_end":40939,"line_start":366,"line_end":366,"column_start":5,"column_end":29}},{"value":"/ fn char(input: &str) -> ParseResult<char, &str> {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":40944,"byte_end":40997,"line_start":367,"line_end":367,"column_start":5,"column_end":58}},{"value":"/     let (c, input) = try!(satisfy(|c| c != '\"').parse_stream(input));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41002,"byte_end":41075,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/     match c {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41080,"byte_end":41097,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/         //Since the `char` parser has already consumed some of the input `combine` is used","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41102,"byte_end":41196,"line_start":370,"line_end":370,"column_start":5,"column_end":99}},{"value":"/         //propagate the consumed state to the next part of the parser","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41201,"byte_end":41274,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/         '\\\\' => input.combine(|input| {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41279,"byte_end":41322,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/             satisfy(|c| c == '\"' || c == '\\\\')","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41327,"byte_end":41377,"line_start":373,"line_end":373,"column_start":5,"column_end":55}},{"value":"/                 .map(|c| {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41382,"byte_end":41412,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/                     match c {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41417,"byte_end":41450,"line_start":375,"line_end":375,"column_start":5,"column_end":38}},{"value":"/                         '\"' => '\"',","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41455,"byte_end":41494,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/                         '\\\\' => '\\\\',","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41499,"byte_end":41540,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/                         c => c","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41545,"byte_end":41579,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/                     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41584,"byte_end":41609,"line_start":379,"line_end":379,"column_start":5,"column_end":30}},{"value":"/                 })","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41614,"byte_end":41636,"line_start":380,"line_end":380,"column_start":5,"column_end":27}},{"value":"/                 .parse_stream(input)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41641,"byte_end":41681,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/             }),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41686,"byte_end":41705,"line_start":382,"line_end":382,"column_start":5,"column_end":24}},{"value":"/         _ => Ok((c, input))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41710,"byte_end":41741,"line_start":383,"line_end":383,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41746,"byte_end":41755,"line_start":384,"line_end":384,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41760,"byte_end":41765,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ let result = many(parser(char))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41770,"byte_end":41805,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/     .parse(r#\"abc\\\"\\\\\"#);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41810,"byte_end":41839,"line_start":387,"line_end":387,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result, Ok((r#\"abc\"\\\"#.to_string(), \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41844,"byte_end":41901,"line_start":388,"line_end":388,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41906,"byte_end":41911,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":41916,"byte_end":41923,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":42404,"byte_end":42420,"line_start":405,"line_end":405,"column_start":12,"column_end":28},"name":"combine_consumed","qualname":"<Consumed<T>>::combine_consumed","value":"pub fn combine_consumed<F, U, I>(Self, F) -> ConsumedResult<U, I> where\nF: FnOnce(T) -> ConsumedResult<U, I>, I: StreamOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43059,"byte_end":43069,"line_start":423,"line_end":423,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::primitives::ParseError","value":"ParseError { position, errors }","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" Struct which hold information about an error that occurred at a specific position.\n Can hold multiple instances of `Error` if more that one error occurred in the same position.\n","sig":null,"attributes":[{"value":"/ Struct which hold information about an error that occurred at a specific position.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":42864,"byte_end":42950,"line_start":421,"line_end":421,"column_start":1,"column_end":87}},{"value":"/ Can hold multiple instances of `Error` if more that one error occurred in the same position.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":42951,"byte_end":43047,"line_start":422,"line_end":422,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":174},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43141,"byte_end":43149,"line_start":425,"line_end":425,"column_start":9,"column_end":17},"name":"position","qualname":"::primitives::ParseError::position","value":"<S as primitives::StreamOnce>::Position","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" The position where the error occurred\n","sig":null,"attributes":[{"value":"/ The position where the error occurred","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43091,"byte_end":43132,"line_start":424,"line_end":424,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":175},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43505,"byte_end":43511,"line_start":430,"line_end":430,"column_start":9,"column_end":15},"name":"errors","qualname":"::primitives::ParseError::errors","value":"std::vec::Vec<primitives::Error<<S as primitives::StreamOnce>::Item, <S as primitives::StreamOnce>::Range>>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" A vector containing specific information on what errors occurred at `position`. Usually\n a fully formed message contains one `Unexpected` error and one or more `Expected` errors.\n `Message` and `Other` may also appear (`combine` never generates these errors on its own)\n and may warrant custom handling.\n","sig":null,"attributes":[{"value":"/ A vector containing specific information on what errors occurred at `position`. Usually","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43168,"byte_end":43259,"line_start":426,"line_end":426,"column_start":5,"column_end":96}},{"value":"/ a fully formed message contains one `Unexpected` error and one or more `Expected` errors.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43264,"byte_end":43357,"line_start":427,"line_end":427,"column_start":5,"column_end":98}},{"value":"/ `Message` and `Other` may also appear (`combine` never generates these errors on its own)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43362,"byte_end":43455,"line_start":428,"line_end":428,"column_start":5,"column_end":98}},{"value":"/ and may warrant custom handling.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43460,"byte_end":43496,"line_start":429,"line_end":429,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43662,"byte_end":43665,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseError<S>>::new","value":"pub fn new(S::Position, Error<S::Item, S::Range>) -> ParseError<S>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ParseError` which occurred at `position`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `ParseError` which occurred at `position`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43587,"byte_end":43650,"line_start":434,"line_end":434,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43902,"byte_end":43907,"line_start":440,"line_end":440,"column_start":12,"column_end":17},"name":"empty","qualname":"<ParseError<S>>::empty","value":"pub fn empty(S::Position) -> ParseError<S>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an error with no other information than the position it occurred at.\n","sig":null,"attributes":[{"value":"/ Constructs an error with no other information than the position it occurred at.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43807,"byte_end":43890,"line_start":439,"line_end":439,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44074,"byte_end":44085,"line_start":445,"line_end":445,"column_start":12,"column_end":23},"name":"from_errors","qualname":"<ParseError<S>>::from_errors","value":"pub fn from_errors(S::Position, Vec<Error<S::Item, S::Range>>)\n-> ParseError<S>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `ParseError` with multiple causes.\n","sig":null,"attributes":[{"value":"/ Constructs a `ParseError` with multiple causes.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44011,"byte_end":44062,"line_start":444,"line_end":444,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44422,"byte_end":44434,"line_start":457,"line_end":457,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<ParseError<S>>::end_of_input","value":"pub fn end_of_input(S::Position) -> ParseError<S>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an end of input error. Should be returned by parsers which encounter end of\n input unexpectedly.\n","sig":null,"attributes":[{"value":"/ Constructs an end of input error. Should be returned by parsers which encounter end of","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44292,"byte_end":44382,"line_start":455,"line_end":455,"column_start":5,"column_end":95}},{"value":"/ input unexpectedly.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44387,"byte_end":44410,"line_start":456,"line_end":456,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44713,"byte_end":44724,"line_start":463,"line_end":463,"column_start":12,"column_end":23},"name":"add_message","qualname":"<ParseError<S>>::add_message","value":"pub fn add_message<M>(&mut Self, M) where M: Into<Info<S::Item, S::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Adds a `Message` error, taking care not to add duplicated errors.\n","sig":null,"attributes":[{"value":"/ Adds a `Message` error, taking care not to add duplicated errors.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44545,"byte_end":44614,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"deprecated(since = \"2.3.0\", note =\n             \"Use `add_error(Error::Message())` instead\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44619,"byte_end":44701,"line_start":462,"line_end":462,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":45002,"byte_end":45011,"line_start":472,"line_end":472,"column_start":12,"column_end":21},"name":"add_error","qualname":"<ParseError<S>>::add_error","value":"pub fn add_error(&mut Self, Error<S::Item, S::Range>)","parent":null,"children":[],"decl_id":null,"docs":" Adds an error if `error` does not exist in this `ParseError` already (as determined byte\n `PartialEq`).\n","sig":null,"attributes":[{"value":"/ Adds an error if `error` does not exist in this `ParseError` already (as determined byte","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44876,"byte_end":44968,"line_start":470,"line_end":470,"column_start":5,"column_end":97}},{"value":"/ `PartialEq`).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":44973,"byte_end":44990,"line_start":471,"line_end":471,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":45291,"byte_end":45303,"line_start":480,"line_end":480,"column_start":12,"column_end":24},"name":"set_expected","qualname":"<ParseError<S>>::set_expected","value":"pub fn set_expected(&mut Self, Info<S::Item, S::Range>)","parent":null,"children":[],"decl_id":null,"docs":" Remvoes all `Expected` errors in `self` and adds `info` instead.\n","sig":null,"attributes":[{"value":"/ Remvoes all `Expected` errors in `self` and adds `info` instead.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":45211,"byte_end":45279,"line_start":479,"line_end":479,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":45855,"byte_end":45860,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"merge","qualname":"<ParseError<S>>::merge","value":"pub fn merge(Self, ParseError<S>) -> ParseError<S>","parent":null,"children":[],"decl_id":null,"docs":" Merges two `ParseError`s. If they exist at the same position the errors of `other` are\n added to `self` (using `add_error` to skip duplicates). If they are not at the same\n position the error furthest ahead are returned, ignoring the other `ParseError`.\n","sig":null,"attributes":[{"value":"/ Merges two `ParseError`s. If they exist at the same position the errors of `other` are","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":45572,"byte_end":45662,"line_start":489,"line_end":489,"column_start":5,"column_end":95}},{"value":"/ added to `self` (using `add_error` to skip duplicates). If they are not at the same","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":45667,"byte_end":45754,"line_start":490,"line_end":490,"column_start":5,"column_end":92}},{"value":"/ position the error furthest ahead are returned, ignoring the other `ParseError`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":45759,"byte_end":45843,"line_start":491,"line_end":491,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46793,"byte_end":46811,"line_start":521,"line_end":521,"column_start":12,"column_end":30},"name":"translate_position","qualname":"<ParseError<&'s str>>::translate_position","value":"pub fn translate_position(Self, &'s str) -> ParseError<&'s str>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer-based position into an indexed position.","sig":null,"attributes":[{"value":"/ Converts the pointer-based position into an indexed position.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46389,"byte_end":46454,"line_start":509,"line_end":509,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46459,"byte_end":46462,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46467,"byte_end":46478,"line_start":511,"line_end":511,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46483,"byte_end":46510,"line_start":512,"line_end":512,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46515,"byte_end":46536,"line_start":513,"line_end":513,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46541,"byte_end":46558,"line_start":514,"line_end":514,"column_start":5,"column_end":22}},{"value":"/ let text = \"b\";","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46563,"byte_end":46582,"line_start":515,"line_end":515,"column_start":5,"column_end":24}},{"value":"/ let err = token('a').parse(text).unwrap_err();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46587,"byte_end":46637,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(err.position, text.as_ptr() as usize);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46642,"byte_end":46695,"line_start":517,"line_end":517,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(err.translate_position(text).position, 0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46700,"byte_end":46757,"line_start":518,"line_end":518,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46762,"byte_end":46769,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46774,"byte_end":46781,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47438,"byte_end":47456,"line_start":543,"line_end":543,"column_start":12,"column_end":30},"name":"translate_position","qualname":"<ParseError<&'s [T]>>::translate_position","value":"pub fn translate_position(Self, &'s [T]) -> ParseError<&'s [T]>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer-based position into an indexed position.","sig":null,"attributes":[{"value":"/ Converts the pointer-based position into an indexed position.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47027,"byte_end":47092,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47097,"byte_end":47100,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47105,"byte_end":47116,"line_start":533,"line_end":533,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47121,"byte_end":47148,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47153,"byte_end":47174,"line_start":535,"line_end":535,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47179,"byte_end":47196,"line_start":536,"line_end":536,"column_start":5,"column_end":22}},{"value":"/ let text = b\"b\";","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47201,"byte_end":47221,"line_start":537,"line_end":537,"column_start":5,"column_end":25}},{"value":"/ let err = token(b'a').parse(&text[..]).unwrap_err();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47226,"byte_end":47282,"line_start":538,"line_end":538,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(err.position, text.as_ptr() as usize);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47287,"byte_end":47340,"line_start":539,"line_end":539,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(err.translate_position(text).position, 0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47345,"byte_end":47402,"line_start":540,"line_end":540,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47407,"byte_end":47414,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47419,"byte_end":47426,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49526,"byte_end":49531,"line_start":620,"line_end":620,"column_start":12,"column_end":17},"name":"State","qualname":"::primitives::State","value":"State { position, input }","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"decl_id":null,"docs":" The `State<I>` struct keeps track of the current position in the stream `I` using the\n `Positioner` trait to update the position.\n","sig":null,"attributes":[{"value":"/ The `State<I>` struct keeps track of the current position in the stream `I` using the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49350,"byte_end":49439,"line_start":617,"line_end":617,"column_start":1,"column_end":90}},{"value":"/ `Positioner` trait to update the position.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49440,"byte_end":49486,"line_start":618,"line_end":618,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1348},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49620,"byte_end":49628,"line_start":626,"line_end":626,"column_start":9,"column_end":17},"name":"position","qualname":"::primitives::State::position","value":"<<I as primitives::StreamOnce>::Item as primitives::Positioner>::Position","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" The current position\n","sig":null,"attributes":[{"value":"/ The current position","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49587,"byte_end":49611,"line_start":625,"line_end":625,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1349},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49728,"byte_end":49733,"line_start":628,"line_end":628,"column_start":9,"column_end":14},"name":"input","qualname":"::primitives::State::input","value":"I","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" The input stream used when items are requested\n","sig":null,"attributes":[{"value":"/ The input stream used when items are requested","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49669,"byte_end":49719,"line_start":627,"line_end":627,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":50289,"byte_end":50292,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"new","qualname":"<State<I>>::new","value":"pub fn new(I) -> State<I>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `State<I>` from an input stream. Initializes the position to\n `Positioner::start()`.\n","sig":null,"attributes":[{"value":"/ Creates a new `State<I>` from an input stream. Initializes the position to","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":50168,"byte_end":50246,"line_start":652,"line_end":652,"column_start":5,"column_end":83}},{"value":"/ `Positioner::start()`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":50251,"byte_end":50277,"line_start":653,"line_end":653,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52297,"byte_end":52308,"line_start":734,"line_end":734,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::primitives::ParseResult","value":"Result<(O, Consumed<I>), Consumed<ParseError<I>>>","parent":null,"children":[],"decl_id":null,"docs":" A type alias over the specific `Result` type used by parsers to indicate wether they were\n successful or not.\n `O` is the type that is output on success.\n `I` is the specific stream type used in the parser.\n","sig":null,"attributes":[{"value":"/ A type alias over the specific `Result` type used by parsers to indicate wether they were","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52068,"byte_end":52161,"line_start":730,"line_end":730,"column_start":1,"column_end":94}},{"value":"/ successful or not.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52162,"byte_end":52184,"line_start":731,"line_end":731,"column_start":1,"column_end":23}},{"value":"/ `O` is the type that is output on success.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52185,"byte_end":52231,"line_start":732,"line_end":732,"column_start":1,"column_end":47}},{"value":"/ `I` is the specific stream type used in the parser.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52232,"byte_end":52287,"line_start":733,"line_end":733,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52461,"byte_end":52471,"line_start":737,"line_end":737,"column_start":11,"column_end":21},"name":"StreamOnce","qualname":"::primitives::StreamOnce","value":"StreamOnce","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" `StreamOnce` represents a sequence of items that can be extracted one by one.\n","sig":null,"attributes":[{"value":"/ `StreamOnce` represents a sequence of items that can be extracted one by one.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52369,"byte_end":52450,"line_start":736,"line_end":736,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":244},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52544,"byte_end":52548,"line_start":739,"line_end":739,"column_start":10,"column_end":14},"name":"Item","qualname":"::primitives::StreamOnce::Item","value":"type Item: Clone + PartialEq;","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" The type of items which is yielded from this stream.\n","sig":null,"attributes":[{"value":"/ The type of items which is yielded from this stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52478,"byte_end":52534,"line_start":738,"line_end":738,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52766,"byte_end":52771,"line_start":744,"line_end":744,"column_start":10,"column_end":15},"name":"Range","qualname":"::primitives::StreamOnce::Range","value":"type Range: Clone + PartialEq;","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" The type of a range of items yielded from this stream.\n Types which do not a have a way of yielding ranges of items should just use the\n `Self::Item` for this type.\n","sig":null,"attributes":[{"value":"/ The type of a range of items yielded from this stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52574,"byte_end":52632,"line_start":741,"line_end":741,"column_start":5,"column_end":63}},{"value":"/ Types which do not a have a way of yielding ranges of items should just use the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52637,"byte_end":52720,"line_start":742,"line_end":742,"column_start":5,"column_end":88}},{"value":"/ `Self::Item` for this type.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52725,"byte_end":52756,"line_start":743,"line_end":743,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":246},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52956,"byte_end":52964,"line_start":748,"line_end":748,"column_start":10,"column_end":18},"name":"Position","qualname":"::primitives::StreamOnce::Position","value":"type Position: Ord;","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Type which represents the position in a stream.\n `Ord` is required to allow parsers to determine which of two positions are further ahead.\n","sig":null,"attributes":[{"value":"/ Type which represents the position in a stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52797,"byte_end":52848,"line_start":746,"line_end":746,"column_start":5,"column_end":56}},{"value":"/ `Ord` is required to allow parsers to determine which of two positions are further ahead.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52853,"byte_end":52946,"line_start":747,"line_end":747,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53134,"byte_end":53140,"line_start":752,"line_end":752,"column_start":8,"column_end":14},"name":"uncons","qualname":"::primitives::StreamOnce::uncons","value":"pub fn uncons(&mut Self) -> Result<Self::Item, Error<Self::Item, Self::Range>>","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Takes a stream and removes its first item, yielding the item and the rest of the elements.\n Returns `Err` if no element could be retrieved.\n","sig":null,"attributes":[{"value":"/ Takes a stream and removes its first item, yielding the item and the rest of the elements.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":52976,"byte_end":53070,"line_start":750,"line_end":750,"column_start":5,"column_end":99}},{"value":"/ Returns `Err` if no element could be retrieved.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53075,"byte_end":53126,"line_start":751,"line_end":751,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53267,"byte_end":53275,"line_start":755,"line_end":755,"column_start":8,"column_end":16},"name":"position","qualname":"::primitives::StreamOnce::position","value":"pub fn position(&Self) -> Self::Position","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns the current position of the stream.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53212,"byte_end":53259,"line_start":754,"line_end":754,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":249},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53362,"byte_end":53368,"line_start":759,"line_end":759,"column_start":11,"column_end":17},"name":"Stream","qualname":"::primitives::Stream","value":"Stream: StreamOnce + Clone","parent":null,"children":[],"decl_id":null,"docs":" A stream of tokens which can be duplicated\n","sig":null,"attributes":[{"value":"/ A stream of tokens which can be duplicated","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53305,"byte_end":53351,"line_start":758,"line_end":758,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53469,"byte_end":53475,"line_start":768,"line_end":768,"column_start":8,"column_end":14},"name":"uncons","qualname":"::primitives::uncons","value":"pub fn uncons<I>(I) -> ParseResult<I::Item, I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53452,"byte_end":53461,"line_start":767,"line_end":767,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":254},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53853,"byte_end":53864,"line_start":782,"line_end":782,"column_start":11,"column_end":22},"name":"RangeStream","qualname":"::primitives::RangeStream","value":"RangeStream: Stream","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"decl_id":null,"docs":" A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53759,"byte_end":53842,"line_start":781,"line_end":781,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53992,"byte_end":54004,"line_start":785,"line_end":785,"column_start":8,"column_end":20},"name":"uncons_range","qualname":"::primitives::RangeStream::uncons_range","value":"pub fn uncons_range(&mut Self, usize)\n-> Result<Self::Range, Error<Self::Item, Self::Range>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Takes `size` elements from the stream.\n Fails if the length of the stream is less than `size`.\n","sig":null,"attributes":[{"value":"/ Takes `size` elements from the stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53879,"byte_end":53921,"line_start":783,"line_end":783,"column_start":5,"column_end":47}},{"value":"/ Fails if the length of the stream is less than `size`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53926,"byte_end":53984,"line_start":784,"line_end":784,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54222,"byte_end":54234,"line_start":789,"line_end":789,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::primitives::RangeStream::uncons_while","value":"pub fn uncons_while<F>(&mut Self, F)\n-> Result<Self::Range, Error<Self::Item, Self::Range>> where\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`.\n returns the range of items which passed `predicate`.\n","sig":null,"attributes":[{"value":"/ Takes items from stream, testing each one with `predicate`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54090,"byte_end":54153,"line_start":787,"line_end":787,"column_start":5,"column_end":68}},{"value":"/ returns the range of items which passed `predicate`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54158,"byte_end":54214,"line_start":788,"line_end":788,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54440,"byte_end":54455,"line_start":795,"line_end":795,"column_start":11,"column_end":26},"name":"FullRangeStream","qualname":"::primitives::FullRangeStream","value":"FullRangeStream: RangeStream","parent":null,"children":[{"krate":0,"index":259}],"decl_id":null,"docs":" A `RangeStream` which is capable of providing it's entire range.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` which is capable of providing it's entire range.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54361,"byte_end":54429,"line_start":794,"line_end":794,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54521,"byte_end":54526,"line_start":797,"line_end":797,"column_start":8,"column_end":13},"name":"range","qualname":"::primitives::FullRangeStream::range","value":"pub fn range(&Self) -> Self::Range","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Returns the entire range of `self`\n","sig":null,"attributes":[{"value":"/ Returns the entire range of `self`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54475,"byte_end":54513,"line_start":796,"line_end":796,"column_start":5,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54637,"byte_end":54649,"line_start":802,"line_end":802,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::primitives::uncons_while","value":"pub fn uncons_while<I, F>(I, F) -> ConsumedResult<I::Range, I> where\nF: FnMut(I::Item) -> bool, I: RangeStream, I::Range: Range","parent":null,"children":[],"decl_id":null,"docs":" Removes items from the input while `predicate` returns `true`.\n","sig":null,"attributes":[{"value":"/ Removes items from the input while `predicate` returns `true`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54553,"byte_end":54619,"line_start":800,"line_end":800,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54620,"byte_end":54629,"line_start":801,"line_end":801,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":263},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":55056,"byte_end":55061,"line_start":818,"line_end":818,"column_start":11,"column_end":16},"name":"Range","qualname":"::primitives::Range","value":"Range","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":55211,"byte_end":55214,"line_start":821,"line_end":821,"column_start":8,"column_end":11},"name":"len","qualname":"::primitives::Range::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Returns the remaining length of `self`.\n The returned length need not be the same as the number of items left in the stream.\n","sig":null,"attributes":[{"value":"/ Returns the remaining length of `self`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":55068,"byte_end":55111,"line_start":819,"line_end":819,"column_start":5,"column_end":48}},{"value":"/ The returned length need not be the same as the number of items left in the stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":55116,"byte_end":55203,"line_start":820,"line_end":820,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":55328,"byte_end":55336,"line_start":824,"line_end":824,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::primitives::Range::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":263},"children":[],"decl_id":null,"docs":" Returns `true` if the range does not contain any elements (`Range::len() == 0`)\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range does not contain any elements (`Range::len() == 0`)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":55237,"byte_end":55320,"line_start":823,"line_end":823,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59213,"byte_end":59224,"line_start":981,"line_end":981,"column_start":12,"column_end":23},"name":"SliceStream","qualname":"::primitives::SliceStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype for constructing a stream from a slice where the items in the slice are not copyable.\n","sig":null,"attributes":[{"value":"/ Newtype for constructing a stream from a slice where the items in the slice are not copyable.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59049,"byte_end":59146,"line_start":979,"line_end":979,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":1364},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59236,"byte_end":59247,"line_start":981,"line_end":981,"column_start":35,"column_end":46},"name":"0","qualname":"::primitives::SliceStream::0","value":"&'a [T]","parent":{"krate":0,"index":1360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1399},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":60983,"byte_end":60997,"line_start":1055,"line_end":1055,"column_start":12,"column_end":26},"name":"IteratorStream","qualname":"::primitives::IteratorStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around iterators which allows them to be treated as a stream.\n Returned by [`from_iter`].","sig":null,"attributes":[{"value":"/ Wrapper around iterators which allows them to be treated as a stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":60802,"byte_end":60875,"line_start":1050,"line_end":1050,"column_start":1,"column_end":74}},{"value":"/ Returned by [`from_iter`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":60876,"byte_end":60906,"line_start":1051,"line_end":1051,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":60907,"byte_end":60910,"line_start":1052,"line_end":1052,"column_start":1,"column_end":4}},{"value":"/ [`from_iter`]: fn.from_iter.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":60911,"byte_end":60947,"line_start":1053,"line_end":1053,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61144,"byte_end":61147,"line_start":1065,"line_end":1065,"column_start":12,"column_end":15},"name":"new","qualname":"<IteratorStream<I>>::new","value":"pub fn new(I) -> IteratorStream<I>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a stream.\n","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61091,"byte_end":61132,"line_start":1064,"line_end":1064,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":334},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61310,"byte_end":61319,"line_start":1071,"line_end":1071,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::primitives::from_iter","value":"pub fn from_iter<I>(I) -> IteratorStream<I> where I: Iterator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"2.4.0\", note =\n             \"please use `IteratorStream::new` instead\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61221,"byte_end":61302,"line_start":1070,"line_end":1070,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62189,"byte_end":62199,"line_start":1116,"line_end":1116,"column_start":12,"column_end":22},"name":"ReadStream","qualname":"::primitives::ReadStream","value":"ReadStream {  }","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63455,"byte_end":63458,"line_start":1166,"line_end":1166,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadStream<R>>::new","value":"pub fn new(R) -> ReadStream<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","sig":null,"attributes":[{"value":"/ Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62818,"byte_end":62896,"line_start":1148,"line_end":1148,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62901,"byte_end":62904,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62909,"byte_end":62920,"line_start":1150,"line_end":1150,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62925,"byte_end":62952,"line_start":1151,"line_end":1151,"column_start":5,"column_end":32}},{"value":"/ use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62957,"byte_end":62976,"line_start":1152,"line_end":1152,"column_start":5,"column_end":24}},{"value":"/ use combine::byte::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62981,"byte_end":63006,"line_start":1153,"line_end":1153,"column_start":5,"column_end":30}},{"value":"/ use combine::primitives::{BufferedStream, ReadStream};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63011,"byte_end":63069,"line_start":1154,"line_end":1154,"column_start":5,"column_end":63}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63074,"byte_end":63096,"line_start":1155,"line_end":1155,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63101,"byte_end":63104,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63109,"byte_end":63126,"line_start":1157,"line_end":1157,"column_start":5,"column_end":22}},{"value":"/ let mut input: &[u8] = b\"123,\";","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63131,"byte_end":63166,"line_start":1158,"line_end":1158,"column_start":5,"column_end":40}},{"value":"/ let stream = BufferedStream::new(ReadStream::new(&mut input), 1);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63171,"byte_end":63240,"line_start":1159,"line_end":1159,"column_start":5,"column_end":74}},{"value":"/ let result = (many(digit()), byte(b','))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63245,"byte_end":63289,"line_start":1160,"line_end":1160,"column_start":5,"column_end":49}},{"value":"/     .parse(stream.as_stream())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63294,"byte_end":63328,"line_start":1161,"line_end":1161,"column_start":5,"column_end":39}},{"value":"/     .map(|t| t.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63333,"byte_end":63355,"line_start":1162,"line_end":1162,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok((vec![b'1', b'2', b'3'], b',')));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63360,"byte_end":63419,"line_start":1163,"line_end":1163,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63424,"byte_end":63431,"line_start":1164,"line_end":1164,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63436,"byte_end":63443,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":361},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63668,"byte_end":63677,"line_start":1175,"line_end":1175,"column_start":8,"column_end":17},"name":"from_read","qualname":"::primitives::from_read","value":"pub fn from_read<R>(R) -> ReadStream<R> where R: Read","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"2.4.0\", note = \"please use `ReadStream::new` instead\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63583,"byte_end":63660,"line_start":1174,"line_end":1174,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":363},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63851,"byte_end":63861,"line_start":1183,"line_end":1183,"column_start":11,"column_end":21},"name":"Positioner","qualname":"::primitives::Positioner","value":"Positioner: PartialEq","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"decl_id":null,"docs":" Trait for updating the position for types which can be yielded from a `Stream`.\n","sig":null,"attributes":[{"value":"/ Trait for updating the position for types which can be yielded from a `Stream`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63757,"byte_end":63840,"line_start":1182,"line_end":1182,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":364},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63936,"byte_end":63944,"line_start":1185,"line_end":1185,"column_start":10,"column_end":18},"name":"Position","qualname":"::primitives::Positioner::Position","value":"type Position: Clone + Ord;","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" The type which keeps track of the position.\n","sig":null,"attributes":[{"value":"/ The type which keeps track of the position.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63879,"byte_end":63926,"line_start":1184,"line_end":1184,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63999,"byte_end":64004,"line_start":1187,"line_end":1187,"column_start":8,"column_end":13},"name":"start","qualname":"::primitives::Positioner::start","value":"pub fn start() -> Self::Position","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Creates a start position\n","sig":null,"attributes":[{"value":"/ Creates a start position","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63963,"byte_end":63991,"line_start":1186,"line_end":1186,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":64111,"byte_end":64117,"line_start":1189,"line_end":1189,"column_start":8,"column_end":14},"name":"update","qualname":"::primitives::Positioner::update","value":"pub fn update(&Self, &mut Self::Position)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Updates the position given that `self` has been taken from the stream\n","sig":null,"attributes":[{"value":"/ Updates the position given that `self` has been taken from the stream","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":64030,"byte_end":64103,"line_start":1188,"line_end":1188,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1413},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65873,"byte_end":65883,"line_start":1275,"line_end":1275,"column_start":5,"column_end":15},"name":"ConsumedOk","qualname":"::primitives::FastResult::ConsumedOk","value":"FastResult::ConsumedOk(T)","parent":{"krate":0,"index":1410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65892,"byte_end":65899,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12},"name":"EmptyOk","qualname":"::primitives::FastResult::EmptyOk","value":"FastResult::EmptyOk(T)","parent":{"krate":0,"index":1410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65908,"byte_end":65919,"line_start":1277,"line_end":1277,"column_start":5,"column_end":16},"name":"ConsumedErr","qualname":"::primitives::FastResult::ConsumedErr","value":"FastResult::ConsumedErr(E)","parent":{"krate":0,"index":1410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65928,"byte_end":65936,"line_start":1278,"line_end":1278,"column_start":5,"column_end":13},"name":"EmptyErr","qualname":"::primitives::FastResult::EmptyErr","value":"FastResult::EmptyErr(E)","parent":{"krate":0,"index":1410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1410},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65850,"byte_end":65860,"line_start":1274,"line_end":1274,"column_start":10,"column_end":20},"name":"FastResult","qualname":"::primitives::FastResult","value":"pub enum FastResult<T, E> {\n    ConsumedOk(T),\n    EmptyOk(T),\n    ConsumedErr(E),\n    EmptyErr(E),\n}","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65985,"byte_end":65991,"line_start":1282,"line_end":1282,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FastResult<T, E>>::as_ref","value":"pub fn as_ref(&Self) -> FastResult<&T, &E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":66257,"byte_end":66265,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"and_then","qualname":"<FastResult<T, E>>::and_then","value":"pub fn and_then<F, T2>(Self, F) -> F::Output where F: FnOnce(T) ->\nFastResult<T2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":66770,"byte_end":66773,"line_start":1311,"line_end":1311,"column_start":12,"column_end":15},"name":"map","qualname":"<ConsumedResult<T, E>>::map","value":"pub fn map<F, T2>(Self, F) -> ConsumedResult<F::Output, E> where F: FnOnce(T)\n-> T2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":409},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67302,"byte_end":67316,"line_start":1328,"line_end":1328,"column_start":10,"column_end":24},"name":"ConsumedResult","qualname":"::primitives::ConsumedResult","value":"FastResult<(O, I), ParseError<I>>","parent":null,"children":[],"decl_id":null,"docs":" A `Result` type which has the consumed status flattened into the result.\n Conversions to and from `std::result::Result` can be done using `result.into()` or\n `From::from(result)`\n","sig":null,"attributes":[{"value":"/ A `Result` type which has the consumed status flattened into the result.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67104,"byte_end":67180,"line_start":1325,"line_end":1325,"column_start":1,"column_end":77}},{"value":"/ Conversions to and from `std::result::Result` can be done using `result.into()` or","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67181,"byte_end":67267,"line_start":1326,"line_end":1326,"column_start":1,"column_end":87}},{"value":"/ `From::from(result)`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67268,"byte_end":67292,"line_start":1327,"line_end":1327,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":426},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69351,"byte_end":69357,"line_start":1383,"line_end":1383,"column_start":11,"column_end":17},"name":"Parser","qualname":"::primitives::Parser","value":"Parser","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":" By implementing the `Parser` trait a type says that it can be used to parse an input stream\n into the type `Output`.","sig":null,"attributes":[{"value":"/ By implementing the `Parser` trait a type says that it can be used to parse an input stream","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68648,"byte_end":68743,"line_start":1371,"line_end":1371,"column_start":1,"column_end":96}},{"value":"/ into the type `Output`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68744,"byte_end":68771,"line_start":1372,"line_end":1372,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68772,"byte_end":68775,"line_start":1373,"line_end":1373,"column_start":1,"column_end":4}},{"value":"/ All methods have a default implementation but there needs to be at least an implementation of","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68776,"byte_end":68873,"line_start":1374,"line_end":1374,"column_start":1,"column_end":98}},{"value":"/ [`parse_stream`], [`parse_stream_consumed`], or [`parse_lazy`]. If the last is implemented, an","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68874,"byte_end":68972,"line_start":1375,"line_end":1375,"column_start":1,"column_end":99}},{"value":"/ implementation of [`add_error`] may also be required. See the documentation for","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68973,"byte_end":69056,"line_start":1376,"line_end":1376,"column_start":1,"column_end":84}},{"value":"/ [`parse_lazy`] for details.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69057,"byte_end":69088,"line_start":1377,"line_end":1377,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69089,"byte_end":69092,"line_start":1378,"line_end":1378,"column_start":1,"column_end":4}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69093,"byte_end":69152,"line_start":1379,"line_end":1379,"column_start":1,"column_end":60}},{"value":"/ [`parse_stream_consumed`]: trait.Parser.html#method.parse_stream_consumed","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69153,"byte_end":69230,"line_start":1380,"line_end":1380,"column_start":1,"column_end":78}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69231,"byte_end":69286,"line_start":1381,"line_end":1381,"column_start":1,"column_end":56}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69287,"byte_end":69340,"line_start":1382,"line_end":1382,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":427},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69530,"byte_end":69535,"line_start":1386,"line_end":1386,"column_start":10,"column_end":15},"name":"Input","qualname":"::primitives::Parser::Input","value":"type Input: Stream;","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" The type which is taken as input for the parser. The type must implement the `Stream` trait\n which allows the parser to read items from the type.\n","sig":null,"attributes":[{"value":"/ The type which is taken as input for the parser. The type must implement the `Stream` trait","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69364,"byte_end":69459,"line_start":1384,"line_end":1384,"column_start":5,"column_end":100}},{"value":"/ which allows the parser to read items from the type.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69464,"byte_end":69520,"line_start":1385,"line_end":1385,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":428},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69618,"byte_end":69624,"line_start":1388,"line_end":1388,"column_start":10,"column_end":16},"name":"Output","qualname":"::primitives::Parser::Output","value":"type Output;","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" The type which is returned if the parser is successful.\n","sig":null,"attributes":[{"value":"/ The type which is returned if the parser is successful.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69549,"byte_end":69608,"line_start":1387,"line_end":1387,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69893,"byte_end":69898,"line_start":1396,"line_end":1396,"column_start":8,"column_end":13},"name":"parse","qualname":"::primitives::Parser::parse","value":"pub fn parse(&mut Self, Self::Input)\n-> Result<(Self::Output, Self::Input), ParseError<Self::Input>>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Entry point of the parser. Takes some input and tries to parse it.","sig":null,"attributes":[{"value":"/ Entry point of the parser. Takes some input and tries to parse it.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69631,"byte_end":69701,"line_start":1390,"line_end":1390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69706,"byte_end":69709,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69714,"byte_end":69796,"line_start":1392,"line_end":1392,"column_start":5,"column_end":87}},{"value":"/ [`ParseError`] otherwise.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69801,"byte_end":69830,"line_start":1393,"line_end":1393,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69835,"byte_end":69838,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ [`ParseError`]: struct.ParseError.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":69843,"byte_end":69885,"line_start":1395,"line_end":1395,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70676,"byte_end":70688,"line_start":1415,"line_end":1415,"column_start":8,"column_end":20},"name":"parse_stream","qualname":"::primitives::Parser::parse_stream","value":"pub fn parse_stream(&mut Self, Self::Input)\n-> ParseResult<Self::Output, Self::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70191,"byte_end":70275,"line_start":1406,"line_end":1406,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70280,"byte_end":70283,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ On success returns `Ok((value, new_state))`, and on failure returns `Err(error)`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70288,"byte_end":70373,"line_start":1408,"line_end":1408,"column_start":5,"column_end":90}},{"value":"/ Furthermore `new_state` and `error` are wrapped in [`Consumed`], providing information on","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70378,"byte_end":70471,"line_start":1409,"line_end":1409,"column_start":5,"column_end":98}},{"value":"/ whether this parser consumed any input data or not.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70476,"byte_end":70531,"line_start":1410,"line_end":1410,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70536,"byte_end":70539,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: trait.StreamOnce.html#tymethod.uncons","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70544,"byte_end":70605,"line_start":1412,"line_end":1412,"column_start":5,"column_end":66}},{"value":"/ [`Consumed`]: enum.Consumed.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70610,"byte_end":70646,"line_start":1413,"line_end":1413,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70651,"byte_end":70668,"line_start":1414,"line_end":1414,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71341,"byte_end":71362,"line_start":1429,"line_end":1429,"column_start":8,"column_end":29},"name":"parse_stream_consumed","qualname":"::primitives::Parser::parse_stream_consumed","value":"pub fn parse_stream_consumed(&mut Self, Self::Input)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70824,"byte_end":70908,"line_start":1419,"line_end":1419,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70913,"byte_end":70916,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to [`parse_stream`], except this method returns a flattened result","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":70921,"byte_end":71015,"line_start":1421,"line_end":1421,"column_start":5,"column_end":99}},{"value":"/ type, combining `Result` and [`Consumed`] into a single [`FastResult`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71020,"byte_end":71095,"line_start":1422,"line_end":1422,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71100,"byte_end":71103,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: trait.StreamOnce.html#tymethod.uncons","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71108,"byte_end":71169,"line_start":1424,"line_end":1424,"column_start":5,"column_end":66}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71174,"byte_end":71233,"line_start":1425,"line_end":1425,"column_start":5,"column_end":64}},{"value":"/ [`Consumed`]: enum.Consumed.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71238,"byte_end":71274,"line_start":1426,"line_end":1426,"column_start":5,"column_end":41}},{"value":"/ [`FastResult`]: enum.FastResult.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71279,"byte_end":71319,"line_start":1427,"line_end":1427,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71324,"byte_end":71333,"line_start":1428,"line_end":1428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72985,"byte_end":72995,"line_start":1464,"line_end":1464,"column_start":8,"column_end":18},"name":"parse_lazy","qualname":"::primitives::Parser::parse_lazy","value":"pub fn parse_lazy(&mut Self, Self::Input)\n-> ConsumedResult<Self::Output, Self::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71784,"byte_end":71868,"line_start":1443,"line_end":1443,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71873,"byte_end":71876,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ Specialized version of [`parse_stream_consumed`] which permits error value creation to be","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71881,"byte_end":71974,"line_start":1445,"line_end":1445,"column_start":5,"column_end":98}},{"value":"/ skipped in the common case.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":71979,"byte_end":72010,"line_start":1446,"line_end":1446,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72015,"byte_end":72018,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ When this parser returns `EmptyErr`, this method is allowed to return an empty","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72023,"byte_end":72105,"line_start":1448,"line_end":1448,"column_start":5,"column_end":87}},{"value":"/ [`ParseError`]. The error value that would have been returned can instead be obtained by","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72110,"byte_end":72202,"line_start":1449,"line_end":1449,"column_start":5,"column_end":97}},{"value":"/ calling [`add_error`]. This allows a parent parser such as `choice` to skip the creation of","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72207,"byte_end":72302,"line_start":1450,"line_end":1450,"column_start":5,"column_end":100}},{"value":"/ an unnecessary error value, if an alternative parser succeeds.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72307,"byte_end":72373,"line_start":1451,"line_end":1451,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72378,"byte_end":72381,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ External callers should never have to call this function directly.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72386,"byte_end":72456,"line_start":1453,"line_end":1453,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72461,"byte_end":72464,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ Parsers should seek to implement this function instead of the above two, if errors can be","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72469,"byte_end":72562,"line_start":1455,"line_end":1455,"column_start":5,"column_end":98}},{"value":"/ encountered before consuming input. The default implementation always returns all errors,","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72567,"byte_end":72660,"line_start":1456,"line_end":1456,"column_start":5,"column_end":98}},{"value":"/ with [`add_error`] being a no-op.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72665,"byte_end":72702,"line_start":1457,"line_end":1457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72707,"byte_end":72710,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: trait.StreamOnce.html#tymethod.uncons","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72715,"byte_end":72776,"line_start":1459,"line_end":1459,"column_start":5,"column_end":66}},{"value":"/ [`parse_stream_consumed`]: trait.Parser.html#method.parse_stream_consumed","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72781,"byte_end":72858,"line_start":1460,"line_end":1460,"column_start":5,"column_end":82}},{"value":"/ [`ParseError`]: struct.ParseError.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72863,"byte_end":72905,"line_start":1461,"line_end":1461,"column_start":5,"column_end":47}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72910,"byte_end":72963,"line_start":1462,"line_end":1462,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":72968,"byte_end":72977,"line_start":1463,"line_end":1463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73368,"byte_end":73377,"line_start":1474,"line_end":1474,"column_start":8,"column_end":17},"name":"add_error","qualname":"::primitives::Parser::add_error","value":"pub fn add_error(&mut Self, &mut ParseError<Self::Input>)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Adds the first error that would normally be returned by this parser if it failed with an\n `EmptyErr` result.","sig":null,"attributes":[{"value":"/ Adds the first error that would normally be returned by this parser if it failed with an","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73125,"byte_end":73217,"line_start":1468,"line_end":1468,"column_start":5,"column_end":97}},{"value":"/ `EmptyErr` result.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73222,"byte_end":73244,"line_start":1469,"line_end":1469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73249,"byte_end":73252,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ See [`parse_lazy`] for details.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73257,"byte_end":73292,"line_start":1471,"line_end":1471,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73297,"byte_end":73300,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73305,"byte_end":73360,"line_start":1473,"line_end":1473,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74173,"byte_end":74179,"line_start":1496,"line_end":1496,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::primitives::Parser::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Borrows a parser instead of consuming it.","sig":null,"attributes":[{"value":"/ Borrows a parser instead of consuming it.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73435,"byte_end":73480,"line_start":1476,"line_end":1476,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73485,"byte_end":73488,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ Used to apply parser combinators on `self` without losing ownership.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73493,"byte_end":73565,"line_start":1478,"line_end":1478,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73570,"byte_end":73573,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73578,"byte_end":73585,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73590,"byte_end":73617,"line_start":1481,"line_end":1481,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73622,"byte_end":73643,"line_start":1482,"line_end":1482,"column_start":5,"column_end":26}},{"value":"/ # use combine::primitives::Consumed;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73648,"byte_end":73688,"line_start":1483,"line_end":1483,"column_start":5,"column_end":45}},{"value":"/ # use combine::char::{digit, letter};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73693,"byte_end":73734,"line_start":1484,"line_end":1484,"column_start":5,"column_end":46}},{"value":"/ fn test() -> ParseResult<(char, char), &'static str> {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73739,"byte_end":73797,"line_start":1485,"line_end":1485,"column_start":5,"column_end":63}},{"value":"/     let mut p = digit();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73802,"byte_end":73830,"line_start":1486,"line_end":1486,"column_start":5,"column_end":33}},{"value":"/     let ((d, _), input) = try!((p.by_ref(), letter()).parse_stream(\"1a23\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73835,"byte_end":73915,"line_start":1487,"line_end":1487,"column_start":5,"column_end":85}},{"value":"/     let (d2, input) = try!(input.combine(|input| p.parse_stream(input)));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":73920,"byte_end":73997,"line_start":1488,"line_end":1488,"column_start":5,"column_end":82}},{"value":"/     Ok(((d, d2), input))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74002,"byte_end":74030,"line_start":1489,"line_end":1489,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74035,"byte_end":74040,"line_start":1490,"line_end":1490,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74045,"byte_end":74048,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74053,"byte_end":74068,"line_start":1492,"line_end":1492,"column_start":5,"column_end":20}},{"value":"/     assert_eq!(test(), Ok((('1', '2'), Consumed::Consumed(\"3\"))));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74073,"byte_end":74143,"line_start":1493,"line_end":1493,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74148,"byte_end":74153,"line_start":1494,"line_end":1494,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74158,"byte_end":74165,"line_start":1495,"line_end":1495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74697,"byte_end":74701,"line_start":1518,"line_end":1518,"column_start":8,"column_end":12},"name":"with","qualname":"::primitives::Parser::with","value":"pub fn with<P2>(Self, P2) -> With<Self, P2> where Self: Sized,\nP2: Parser<Input = Self::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Discards the value of the `self` parser and returns the value of `p`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `self` parser and returns the value of `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74265,"byte_end":74338,"line_start":1503,"line_end":1503,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74343,"byte_end":74381,"line_start":1504,"line_end":1504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74386,"byte_end":74389,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74394,"byte_end":74401,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74406,"byte_end":74433,"line_start":1507,"line_end":1507,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74438,"byte_end":74459,"line_start":1508,"line_end":1508,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74464,"byte_end":74495,"line_start":1509,"line_end":1509,"column_start":5,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74500,"byte_end":74517,"line_start":1510,"line_end":1510,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74522,"byte_end":74546,"line_start":1511,"line_end":1511,"column_start":5,"column_end":29}},{"value":"/     .with(token('i'))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74551,"byte_end":74576,"line_start":1512,"line_end":1512,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74581,"byte_end":74601,"line_start":1513,"line_end":1513,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74606,"byte_end":74628,"line_start":1514,"line_end":1514,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('i'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74633,"byte_end":74665,"line_start":1515,"line_end":1515,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74670,"byte_end":74677,"line_start":1516,"line_end":1516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74682,"byte_end":74689,"line_start":1517,"line_end":1517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75280,"byte_end":75284,"line_start":1541,"line_end":1541,"column_start":8,"column_end":12},"name":"skip","qualname":"::primitives::Parser::skip","value":"pub fn skip<P2>(Self, P2) -> Skip<Self, P2> where Self: Sized,\nP2: Parser<Input = Self::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Discards the value of the `p` parser and returns the value of `self`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `p` parser and returns the value of `self`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74848,"byte_end":74921,"line_start":1526,"line_end":1526,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74926,"byte_end":74964,"line_start":1527,"line_end":1527,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74969,"byte_end":74972,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74977,"byte_end":74984,"line_start":1529,"line_end":1529,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":74989,"byte_end":75016,"line_start":1530,"line_end":1530,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75021,"byte_end":75042,"line_start":1531,"line_end":1531,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75047,"byte_end":75078,"line_start":1532,"line_end":1532,"column_start":5,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75083,"byte_end":75100,"line_start":1533,"line_end":1533,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75105,"byte_end":75129,"line_start":1534,"line_end":1534,"column_start":5,"column_end":29}},{"value":"/     .skip(token('i'))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75134,"byte_end":75159,"line_start":1535,"line_end":1535,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75164,"byte_end":75184,"line_start":1536,"line_end":1536,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75189,"byte_end":75211,"line_start":1537,"line_end":1537,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('9'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75216,"byte_end":75248,"line_start":1538,"line_end":1538,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75253,"byte_end":75260,"line_start":1539,"line_end":1539,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75265,"byte_end":75272,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75904,"byte_end":75907,"line_start":1565,"line_end":1565,"column_start":8,"column_end":11},"name":"and","qualname":"::primitives::Parser::and","value":"pub fn and<P2>(Self, P2) -> (Self, P2) where Self: Sized, P2: Parser<Input =\nSelf::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses with `self` followed by `p`.\n Succeeds if both parsers succeed, otherwise fails.\n Returns a tuple with both values on success.","sig":null,"attributes":[{"value":"/ Parses with `self` followed by `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75431,"byte_end":75470,"line_start":1549,"line_end":1549,"column_start":5,"column_end":44}},{"value":"/ Succeeds if both parsers succeed, otherwise fails.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75475,"byte_end":75529,"line_start":1550,"line_end":1550,"column_start":5,"column_end":59}},{"value":"/ Returns a tuple with both values on success.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75534,"byte_end":75582,"line_start":1551,"line_end":1551,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75587,"byte_end":75590,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75595,"byte_end":75602,"line_start":1553,"line_end":1553,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75607,"byte_end":75634,"line_start":1554,"line_end":1554,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75639,"byte_end":75660,"line_start":1555,"line_end":1555,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75665,"byte_end":75696,"line_start":1556,"line_end":1556,"column_start":5,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75701,"byte_end":75718,"line_start":1557,"line_end":1557,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75723,"byte_end":75747,"line_start":1558,"line_end":1558,"column_start":5,"column_end":29}},{"value":"/     .and(token('i'))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75752,"byte_end":75776,"line_start":1559,"line_end":1559,"column_start":5,"column_end":29}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75781,"byte_end":75801,"line_start":1560,"line_end":1560,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75806,"byte_end":75828,"line_start":1561,"line_end":1561,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(('9', 'i')));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75833,"byte_end":75872,"line_start":1562,"line_end":1562,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75877,"byte_end":75884,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":75889,"byte_end":75896,"line_start":1564,"line_end":1564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77332,"byte_end":77334,"line_start":1602,"line_end":1602,"column_start":8,"column_end":10},"name":"or","qualname":"::primitives::Parser::or","value":"pub fn or<P2>(Self, P2) -> Or<Self, P2> where Self: Sized, P2: Parser<Input =\nSelf::Input, Output = Self::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Returns a parser which attempts to parse using `self`. If `self` fails without consuming\n any input it tries to consume the same input using `p`.","sig":null,"attributes":[{"value":"/ Returns a parser which attempts to parse using `self`. If `self` fails without consuming","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76046,"byte_end":76138,"line_start":1573,"line_end":1573,"column_start":5,"column_end":97}},{"value":"/ any input it tries to consume the same input using `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76143,"byte_end":76202,"line_start":1574,"line_end":1574,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76207,"byte_end":76210,"line_start":1575,"line_end":1575,"column_start":5,"column_end":8}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76215,"byte_end":76302,"line_start":1576,"line_end":1576,"column_start":5,"column_end":92}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76307,"byte_end":76393,"line_start":1577,"line_end":1577,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76398,"byte_end":76401,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76406,"byte_end":76413,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76418,"byte_end":76445,"line_start":1580,"line_end":1580,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76450,"byte_end":76471,"line_start":1581,"line_end":1581,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::{digit, string};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76476,"byte_end":76517,"line_start":1582,"line_end":1582,"column_start":5,"column_end":46}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76522,"byte_end":76539,"line_start":1583,"line_end":1583,"column_start":5,"column_end":22}},{"value":"/ let mut parser = string(\"let\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76544,"byte_end":76578,"line_start":1584,"line_end":1584,"column_start":5,"column_end":39}},{"value":"/     .or(digit().map(|_| \"digit\"))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76583,"byte_end":76620,"line_start":1585,"line_end":1585,"column_start":5,"column_end":42}},{"value":"/     .or(string(\"led\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76625,"byte_end":76652,"line_start":1586,"line_end":1586,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(parser.parse(\"let\"), Ok((\"let\", \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76657,"byte_end":76710,"line_start":1587,"line_end":1587,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parser.parse(\"1\"), Ok((\"digit\", \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76715,"byte_end":76768,"line_start":1588,"line_end":1588,"column_start":5,"column_end":58}},{"value":"/ assert!(parser.parse(\"led\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76773,"byte_end":76815,"line_start":1589,"line_end":1589,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76820,"byte_end":76823,"line_start":1590,"line_end":1590,"column_start":5,"column_end":8}},{"value":"/ let mut parser2 = string(\"two\").or(string(\"three\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76828,"byte_end":76884,"line_start":1591,"line_end":1591,"column_start":5,"column_end":61}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76889,"byte_end":76963,"line_start":1592,"line_end":1592,"column_start":5,"column_end":79}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":76968,"byte_end":77013,"line_start":1593,"line_end":1593,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77018,"byte_end":77021,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ // Use 'try' to make failing parsers always act as if they have not consumed any input","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77026,"byte_end":77116,"line_start":1595,"line_end":1595,"column_start":5,"column_end":95}},{"value":"/ let mut parser3 = try(string(\"two\")).or(try(string(\"three\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77121,"byte_end":77187,"line_start":1596,"line_end":1596,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77192,"byte_end":77250,"line_start":1597,"line_end":1597,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77255,"byte_end":77262,"line_start":1598,"line_end":1598,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77267,"byte_end":77274,"line_start":1599,"line_end":1599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77279,"byte_end":77282,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ [`choice!`]: ../macro.choice.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77287,"byte_end":77324,"line_start":1601,"line_end":1601,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78426,"byte_end":78430,"line_start":1636,"line_end":1636,"column_start":8,"column_end":12},"name":"then","qualname":"::primitives::Parser::then","value":"pub fn then<N, F>(Self, F) -> Then<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> N, N: Parser<Input = Self::Input>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses using `self` and then passes the value to `f` which returns a parser used to parse\n the rest of the input.","sig":null,"attributes":[{"value":"/ Parses using `self` and then passes the value to `f` which returns a parser used to parse","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77500,"byte_end":77593,"line_start":1610,"line_end":1610,"column_start":5,"column_end":98}},{"value":"/ the rest of the input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77598,"byte_end":77624,"line_start":1611,"line_end":1611,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77629,"byte_end":77632,"line_start":1612,"line_end":1612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77637,"byte_end":77644,"line_start":1613,"line_end":1613,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77649,"byte_end":77676,"line_start":1614,"line_end":1614,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77681,"byte_end":77702,"line_start":1615,"line_end":1615,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77707,"byte_end":77738,"line_start":1616,"line_end":1616,"column_start":5,"column_end":36}},{"value":"/ # use combine::primitives::{Consumed, Error};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77743,"byte_end":77792,"line_start":1617,"line_end":1617,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77797,"byte_end":77814,"line_start":1618,"line_end":1618,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77819,"byte_end":77843,"line_start":1619,"line_end":1619,"column_start":5,"column_end":29}},{"value":"/     .then(|d| parser(move |input| {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77848,"byte_end":77887,"line_start":1620,"line_end":1620,"column_start":5,"column_end":44}},{"value":"/             // Force input to be a &str","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77892,"byte_end":77935,"line_start":1621,"line_end":1621,"column_start":5,"column_end":48}},{"value":"/             let _: &str = input;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77940,"byte_end":77976,"line_start":1622,"line_end":1622,"column_start":5,"column_end":41}},{"value":"/         if d == '9' {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":77981,"byte_end":78006,"line_start":1623,"line_end":1623,"column_start":5,"column_end":30}},{"value":"/             Ok((9, Consumed::Empty(input)))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78011,"byte_end":78058,"line_start":1624,"line_end":1624,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78063,"byte_end":78076,"line_start":1625,"line_end":1625,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78081,"byte_end":78099,"line_start":1626,"line_end":1626,"column_start":5,"column_end":23}},{"value":"/             let position = input.position();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78104,"byte_end":78152,"line_start":1627,"line_end":1627,"column_start":5,"column_end":53}},{"value":"/             let err = ParseError::new(position, Error::Message(\"Not a nine\".into()));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78157,"byte_end":78246,"line_start":1628,"line_end":1628,"column_start":5,"column_end":94}},{"value":"/             Err((Consumed::Empty(err)))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78251,"byte_end":78294,"line_start":1629,"line_end":1629,"column_start":5,"column_end":48}},{"value":"/         }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78299,"byte_end":78312,"line_start":1630,"line_end":1630,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78317,"byte_end":78328,"line_start":1631,"line_end":1631,"column_start":5,"column_end":16}},{"value":"/     .parse(\"9\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78333,"byte_end":78353,"line_start":1632,"line_end":1632,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(result, Ok((9, \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78358,"byte_end":78394,"line_start":1633,"line_end":1633,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78399,"byte_end":78406,"line_start":1634,"line_end":1634,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78411,"byte_end":78418,"line_start":1635,"line_end":1635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78972,"byte_end":78975,"line_start":1659,"line_end":1659,"column_start":8,"column_end":11},"name":"map","qualname":"::primitives::Parser::map","value":"pub fn map<F, B>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> B","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Uses `f` to map over the parsed value.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the parsed value.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78613,"byte_end":78655,"line_start":1645,"line_end":1645,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78660,"byte_end":78663,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78668,"byte_end":78675,"line_start":1647,"line_end":1647,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78680,"byte_end":78707,"line_start":1648,"line_end":1648,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78712,"byte_end":78733,"line_start":1649,"line_end":1649,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78738,"byte_end":78769,"line_start":1650,"line_end":1650,"column_start":5,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78774,"byte_end":78791,"line_start":1651,"line_end":1651,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78796,"byte_end":78820,"line_start":1652,"line_end":1652,"column_start":5,"column_end":29}},{"value":"/     .map(|c| c == '9')","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78825,"byte_end":78851,"line_start":1653,"line_end":1653,"column_start":5,"column_end":31}},{"value":"/     .parse(\"9\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78856,"byte_end":78875,"line_start":1654,"line_end":1654,"column_start":5,"column_end":24}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78880,"byte_end":78902,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(true));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78907,"byte_end":78940,"line_start":1656,"line_end":1656,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78945,"byte_end":78952,"line_start":1657,"line_end":1657,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":78957,"byte_end":78964,"line_start":1658,"line_end":1658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79592,"byte_end":79600,"line_start":1681,"line_end":1681,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::primitives::Parser::flat_map","value":"pub fn flat_map<F, B>(Self, F) -> FlatMap<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> Result<B, ParseError<Self::Input>>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79116,"byte_end":79204,"line_start":1667,"line_end":1667,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79209,"byte_end":79212,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79217,"byte_end":79224,"line_start":1669,"line_end":1669,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79229,"byte_end":79256,"line_start":1670,"line_end":1670,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79261,"byte_end":79282,"line_start":1671,"line_end":1671,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79287,"byte_end":79318,"line_start":1672,"line_end":1672,"column_start":5,"column_end":36}},{"value":"/ # use combine::range::take;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79323,"byte_end":79354,"line_start":1673,"line_end":1673,"column_start":5,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79359,"byte_end":79376,"line_start":1674,"line_end":1674,"column_start":5,"column_end":22}},{"value":"/ let result = take(4)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79381,"byte_end":79405,"line_start":1675,"line_end":1675,"column_start":5,"column_end":29}},{"value":"/     .flat_map(|bs| many(digit()).parse(bs).map(|t| t.0))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79410,"byte_end":79470,"line_start":1676,"line_end":1676,"column_start":5,"column_end":65}},{"value":"/     .parse(\"12abcd\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79475,"byte_end":79500,"line_start":1677,"line_end":1677,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((String::from(\"12\"), \"cd\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79505,"byte_end":79560,"line_start":1678,"line_end":1678,"column_start":5,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79565,"byte_end":79572,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79577,"byte_end":79584,"line_start":1680,"line_end":1680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80445,"byte_end":80452,"line_start":1709,"line_end":1709,"column_start":8,"column_end":15},"name":"message","qualname":"::primitives::Parser::message","value":"pub fn message<S>(Self, S) -> Message<Self> where Self: Sized,\nS: Into<Info<<Self::Input as StreamOnce>::Item,\n             <Self::Input as StreamOnce>::Range>>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails, adds the message `msg` to the error.","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails, adds the message `msg` to the error.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79783,"byte_end":79859,"line_start":1689,"line_end":1689,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79864,"byte_end":79867,"line_start":1690,"line_end":1690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79872,"byte_end":79879,"line_start":1691,"line_end":1691,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79884,"byte_end":79911,"line_start":1692,"line_end":1692,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79916,"byte_end":79937,"line_start":1693,"line_end":1693,"column_start":5,"column_end":26}},{"value":"/ # use combine::primitives::{Error, Positioner};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79942,"byte_end":79993,"line_start":1694,"line_end":1694,"column_start":5,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":79998,"byte_end":80015,"line_start":1695,"line_end":1695,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80020,"byte_end":80047,"line_start":1696,"line_end":1696,"column_start":5,"column_end":32}},{"value":"/     .message(\"Not a nine\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80052,"byte_end":80082,"line_start":1697,"line_end":1697,"column_start":5,"column_end":35}},{"value":"/     .parse(State::new(\"8\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80087,"byte_end":80119,"line_start":1698,"line_end":1698,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(result, Err(ParseError {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80124,"byte_end":80163,"line_start":1699,"line_end":1699,"column_start":5,"column_end":44}},{"value":"/     position: <char as Positioner>::start(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80168,"byte_end":80216,"line_start":1700,"line_end":1700,"column_start":5,"column_end":53}},{"value":"/     errors: vec![","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80221,"byte_end":80242,"line_start":1701,"line_end":1701,"column_start":5,"column_end":26}},{"value":"/         Error::Unexpected('8'.into()),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80247,"byte_end":80289,"line_start":1702,"line_end":1702,"column_start":5,"column_end":47}},{"value":"/         Error::Expected('9'.into()),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80294,"byte_end":80334,"line_start":1703,"line_end":1703,"column_start":5,"column_end":45}},{"value":"/         Error::Message(\"Not a nine\".into())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80339,"byte_end":80386,"line_start":1704,"line_end":1704,"column_start":5,"column_end":52}},{"value":"/     ]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80391,"byte_end":80400,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80405,"byte_end":80413,"line_start":1706,"line_end":1706,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80418,"byte_end":80425,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80430,"byte_end":80437,"line_start":1708,"line_end":1708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81323,"byte_end":81331,"line_start":1734,"line_end":1734,"column_start":8,"column_end":16},"name":"expected","qualname":"::primitives::Parser::expected","value":"pub fn expected<S>(Self, S) -> Expected<Self> where Self: Sized,\nS: Into<Info<<Self::Input as StreamOnce>::Item,\n             <Self::Input as StreamOnce>::Range>>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails without consuming any input any expected errors are\n replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails without consuming any input any expected errors are","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80663,"byte_end":80753,"line_start":1717,"line_end":1717,"column_start":5,"column_end":95}},{"value":"/ replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80758,"byte_end":80838,"line_start":1718,"line_end":1718,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80843,"byte_end":80846,"line_start":1719,"line_end":1719,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80851,"byte_end":80858,"line_start":1720,"line_end":1720,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80863,"byte_end":80890,"line_start":1721,"line_end":1721,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80895,"byte_end":80916,"line_start":1722,"line_end":1722,"column_start":5,"column_end":26}},{"value":"/ # use combine::primitives::{Error, Positioner};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80921,"byte_end":80972,"line_start":1723,"line_end":1723,"column_start":5,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80977,"byte_end":80994,"line_start":1724,"line_end":1724,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":80999,"byte_end":81026,"line_start":1725,"line_end":1725,"column_start":5,"column_end":32}},{"value":"/     .expected(\"nine\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81031,"byte_end":81056,"line_start":1726,"line_end":1726,"column_start":5,"column_end":30}},{"value":"/     .parse(State::new(\"8\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81061,"byte_end":81093,"line_start":1727,"line_end":1727,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(result, Err(ParseError {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81098,"byte_end":81137,"line_start":1728,"line_end":1728,"column_start":5,"column_end":44}},{"value":"/     position: <char as Positioner>::start(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81142,"byte_end":81190,"line_start":1729,"line_end":1729,"column_start":5,"column_end":53}},{"value":"/     errors: vec![Error::Unexpected('8'.into()), Error::Expected(\"nine\".into())]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81195,"byte_end":81278,"line_start":1730,"line_end":1730,"column_start":5,"column_end":88}},{"value":"/ }));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81283,"byte_end":81291,"line_start":1731,"line_end":1731,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81296,"byte_end":81303,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81308,"byte_end":81315,"line_start":1733,"line_end":1733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82443,"byte_end":82451,"line_start":1761,"line_end":1761,"column_start":8,"column_end":16},"name":"and_then","qualname":"::primitives::Parser::and_then","value":"pub fn and_then<F, O, E>(Self, F) -> AndThen<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> Result<O, E>,\nE: Into<Error<<Self::Input as StreamOnce>::Item,\n              <Self::Input as StreamOnce>::Range>>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Parses with `self` and applies `f` on the result if `self` parses successfully.\n `f` may optionally fail with an error which is automatically converted to a `ParseError`.","sig":null,"attributes":[{"value":"/ Parses with `self` and applies `f` on the result if `self` parses successfully.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81544,"byte_end":81627,"line_start":1742,"line_end":1742,"column_start":5,"column_end":88}},{"value":"/ `f` may optionally fail with an error which is automatically converted to a `ParseError`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81632,"byte_end":81725,"line_start":1743,"line_end":1743,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81730,"byte_end":81733,"line_start":1744,"line_end":1744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81738,"byte_end":81745,"line_start":1745,"line_end":1745,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81750,"byte_end":81777,"line_start":1746,"line_end":1746,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81782,"byte_end":81803,"line_start":1747,"line_end":1747,"column_start":5,"column_end":26}},{"value":"/ # use combine::primitives::SourcePosition;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81808,"byte_end":81854,"line_start":1748,"line_end":1748,"column_start":5,"column_end":51}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81859,"byte_end":81890,"line_start":1749,"line_end":1749,"column_start":5,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81895,"byte_end":81912,"line_start":1750,"line_end":1750,"column_start":5,"column_end":22}},{"value":"/ let mut parser = many1(digit())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81917,"byte_end":81952,"line_start":1751,"line_end":1751,"column_start":5,"column_end":40}},{"value":"/     .and_then(|s: String| s.parse::<i32>());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":81957,"byte_end":82005,"line_start":1752,"line_end":1752,"column_start":5,"column_end":53}},{"value":"/ let result = parser.parse(State::new(\"1234\")).map(|(x, state)| (x, state.input));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82010,"byte_end":82095,"line_start":1753,"line_end":1753,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(result, Ok((1234, \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82100,"byte_end":82139,"line_start":1754,"line_end":1754,"column_start":5,"column_end":44}},{"value":"/ let result = parser.parse(State::new(\"999999999999999999999999\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82144,"byte_end":82214,"line_start":1755,"line_end":1755,"column_start":5,"column_end":75}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82219,"byte_end":82248,"line_start":1756,"line_end":1756,"column_start":5,"column_end":34}},{"value":"/ // Errors are report as if they occured at the start of the parse","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82253,"byte_end":82322,"line_start":1757,"line_end":1757,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(result.unwrap_err().position, SourcePosition { line: 1, column: 1 });","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82327,"byte_end":82411,"line_start":1758,"line_end":1758,"column_start":5,"column_end":89}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82416,"byte_end":82423,"line_start":1759,"line_end":1759,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82428,"byte_end":82435,"line_start":1760,"line_end":1760,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83532,"byte_end":83536,"line_start":1793,"line_end":1793,"column_start":8,"column_end":12},"name":"iter","qualname":"::primitives::Parser::iter","value":"pub fn iter(Self, Self::Input) -> Iter<Self> where Self: Sized","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Creates an iterator from a parser and a state. Can be used as an alternative to [`many`] when\n collecting directly into a `FromIterator` type is not desirable.","sig":null,"attributes":[{"value":"/ Creates an iterator from a parser and a state. Can be used as an alternative to [`many`] when","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82710,"byte_end":82807,"line_start":1770,"line_end":1770,"column_start":5,"column_end":102}},{"value":"/ collecting directly into a `FromIterator` type is not desirable.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82812,"byte_end":82880,"line_start":1771,"line_end":1771,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82885,"byte_end":82888,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82893,"byte_end":82900,"line_start":1773,"line_end":1773,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82905,"byte_end":82932,"line_start":1774,"line_end":1774,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82937,"byte_end":82958,"line_start":1775,"line_end":1775,"column_start":5,"column_end":26}},{"value":"/ # use combine::char::{char, digit};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":82963,"byte_end":83002,"line_start":1776,"line_end":1776,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83007,"byte_end":83024,"line_start":1777,"line_end":1777,"column_start":5,"column_end":22}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83029,"byte_end":83064,"line_start":1778,"line_end":1778,"column_start":5,"column_end":40}},{"value":"/ let number = parser(|input| {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83069,"byte_end":83102,"line_start":1779,"line_end":1779,"column_start":5,"column_end":38}},{"value":"/     buffer.clear();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83107,"byte_end":83130,"line_start":1780,"line_end":1780,"column_start":5,"column_end":28}},{"value":"/     let mut iter = digit().iter(input);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83135,"byte_end":83178,"line_start":1781,"line_end":1781,"column_start":5,"column_end":48}},{"value":"/     buffer.extend(&mut iter);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83183,"byte_end":83216,"line_start":1782,"line_end":1782,"column_start":5,"column_end":38}},{"value":"/     let i = buffer.parse::<i32>().unwrap();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83221,"byte_end":83268,"line_start":1783,"line_end":1783,"column_start":5,"column_end":52}},{"value":"/     iter.into_result(i)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83273,"byte_end":83300,"line_start":1784,"line_end":1784,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83305,"byte_end":83312,"line_start":1785,"line_end":1785,"column_start":5,"column_end":12}},{"value":"/ let result = sep_by(number, char(','))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83317,"byte_end":83359,"line_start":1786,"line_end":1786,"column_start":5,"column_end":47}},{"value":"/     .parse(\"123,45,6\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83364,"byte_end":83391,"line_start":1787,"line_end":1787,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(result, Ok((vec![123, 45, 6], \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83396,"byte_end":83447,"line_start":1788,"line_end":1788,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83452,"byte_end":83459,"line_start":1789,"line_end":1789,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83464,"byte_end":83471,"line_start":1790,"line_end":1790,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83476,"byte_end":83479,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ [`many`]: ../combinator/fn.many.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83484,"byte_end":83524,"line_start":1792,"line_end":1792,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84288,"byte_end":84293,"line_start":1817,"line_end":1817,"column_start":8,"column_end":13},"name":"boxed","qualname":"::primitives::Parser::boxed","value":"pub fn boxed<'a>(Self)\n-> Box<Parser<Input = Self::Input, Output = Self::Input> + 'a> where\nSelf: Sized + 'a","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Turns the parser into a trait object by putting it in a `Box`. Can be used to easily\n return parsers from functions without naming the type.","sig":null,"attributes":[{"value":"/ Turns the parser into a trait object by putting it in a `Box`. Can be used to easily","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83656,"byte_end":83744,"line_start":1800,"line_end":1800,"column_start":5,"column_end":93}},{"value":"/ return parsers from functions without naming the type.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83749,"byte_end":83807,"line_start":1801,"line_end":1801,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83812,"byte_end":83815,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83820,"byte_end":83827,"line_start":1803,"line_end":1803,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83832,"byte_end":83859,"line_start":1804,"line_end":1804,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83864,"byte_end":83885,"line_start":1805,"line_end":1805,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83890,"byte_end":83907,"line_start":1806,"line_end":1806,"column_start":5,"column_end":22}},{"value":"/ fn test<'input, F>(c: char, f: F) ->  Box<Parser<Input = &'input str, Output = (char, char)>>","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":83912,"byte_end":84009,"line_start":1807,"line_end":1807,"column_start":5,"column_end":102}},{"value":"/     where F: FnMut(char) -> bool + 'static","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84014,"byte_end":84060,"line_start":1808,"line_end":1808,"column_start":5,"column_end":51}},{"value":"/ {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84065,"byte_end":84070,"line_start":1809,"line_end":1809,"column_start":5,"column_end":10}},{"value":"/     (token(c), satisfy(f)).boxed()","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84075,"byte_end":84113,"line_start":1810,"line_end":1810,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84118,"byte_end":84123,"line_start":1811,"line_end":1811,"column_start":5,"column_end":10}},{"value":"/ let result = test('a', |c| c >= 'a' && c <= 'f')","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84128,"byte_end":84180,"line_start":1812,"line_end":1812,"column_start":5,"column_end":57}},{"value":"/     .parse(\"ac\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84185,"byte_end":84206,"line_start":1813,"line_end":1813,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(result, Ok((('a', 'c'), \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84211,"byte_end":84256,"line_start":1814,"line_end":1814,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84261,"byte_end":84268,"line_start":1815,"line_end":1815,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":84273,"byte_end":84280,"line_start":1816,"line_end":1816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":85921,"byte_end":85935,"line_start":1882,"line_end":1882,"column_start":12,"column_end":26},"name":"BufferedStream","qualname":"::primitives::BufferedStream","value":"BufferedStream {  }","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" A `BufferedStream` wraps an instance `StreamOnce`, allowing it to be used as a `Stream`.\n","sig":null,"attributes":[{"value":"/ A `BufferedStream` wraps an instance `StreamOnce`, allowing it to be used as a `Stream`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":85817,"byte_end":85909,"line_start":1881,"line_end":1881,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":86742,"byte_end":86762,"line_start":1921,"line_end":1921,"column_start":12,"column_end":32},"name":"SharedBufferedStream","qualname":"::primitives::SharedBufferedStream","value":"SharedBufferedStream {  }","parent":null,"children":[{"krate":0,"index":499}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":88665,"byte_end":88674,"line_start":1992,"line_end":1992,"column_start":12,"column_end":21},"name":"as_stream","qualname":"<SharedBufferedStream<I>>::as_stream","value":"pub fn as_stream(&Self) -> BufferedStream<, I>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89448,"byte_end":89451,"line_start":2017,"line_end":2017,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferedStream>::new","value":"pub fn new(I, usize) -> SharedBufferedStream<I>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `BufferedStream` froma a `StreamOnce` instance with a `lookahead` number\n of elements stored in the buffer.","sig":null,"attributes":[{"value":"/ Constructs a new `BufferedStream` froma a `StreamOnce` instance with a `lookahead` number","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89161,"byte_end":89254,"line_start":2012,"line_end":2012,"column_start":5,"column_end":98}},{"value":"/ of elements stored in the buffer.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89259,"byte_end":89296,"line_start":2013,"line_end":2013,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89301,"byte_end":89304,"line_start":2014,"line_end":2014,"column_start":5,"column_end":8}},{"value":"/ `BufferedStream` always implement `Stream` allowing one-shot streams to used as if it could","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89309,"byte_end":89404,"line_start":2015,"line_end":2015,"column_start":5,"column_end":100}},{"value":"/ be used multiple times.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89409,"byte_end":89436,"line_start":2016,"line_end":2016,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":526},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::combinator","value":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":2821},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":1444},{"krate":0,"index":1448},{"krate":0,"index":541},{"krate":0,"index":546},{"krate":0,"index":1451},{"krate":0,"index":1456},{"krate":0,"index":548},{"krate":0,"index":552},{"krate":0,"index":559},{"krate":0,"index":1460},{"krate":0,"index":1465},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":1469},{"krate":0,"index":1473},{"krate":0,"index":573},{"krate":0,"index":580},{"krate":0,"index":1476},{"krate":0,"index":1484},{"krate":0,"index":582},{"krate":0,"index":591},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":595},{"krate":0,"index":600},{"krate":0,"index":1495},{"krate":0,"index":1501},{"krate":0,"index":602},{"krate":0,"index":1505},{"krate":0,"index":1510},{"krate":0,"index":611},{"krate":0,"index":620},{"krate":0,"index":1514},{"krate":0,"index":1519},{"krate":0,"index":623},{"krate":0,"index":631},{"krate":0,"index":1523},{"krate":0,"index":1529},{"krate":0,"index":634},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":1533},{"krate":0,"index":1543},{"krate":0,"index":1555},{"krate":0,"index":1562},{"krate":0,"index":646},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":1566},{"krate":0,"index":1576},{"krate":0,"index":659},{"krate":0,"index":1589},{"krate":0,"index":1594},{"krate":0,"index":663},{"krate":0,"index":669},{"krate":0,"index":1597},{"krate":0,"index":1603},{"krate":0,"index":672},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":1607},{"krate":0,"index":1617},{"krate":0,"index":1628},{"krate":0,"index":1632},{"krate":0,"index":683},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":697},{"krate":0,"index":706},{"krate":0,"index":713},{"krate":0,"index":1635},{"krate":0,"index":1641},{"krate":0,"index":717},{"krate":0,"index":723},{"krate":0,"index":1645},{"krate":0,"index":1651},{"krate":0,"index":726},{"krate":0,"index":1663},{"krate":0,"index":1667},{"krate":0,"index":1655},{"krate":0,"index":733},{"krate":0,"index":1678},{"krate":0,"index":1682},{"krate":0,"index":1670},{"krate":0,"index":737},{"krate":0,"index":741},{"krate":0,"index":1685},{"krate":0,"index":1692},{"krate":0,"index":744},{"krate":0,"index":753},{"krate":0,"index":1697},{"krate":0,"index":1704},{"krate":0,"index":757},{"krate":0,"index":766},{"krate":0,"index":1709},{"krate":0,"index":1716},{"krate":0,"index":770},{"krate":0,"index":779},{"krate":0,"index":1721},{"krate":0,"index":1728},{"krate":0,"index":783},{"krate":0,"index":793},{"krate":0,"index":797},{"krate":0,"index":1733},{"krate":0,"index":1739},{"krate":0,"index":804},{"krate":0,"index":808},{"krate":0,"index":815},{"krate":0,"index":1743},{"krate":0,"index":1747},{"krate":0,"index":821},{"krate":0,"index":826},{"krate":0,"index":1760},{"krate":0,"index":1766},{"krate":0,"index":1750},{"krate":0,"index":828},{"krate":0,"index":1771},{"krate":0,"index":1777},{"krate":0,"index":833},{"krate":0,"index":841},{"krate":0,"index":1781},{"krate":0,"index":1787},{"krate":0,"index":844},{"krate":0,"index":852},{"krate":0,"index":1791},{"krate":0,"index":1795},{"krate":0,"index":855},{"krate":0,"index":862},{"krate":0,"index":1798},{"krate":0,"index":1802},{"krate":0,"index":864},{"krate":0,"index":872},{"krate":0,"index":1805},{"krate":0,"index":1810},{"krate":0,"index":874},{"krate":0,"index":883},{"krate":0,"index":1814},{"krate":0,"index":1819},{"krate":0,"index":886},{"krate":0,"index":895},{"krate":0,"index":1823},{"krate":0,"index":1828},{"krate":0,"index":898},{"krate":0,"index":905},{"krate":0,"index":1831},{"krate":0,"index":1837},{"krate":0,"index":907},{"krate":0,"index":916},{"krate":0,"index":1841},{"krate":0,"index":1847},{"krate":0,"index":919},{"krate":0,"index":929},{"krate":0,"index":1851},{"krate":0,"index":1857},{"krate":0,"index":933},{"krate":0,"index":943},{"krate":0,"index":1861},{"krate":0,"index":1867},{"krate":0,"index":947},{"krate":0,"index":955},{"krate":0,"index":1871},{"krate":0,"index":1876},{"krate":0,"index":959},{"krate":0,"index":966},{"krate":0,"index":1879},{"krate":0,"index":1885},{"krate":0,"index":968},{"krate":0,"index":977},{"krate":0,"index":1889},{"krate":0,"index":1897},{"krate":0,"index":1906},{"krate":0,"index":1916},{"krate":0,"index":1927},{"krate":0,"index":1939},{"krate":0,"index":1952},{"krate":0,"index":1966},{"krate":0,"index":1981},{"krate":0,"index":1997},{"krate":0,"index":2014},{"krate":0,"index":2032},{"krate":0,"index":2043},{"krate":0,"index":2038},{"krate":0,"index":987},{"krate":0,"index":994},{"krate":0,"index":2047},{"krate":0,"index":2057},{"krate":0,"index":2053},{"krate":0,"index":998},{"krate":0,"index":1007}],"decl_id":null,"docs":" Module containing all specific parsers.\n","sig":null,"attributes":[{"value":"/ Module containing all specific parsers.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17225,"byte_end":17268,"line_start":484,"line_end":484,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1444},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":94833,"byte_end":94836,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"Any","qualname":"::combinator::Any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":546},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95690,"byte_end":95693,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"any","qualname":"::combinator::any","value":"pub fn any<I>() -> Any<I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses any token.","sig":null,"attributes":[{"value":"/ Parses any token.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95254,"byte_end":95275,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95276,"byte_end":95279,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95280,"byte_end":95287,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95288,"byte_end":95315,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95316,"byte_end":95337,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95338,"byte_end":95355,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ let mut char_parser = any();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95356,"byte_end":95388,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(char_parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95389,"byte_end":95450,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/ assert!(char_parser.parse(\"\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95451,"byte_end":95495,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/ let mut byte_parser = any();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95496,"byte_end":95528,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(byte_parser.parse(&b\"!\"[..]).map(|x| x.0), Ok(b'!'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95529,"byte_end":95597,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ assert!(byte_parser.parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95598,"byte_end":95648,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95649,"byte_end":95656,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95657,"byte_end":95664,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95665,"byte_end":95682,"line_start":68,"line_end":68,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1451},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":95786,"byte_end":95793,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"Satisfy","qualname":"::combinator::Satisfy","value":"Satisfy {  }","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97014,"byte_end":97021,"line_start":128,"line_end":128,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::combinator::satisfy","value":"pub fn satisfy<I, P>(P) -> Satisfy<I, P> where I: Stream, P: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and succeeds depending on the result of `predicate`.","sig":null,"attributes":[{"value":"/ Parses a token and succeeds depending on the result of `predicate`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96651,"byte_end":96722,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96723,"byte_end":96726,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96727,"byte_end":96734,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96735,"byte_end":96762,"line_start":119,"line_end":119,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96763,"byte_end":96784,"line_start":120,"line_end":120,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96785,"byte_end":96802,"line_start":121,"line_end":121,"column_start":1,"column_end":18}},{"value":"/ let mut parser = satisfy(|c| c == '!' || c == '?');","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96803,"byte_end":96858,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96859,"byte_end":96915,"line_start":123,"line_end":123,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser.parse(\"?\").map(|x| x.0), Ok('?'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96916,"byte_end":96972,"line_start":124,"line_end":124,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96973,"byte_end":96980,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96981,"byte_end":96988,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96989,"byte_end":97006,"line_start":127,"line_end":127,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1460},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97224,"byte_end":97234,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"SatisfyMap","qualname":"::combinator::SatisfyMap","value":"SatisfyMap {  }","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":569},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98288,"byte_end":98299,"line_start":183,"line_end":183,"column_start":8,"column_end":19},"name":"satisfy_map","qualname":"::combinator::satisfy_map","value":"pub fn satisfy_map<I, P, R>(P) -> SatisfyMap<I, P> where I: Stream,\nP: FnMut(I::Item) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds\n and returns the value inside the `Option`. If `predicate` returns `None` the parser fails\n without consuming any input.","sig":null,"attributes":[{"value":"/ Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97572,"byte_end":97670,"line_start":158,"line_end":158,"column_start":1,"column_end":99}},{"value":"/ and returns the value inside the `Option`. If `predicate` returns `None` the parser fails","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97671,"byte_end":97764,"line_start":159,"line_end":159,"column_start":1,"column_end":94}},{"value":"/ without consuming any input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97765,"byte_end":97797,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97798,"byte_end":97801,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97802,"byte_end":97809,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97810,"byte_end":97837,"line_start":163,"line_end":163,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97838,"byte_end":97859,"line_start":164,"line_end":164,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97860,"byte_end":97877,"line_start":165,"line_end":165,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97878,"byte_end":97909,"line_start":166,"line_end":166,"column_start":1,"column_end":32}},{"value":"/ enum YesNo {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97910,"byte_end":97926,"line_start":167,"line_end":167,"column_start":1,"column_end":17}},{"value":"/     Yes,","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97927,"byte_end":97939,"line_start":168,"line_end":168,"column_start":1,"column_end":13}},{"value":"/     No,","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97940,"byte_end":97951,"line_start":169,"line_end":169,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97952,"byte_end":97957,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/ let mut parser = satisfy_map(|c| {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97958,"byte_end":97996,"line_start":171,"line_end":171,"column_start":1,"column_end":39}},{"value":"/     match c {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97997,"byte_end":98014,"line_start":172,"line_end":172,"column_start":1,"column_end":18}},{"value":"/         'Y' => Some(YesNo::Yes),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98015,"byte_end":98051,"line_start":173,"line_end":173,"column_start":1,"column_end":37}},{"value":"/         'N' => Some(YesNo::No),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98052,"byte_end":98087,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/         _ => None,","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98088,"byte_end":98110,"line_start":175,"line_end":175,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98111,"byte_end":98120,"line_start":176,"line_end":176,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98121,"byte_end":98128,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(parser.parse(\"Y\").map(|x| x.0), Ok(YesNo::Yes));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98129,"byte_end":98192,"line_start":178,"line_end":178,"column_start":1,"column_end":64}},{"value":"/ assert!(parser.parse(\"A\").map(|x| x.0).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98193,"byte_end":98246,"line_start":179,"line_end":179,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98247,"byte_end":98254,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98255,"byte_end":98262,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98263,"byte_end":98280,"line_start":182,"line_end":182,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1469},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98516,"byte_end":98521,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"Token","qualname":"::combinator::Token","value":"Token {  }","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":580},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99385,"byte_end":99390,"line_start":235,"line_end":235,"column_start":8,"column_end":13},"name":"token","qualname":"::combinator::token","value":"pub fn token<I>(I::Item) -> Token<I> where I: Stream, I::Item: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99090,"byte_end":99159,"line_start":222,"line_end":222,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99160,"byte_end":99163,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99164,"byte_end":99171,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99172,"byte_end":99199,"line_start":225,"line_end":225,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99200,"byte_end":99221,"line_start":226,"line_end":226,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99222,"byte_end":99239,"line_start":227,"line_end":227,"column_start":1,"column_end":18}},{"value":"/ let result = token('!')","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99240,"byte_end":99267,"line_start":228,"line_end":228,"column_start":1,"column_end":28}},{"value":"/     .parse(\"!\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99268,"byte_end":99287,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99288,"byte_end":99310,"line_start":230,"line_end":230,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok('!'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99311,"byte_end":99343,"line_start":231,"line_end":231,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99344,"byte_end":99351,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99352,"byte_end":99359,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99360,"byte_end":99377,"line_start":234,"line_end":234,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1476},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99558,"byte_end":99564,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::combinator::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":591},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102405,"byte_end":102411,"line_start":333,"line_end":333,"column_start":8,"column_end":14},"name":"tokens","qualname":"::combinator::tokens","value":"pub fn tokens<C, T, I>(C, Info<I::Item, I::Range>, T) -> Tokens<C, T, I> where\nC: FnMut(T::Item, I::Item) -> bool, T: Clone + IntoIterator, I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses multiple tokens.","sig":null,"attributes":[{"value":"/ Parses multiple tokens.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101543,"byte_end":101570,"line_start":310,"line_end":310,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101571,"byte_end":101574,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ Consumes items from the input and compares them to the values from `tokens` using the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101575,"byte_end":101664,"line_start":312,"line_end":312,"column_start":1,"column_end":90}},{"value":"/ comparison function `cmp`. Succeeds if all the items from `tokens` are matched in the input","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101665,"byte_end":101760,"line_start":313,"line_end":313,"column_start":1,"column_end":96}},{"value":"/ stream and fails otherwise with `expected` used as part of the error.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101761,"byte_end":101834,"line_start":314,"line_end":314,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101835,"byte_end":101838,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101839,"byte_end":101846,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101847,"byte_end":101874,"line_start":317,"line_end":317,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101875,"byte_end":101896,"line_start":318,"line_end":318,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::Info;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101897,"byte_end":101933,"line_start":319,"line_end":319,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101934,"byte_end":101951,"line_start":320,"line_end":320,"column_start":1,"column_end":18}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101952,"byte_end":101981,"line_start":321,"line_end":321,"column_start":1,"column_end":30}},{"value":"/ let result = tokens(|l, r| l.eq_ignore_ascii_case(&r), \"abc\".into(), \"abc\".chars())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":101982,"byte_end":102069,"line_start":322,"line_end":322,"column_start":1,"column_end":88}},{"value":"/     .parse(\"AbC\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102070,"byte_end":102091,"line_start":323,"line_end":323,"column_start":1,"column_end":22}},{"value":"/     .map(|x| x.0.as_str());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102092,"byte_end":102123,"line_start":324,"line_end":324,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(result, Ok(\"abc\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102124,"byte_end":102158,"line_start":325,"line_end":325,"column_start":1,"column_end":35}},{"value":"/ let result = tokens(|&l, r| (if l < r { r - l } else { l - r }) <= 2, Info::Range(&b\"025\"[..]), &b\"025\"[..])","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102159,"byte_end":102271,"line_start":326,"line_end":326,"column_start":1,"column_end":113}},{"value":"/     .parse(&b\"123\"[..])","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102272,"byte_end":102299,"line_start":327,"line_end":327,"column_start":1,"column_end":28}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102300,"byte_end":102322,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"025\"[..]));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102323,"byte_end":102363,"line_start":329,"line_end":329,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102364,"byte_end":102371,"line_start":330,"line_end":330,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102372,"byte_end":102379,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102380,"byte_end":102397,"line_start":332,"line_end":332,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102737,"byte_end":102745,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"Position","qualname":"::combinator::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":1491}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":600},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103561,"byte_end":103569,"line_start":385,"line_end":385,"column_start":8,"column_end":16},"name":"position","qualname":"::combinator::position","value":"pub fn position<I>() -> Position<I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parser which just returns the current position in the stream.","sig":null,"attributes":[{"value":"/ Parser which just returns the current position in the stream.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103051,"byte_end":103116,"line_start":369,"line_end":369,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103117,"byte_end":103120,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103121,"byte_end":103128,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103129,"byte_end":103156,"line_start":372,"line_end":372,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103157,"byte_end":103178,"line_start":373,"line_end":373,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::SourcePosition;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103179,"byte_end":103225,"line_start":374,"line_end":374,"column_start":1,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103226,"byte_end":103243,"line_start":375,"line_end":375,"column_start":1,"column_end":18}},{"value":"/ let result = (position(), token('!'), position())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103244,"byte_end":103297,"line_start":376,"line_end":376,"column_start":1,"column_end":54}},{"value":"/     .parse(State::new(\"!\"))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103298,"byte_end":103329,"line_start":377,"line_end":377,"column_start":1,"column_end":32}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103330,"byte_end":103352,"line_start":378,"line_end":378,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((SourcePosition { line: 1, column: 1 },","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103353,"byte_end":103418,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/                        '!',","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103419,"byte_end":103450,"line_start":380,"line_end":380,"column_start":1,"column_end":32}},{"value":"/                        SourcePosition { line: 1, column: 2 })));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103451,"byte_end":103519,"line_start":381,"line_end":381,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103520,"byte_end":103527,"line_start":382,"line_end":382,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103528,"byte_end":103535,"line_start":383,"line_end":383,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103536,"byte_end":103553,"line_start":384,"line_end":384,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103695,"byte_end":103701,"line_start":395,"line_end":395,"column_start":12,"column_end":18},"name":"Choice","qualname":"::combinator::Choice","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":104911,"byte_end":104916,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"OneOf","qualname":"::combinator::OneOf","value":"OneOf {  }","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105892,"byte_end":105898,"line_start":478,"line_end":478,"column_start":8,"column_end":14},"name":"one_of","qualname":"::combinator::one_of","value":"pub fn one_of<T, I>(T) -> OneOf<T, I> where T: Clone + IntoIterator,\nI: Stream, I::Item: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is part of `tokens`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105549,"byte_end":105610,"line_start":465,"line_end":465,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105611,"byte_end":105614,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105615,"byte_end":105622,"line_start":467,"line_end":467,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105623,"byte_end":105650,"line_start":468,"line_end":468,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105651,"byte_end":105672,"line_start":469,"line_end":469,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::Info;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105673,"byte_end":105709,"line_start":470,"line_end":470,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105710,"byte_end":105727,"line_start":471,"line_end":471,"column_start":1,"column_end":18}},{"value":"/ let result = many(one_of(\"abc\".chars()))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105728,"byte_end":105772,"line_start":472,"line_end":472,"column_start":1,"column_end":45}},{"value":"/     .parse(\"abd\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105773,"byte_end":105795,"line_start":473,"line_end":473,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((String::from(\"ab\"), \"d\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105796,"byte_end":105850,"line_start":474,"line_end":474,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105851,"byte_end":105858,"line_start":475,"line_end":475,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105859,"byte_end":105866,"line_start":476,"line_end":476,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105867,"byte_end":105884,"line_start":477,"line_end":477,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1514},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106119,"byte_end":106125,"line_start":491,"line_end":491,"column_start":12,"column_end":18},"name":"NoneOf","qualname":"::combinator::NoneOf","value":"NoneOf {  }","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107277,"byte_end":107284,"line_start":536,"line_end":536,"column_start":8,"column_end":15},"name":"none_of","qualname":"::combinator::none_of","value":"pub fn none_of<T, I>(T) -> NoneOf<T, I> where T: Clone + IntoIterator,\nI: Stream, I::Item: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is not part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is not part of `tokens`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106558,"byte_end":106623,"line_start":514,"line_end":514,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106624,"byte_end":106627,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106628,"byte_end":106635,"line_start":516,"line_end":516,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106636,"byte_end":106663,"line_start":517,"line_end":517,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106664,"byte_end":106685,"line_start":518,"line_end":518,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::{BytePosition, Error, Info};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106686,"byte_end":106745,"line_start":519,"line_end":519,"column_start":1,"column_end":60}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106746,"byte_end":106763,"line_start":520,"line_end":520,"column_start":1,"column_end":18}},{"value":"/ let mut parser = many1(none_of(b\"abc\".iter().cloned()));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106764,"byte_end":106824,"line_start":521,"line_end":521,"column_start":1,"column_end":61}},{"value":"/ let result = parser.parse(State::new(&b\"xyb\"[..]))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106825,"byte_end":106879,"line_start":522,"line_end":522,"column_start":1,"column_end":55}},{"value":"/     .map(|(output, input)| (output, input.input));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106880,"byte_end":106934,"line_start":523,"line_end":523,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(result, Ok((b\"xy\"[..].to_owned(), &b\"b\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106935,"byte_end":106997,"line_start":524,"line_end":524,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106998,"byte_end":107001,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(State::new(&b\"ab\"[..]));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107002,"byte_end":107056,"line_start":526,"line_end":526,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(result, Err(ParseError {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107057,"byte_end":107096,"line_start":527,"line_end":527,"column_start":1,"column_end":40}},{"value":"/     position: BytePosition { position: 0 },","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107097,"byte_end":107144,"line_start":528,"line_end":528,"column_start":1,"column_end":48}},{"value":"/     errors: vec![","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107145,"byte_end":107166,"line_start":529,"line_end":529,"column_start":1,"column_end":22}},{"value":"/         Error::Unexpected(Info::Token(b'a')),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107167,"byte_end":107216,"line_start":530,"line_end":530,"column_start":1,"column_end":50}},{"value":"/     ]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107217,"byte_end":107226,"line_start":531,"line_end":531,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107227,"byte_end":107235,"line_start":532,"line_end":532,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107236,"byte_end":107243,"line_start":533,"line_end":533,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107244,"byte_end":107251,"line_start":534,"line_end":534,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107252,"byte_end":107269,"line_start":535,"line_end":535,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1523},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107507,"byte_end":107512,"line_start":549,"line_end":549,"column_start":12,"column_end":17},"name":"Count","qualname":"::combinator::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108490,"byte_end":108495,"line_start":589,"line_end":589,"column_start":8,"column_end":13},"name":"count","qualname":"::combinator::count","value":"pub fn count<F, P>(usize, P) -> Count<F, P> where P: Parser,\nF: FromIterator<P::Output>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times.","sig":null,"attributes":[{"value":"/ Parses `parser` from zero up to `count` times.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108101,"byte_end":108151,"line_start":575,"line_end":575,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108152,"byte_end":108155,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108156,"byte_end":108163,"line_start":577,"line_end":577,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108164,"byte_end":108191,"line_start":578,"line_end":578,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108192,"byte_end":108213,"line_start":579,"line_end":579,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::{BytePosition, Error, Info};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108214,"byte_end":108273,"line_start":580,"line_end":580,"column_start":1,"column_end":60}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108274,"byte_end":108291,"line_start":581,"line_end":581,"column_start":1,"column_end":18}},{"value":"/ let mut parser = count(2, token(b'a'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108292,"byte_end":108335,"line_start":582,"line_end":582,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108336,"byte_end":108339,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(&b\"aaab\"[..]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108340,"byte_end":108384,"line_start":584,"line_end":584,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(result, Ok((b\"aa\"[..].to_owned(), &b\"ab\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108385,"byte_end":108448,"line_start":585,"line_end":585,"column_start":1,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108449,"byte_end":108456,"line_start":586,"line_end":586,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108457,"byte_end":108464,"line_start":587,"line_end":587,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108465,"byte_end":108482,"line_start":588,"line_end":588,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108703,"byte_end":108712,"line_start":601,"line_end":601,"column_start":10,"column_end":19},"name":"SkipCount","qualname":"::combinator::SkipCount","value":"skip_count::SkipCount<P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1545},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":108789,"byte_end":108798,"line_start":604,"line_end":604,"column_start":16,"column_end":25},"name":"SkipCount","qualname":"::combinator::skip_count::SkipCount","value":"SkipCount { count, parser }","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1547},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":109260,"byte_end":109265,"line_start":618,"line_end":618,"column_start":26,"column_end":31},"name":"count","qualname":"::combinator::skip_count::SkipCount::count","value":"usize","parent":{"krate":0,"index":1545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1548},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":109274,"byte_end":109280,"line_start":618,"line_end":618,"column_start":40,"column_end":46},"name":"parser","qualname":"::combinator::skip_count::SkipCount::parser","value":"P","parent":{"krate":0,"index":1545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1543},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":109246,"byte_end":109256,"line_start":618,"line_end":618,"column_start":12,"column_end":22},"name":"skip_count","qualname":"::combinator::skip_count","value":"pub fn skip_count<P>(usize, P) -> self::skip_count::SkipCount<P> where\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":16756,"byte_end":16773,"line_start":464,"line_end":464,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1555},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":109466,"byte_end":109477,"line_start":628,"line_end":628,"column_start":12,"column_end":23},"name":"CountMinMax","qualname":"::combinator::CountMinMax","value":"CountMinMax {  }","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":654},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110915,"byte_end":110928,"line_start":681,"line_end":681,"column_start":8,"column_end":21},"name":"count_min_max","qualname":"::combinator::count_min_max","value":"pub fn count_min_max<F, P>(usize, usize, P) -> CountMinMax<F, P> where\nP: Parser, F: FromIterator<P::Output>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`).","sig":null,"attributes":[{"value":"/ Parses `parser` from `min` to `max` times (including `min` and `max`).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110375,"byte_end":110449,"line_start":661,"line_end":661,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110450,"byte_end":110453,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110454,"byte_end":110461,"line_start":663,"line_end":663,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110462,"byte_end":110489,"line_start":664,"line_end":664,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110490,"byte_end":110511,"line_start":665,"line_end":665,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::{BytePosition, Error, Info};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110512,"byte_end":110571,"line_start":666,"line_end":666,"column_start":1,"column_end":60}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110572,"byte_end":110589,"line_start":667,"line_end":667,"column_start":1,"column_end":18}},{"value":"/ let mut parser = count_min_max(2, 2, token(b'a'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110590,"byte_end":110644,"line_start":668,"line_end":668,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110645,"byte_end":110648,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(&b\"aaab\"[..]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110649,"byte_end":110693,"line_start":670,"line_end":670,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(result, Ok((b\"aa\"[..].to_owned(), &b\"ab\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110694,"byte_end":110757,"line_start":671,"line_end":671,"column_start":1,"column_end":64}},{"value":"/ let result = parser.parse(&b\"ab\"[..]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110758,"byte_end":110800,"line_start":672,"line_end":672,"column_start":1,"column_end":43}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110801,"byte_end":110830,"line_start":673,"line_end":673,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110831,"byte_end":110838,"line_start":674,"line_end":674,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110839,"byte_end":110846,"line_start":675,"line_end":675,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110847,"byte_end":110850,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110851,"byte_end":110863,"line_start":677,"line_end":677,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110864,"byte_end":110867,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ If `min` > `max`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110868,"byte_end":110889,"line_start":679,"line_end":679,"column_start":1,"column_end":22}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":110890,"byte_end":110907,"line_start":680,"line_end":680,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":657},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":111198,"byte_end":111213,"line_start":696,"line_end":696,"column_start":10,"column_end":25},"name":"SkipCountMinMax","qualname":"::combinator::SkipCountMinMax","value":"skip_count_min_max::SkipCountMinMax<P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":111304,"byte_end":111319,"line_start":699,"line_end":699,"column_start":16,"column_end":31},"name":"SkipCountMinMax","qualname":"::combinator::skip_count_min_max::SkipCountMinMax","value":"SkipCountMinMax { min, max, parser }","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1580},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":111908,"byte_end":111911,"line_start":719,"line_end":719,"column_start":34,"column_end":37},"name":"min","qualname":"::combinator::skip_count_min_max::SkipCountMinMax::min","value":"usize","parent":{"krate":0,"index":1578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1581},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":111920,"byte_end":111923,"line_start":719,"line_end":719,"column_start":46,"column_end":49},"name":"max","qualname":"::combinator::skip_count_min_max::SkipCountMinMax::max","value":"usize","parent":{"krate":0,"index":1578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1582},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":111932,"byte_end":111938,"line_start":719,"line_end":719,"column_start":58,"column_end":64},"name":"parser","qualname":"::combinator::skip_count_min_max::SkipCountMinMax::parser","value":"P","parent":{"krate":0,"index":1578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1576},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":111886,"byte_end":111904,"line_start":719,"line_end":719,"column_start":12,"column_end":30},"name":"skip_count_min_max","qualname":"::combinator::skip_count_min_max","value":"pub fn skip_count_min_max<P>(usize, usize, P)\n-> self::skip_count_min_max::SkipCountMinMax<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`)\n skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":16756,"byte_end":16773,"line_start":464,"line_end":464,"column_start":9,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":659},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":113207,"byte_end":113213,"line_start":753,"line_end":753,"column_start":8,"column_end":14},"name":"choice","qualname":"::combinator::choice","value":"pub fn choice<S, P>(S) -> Choice<S, P> where S: AsMut<[P]>, P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Takes an array of parsers and tries to apply them each in order.\n Fails if all the parsers fails or if an applied parser consumes input before failing.","sig":null,"attributes":[{"value":"/ Takes an array of parsers and tries to apply them each in order.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112108,"byte_end":112176,"line_start":728,"line_end":728,"column_start":1,"column_end":69}},{"value":"/ Fails if all the parsers fails or if an applied parser consumes input before failing.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112177,"byte_end":112266,"line_start":729,"line_end":729,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112267,"byte_end":112270,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112271,"byte_end":112278,"line_start":731,"line_end":731,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112279,"byte_end":112306,"line_start":732,"line_end":732,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112307,"byte_end":112328,"line_start":733,"line_end":733,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::string;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112329,"byte_end":112361,"line_start":734,"line_end":734,"column_start":1,"column_end":33}},{"value":"/ # use combine::primitives::Error;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112362,"byte_end":112399,"line_start":735,"line_end":735,"column_start":1,"column_end":38}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112400,"byte_end":112417,"line_start":736,"line_end":736,"column_start":1,"column_end":18}},{"value":"/ let mut parser = choice([string(\"Apple\"), string(\"Banana\"), string(\"Orange\")]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112418,"byte_end":112501,"line_start":737,"line_end":737,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser.parse(\"Banana\"), Ok((\"Banana\", \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112502,"byte_end":112561,"line_start":738,"line_end":738,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser.parse(\"Orangexx\"), Ok((\"Orange\", \"xx\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112562,"byte_end":112625,"line_start":739,"line_end":739,"column_start":1,"column_end":64}},{"value":"/ assert!(parser.parse(\"Appl\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112626,"byte_end":112669,"line_start":740,"line_end":740,"column_start":1,"column_end":44}},{"value":"/ assert!(parser.parse(\"Pear\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112670,"byte_end":112713,"line_start":741,"line_end":741,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112714,"byte_end":112717,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ let mut parser2 = choice([string(\"one\"), string(\"two\"), string(\"three\")]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112718,"byte_end":112796,"line_start":743,"line_end":743,"column_start":1,"column_end":79}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112797,"byte_end":112871,"line_start":744,"line_end":744,"column_start":1,"column_end":75}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112872,"byte_end":112917,"line_start":745,"line_end":745,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112918,"byte_end":112921,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ // Use 'try' to make failing parsers always act as if they have not consumed any input","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":112922,"byte_end":113012,"line_start":747,"line_end":747,"column_start":1,"column_end":91}},{"value":"/ let mut parser3 = choice([try(string(\"one\")), try(string(\"two\")), try(string(\"three\"))]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":113013,"byte_end":113106,"line_start":748,"line_end":748,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":113107,"byte_end":113165,"line_start":749,"line_end":749,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":113166,"byte_end":113173,"line_start":750,"line_end":750,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":113174,"byte_end":113181,"line_start":751,"line_end":751,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":113182,"byte_end":113199,"line_start":752,"line_end":752,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1589},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114191,"byte_end":114201,"line_start":791,"line_end":791,"column_start":12,"column_end":22},"name":"Unexpected","qualname":"::combinator::Unexpected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115083,"byte_end":115093,"line_start":823,"line_end":823,"column_start":8,"column_end":18},"name":"unexpected","qualname":"::combinator::unexpected","value":"pub fn unexpected<I, S>(S) -> Unexpected<I> where I: Stream,\nS: Into<Info<I::Item, I::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Always fails with `message` as an unexpected error.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Always fails with `message` as an unexpected error.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114651,"byte_end":114706,"line_start":808,"line_end":808,"column_start":1,"column_end":56}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114707,"byte_end":114736,"line_start":809,"line_end":809,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114737,"byte_end":114740,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114741,"byte_end":114748,"line_start":811,"line_end":811,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114749,"byte_end":114776,"line_start":812,"line_end":812,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114777,"byte_end":114798,"line_start":813,"line_end":813,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::Error;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114799,"byte_end":114836,"line_start":814,"line_end":814,"column_start":1,"column_end":38}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114837,"byte_end":114854,"line_start":815,"line_end":815,"column_start":1,"column_end":18}},{"value":"/ let result = unexpected(\"token\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114855,"byte_end":114891,"line_start":816,"line_end":816,"column_start":1,"column_end":37}},{"value":"/     .parse(\"a\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114892,"byte_end":114912,"line_start":817,"line_end":817,"column_start":1,"column_end":21}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114913,"byte_end":114942,"line_start":818,"line_end":818,"column_start":1,"column_end":30}},{"value":"/ assert!(result.err().unwrap().errors.iter().any(|m| *m == Error::Unexpected(\"token\".into())));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114943,"byte_end":115041,"line_start":819,"line_end":819,"column_start":1,"column_end":99}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115042,"byte_end":115049,"line_start":820,"line_end":820,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115050,"byte_end":115057,"line_start":821,"line_end":821,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115058,"byte_end":115075,"line_start":822,"line_end":822,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1597},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115265,"byte_end":115270,"line_start":832,"line_end":832,"column_start":12,"column_end":17},"name":"Value","qualname":"::combinator::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115842,"byte_end":115847,"line_start":859,"line_end":859,"column_start":8,"column_end":13},"name":"value","qualname":"::combinator::value","value":"pub fn value<I, T>(T) -> Value<I, T> where I: Stream, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Always returns the value `v` without consuming any input.","sig":null,"attributes":[{"value":"/ Always returns the value `v` without consuming any input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115547,"byte_end":115608,"line_start":846,"line_end":846,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115609,"byte_end":115612,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115613,"byte_end":115620,"line_start":848,"line_end":848,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115621,"byte_end":115648,"line_start":849,"line_end":849,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115649,"byte_end":115670,"line_start":850,"line_end":850,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115671,"byte_end":115688,"line_start":851,"line_end":851,"column_start":1,"column_end":18}},{"value":"/ let result = value(42)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115689,"byte_end":115715,"line_start":852,"line_end":852,"column_start":1,"column_end":27}},{"value":"/     .parse(\"hello world\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115716,"byte_end":115745,"line_start":853,"line_end":853,"column_start":1,"column_end":30}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115746,"byte_end":115768,"line_start":854,"line_end":854,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(42));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115769,"byte_end":115800,"line_start":855,"line_end":855,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115801,"byte_end":115808,"line_start":856,"line_end":856,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115809,"byte_end":115816,"line_start":857,"line_end":857,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115817,"byte_end":115834,"line_start":858,"line_end":858,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":681},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115950,"byte_end":115963,"line_start":867,"line_end":867,"column_start":10,"column_end":23},"name":"NotFollowedBy","qualname":"::combinator::NotFollowedBy","value":"not_followed_by::NotFollowedBy<P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1619},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":116041,"byte_end":116054,"line_start":870,"line_end":870,"column_start":12,"column_end":25},"name":"NotFollowedBy","qualname":"::combinator::not_followed_by::NotFollowedBy","value":"NotFollowedBy { parser }","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1621},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":116460,"byte_end":116466,"line_start":887,"line_end":887,"column_start":27,"column_end":33},"name":"parser","qualname":"::combinator::not_followed_by::NotFollowedBy::parser","value":"P","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1617},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":116441,"byte_end":116456,"line_start":887,"line_end":887,"column_start":8,"column_end":23},"name":"not_followed_by","qualname":"::combinator::not_followed_by","value":"pub fn not_followed_by<P>(P) -> self::not_followed_by::NotFollowedBy<P> where\nP: Parser, P::Output: ::std::fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if `parser` fails.\n Never consumes any input.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":16737,"byte_end":16745,"line_start":463,"line_end":463,"column_start":11,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":16756,"byte_end":16773,"line_start":464,"line_end":464,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1628},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":116666,"byte_end":116669,"line_start":899,"line_end":899,"column_start":12,"column_end":15},"name":"Eof","qualname":"::combinator::Eof","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117796,"byte_end":117799,"line_start":939,"line_end":939,"column_start":8,"column_end":11},"name":"eof","qualname":"::combinator::eof","value":"pub fn eof<I>() -> Eof<I> where I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if the stream is at end of input, fails otherwise.","sig":null,"attributes":[{"value":"/ Succeeds only if the stream is at end of input, fails otherwise.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117207,"byte_end":117275,"line_start":920,"line_end":920,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117276,"byte_end":117279,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117280,"byte_end":117287,"line_start":922,"line_end":922,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117288,"byte_end":117315,"line_start":923,"line_end":923,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117316,"byte_end":117337,"line_start":924,"line_end":924,"column_start":1,"column_end":22}},{"value":"/ # use combine::primitives::{Error, Positioner};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117338,"byte_end":117389,"line_start":925,"line_end":925,"column_start":1,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117390,"byte_end":117407,"line_start":926,"line_end":926,"column_start":1,"column_end":18}},{"value":"/ let mut parser = eof();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117408,"byte_end":117435,"line_start":927,"line_end":927,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(parser.parse(State::new(\"\")), Ok(((), State::new(\"\"))));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117436,"byte_end":117507,"line_start":928,"line_end":928,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser.parse(State::new(\"x\")), Err(ParseError {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117508,"byte_end":117570,"line_start":929,"line_end":929,"column_start":1,"column_end":63}},{"value":"/     position: <char as Positioner>::start(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117571,"byte_end":117619,"line_start":930,"line_end":930,"column_start":1,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117620,"byte_end":117641,"line_start":931,"line_end":931,"column_start":1,"column_end":22}},{"value":"/         Error::Unexpected('x'.into()),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117642,"byte_end":117684,"line_start":932,"line_end":932,"column_start":1,"column_end":43}},{"value":"/         Error::Expected(\"end of input\".into())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117685,"byte_end":117735,"line_start":933,"line_end":933,"column_start":1,"column_end":51}},{"value":"/     ]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117736,"byte_end":117745,"line_start":934,"line_end":934,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117746,"byte_end":117754,"line_start":935,"line_end":935,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117755,"byte_end":117762,"line_start":936,"line_end":936,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117763,"byte_end":117770,"line_start":937,"line_end":937,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117771,"byte_end":117788,"line_start":938,"line_end":938,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":117873,"byte_end":117877,"line_start":946,"line_end":946,"column_start":12,"column_end":16},"name":"Iter","qualname":"::combinator::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118100,"byte_end":118103,"line_start":960,"line_end":960,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter<P>>::new","value":"pub fn new(P, P::Input) -> Iter<P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118447,"byte_end":118458,"line_start":970,"line_end":970,"column_start":12,"column_end":23},"name":"into_result","qualname":"<Iter<P>>::into_result","value":"pub fn into_result<O>(Self, O) -> ParseResult<O, P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done\n without any errors which consumed data.\n","sig":null,"attributes":[{"value":"/ Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118293,"byte_end":118387,"line_start":968,"line_end":968,"column_start":5,"column_end":99}},{"value":"/ without any errors which consumed data.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118392,"byte_end":118435,"line_start":969,"line_end":969,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":119823,"byte_end":119827,"line_start":1015,"line_end":1015,"column_start":12,"column_end":16},"name":"Many","qualname":"::combinator::Many","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":723},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120845,"byte_end":120849,"line_start":1050,"line_end":1050,"column_start":8,"column_end":12},"name":"many","qualname":"::combinator::many","value":"pub fn many<F, P>(P) -> Many<F, P> where P: Parser, F: FromIterator<P::Output>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` zero or more times returning a collection with the values from `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120243,"byte_end":120325,"line_start":1032,"line_end":1032,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120326,"byte_end":120329,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120330,"byte_end":120424,"line_start":1034,"line_end":1034,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120425,"byte_end":120521,"line_start":1035,"line_end":1035,"column_start":1,"column_end":97}},{"value":"/ calling many, `many::<Vec<_>, _>(...)`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120522,"byte_end":120565,"line_start":1036,"line_end":1036,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120566,"byte_end":120569,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120570,"byte_end":120577,"line_start":1038,"line_end":1038,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120578,"byte_end":120605,"line_start":1039,"line_end":1039,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120606,"byte_end":120627,"line_start":1040,"line_end":1040,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120628,"byte_end":120659,"line_start":1041,"line_end":1041,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120660,"byte_end":120677,"line_start":1042,"line_end":1042,"column_start":1,"column_end":18}},{"value":"/ let result = many(digit())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120678,"byte_end":120708,"line_start":1043,"line_end":1043,"column_start":1,"column_end":31}},{"value":"/     .parse(\"123A\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120709,"byte_end":120731,"line_start":1044,"line_end":1044,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120732,"byte_end":120754,"line_start":1045,"line_end":1045,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(vec!['1', '2', '3']));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120755,"byte_end":120803,"line_start":1046,"line_end":1046,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120804,"byte_end":120811,"line_start":1047,"line_end":1047,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120812,"byte_end":120819,"line_start":1048,"line_end":1048,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120820,"byte_end":120837,"line_start":1049,"line_end":1049,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1645},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":120988,"byte_end":120993,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"Many1","qualname":"::combinator::Many1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1663},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121749,"byte_end":121757,"line_start":1085,"line_end":1085,"column_start":15,"column_end":23},"name":"SkipMany","qualname":"::combinator::SkipMany","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":733},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122127,"byte_end":122136,"line_start":1100,"line_end":1100,"column_start":8,"column_end":17},"name":"skip_many","qualname":"::combinator::skip_many","value":"pub fn skip_many<P>(P) -> SkipMany<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times ignoring the result.","sig":null,"attributes":[{"value":"/ Parses `p` zero or more times ignoring the result.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121823,"byte_end":121877,"line_start":1087,"line_end":1087,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121878,"byte_end":121881,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121882,"byte_end":121889,"line_start":1089,"line_end":1089,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121890,"byte_end":121917,"line_start":1090,"line_end":1090,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121918,"byte_end":121939,"line_start":1091,"line_end":1091,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121940,"byte_end":121971,"line_start":1092,"line_end":1092,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121972,"byte_end":121989,"line_start":1093,"line_end":1093,"column_start":1,"column_end":18}},{"value":"/ let result = skip_many(digit())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121990,"byte_end":122025,"line_start":1094,"line_end":1094,"column_start":1,"column_end":36}},{"value":"/     .parse(\"A\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122026,"byte_end":122046,"line_start":1095,"line_end":1095,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(result, Ok(((), \"A\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122047,"byte_end":122085,"line_start":1096,"line_end":1096,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122086,"byte_end":122093,"line_start":1097,"line_end":1097,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122094,"byte_end":122101,"line_start":1098,"line_end":1098,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122102,"byte_end":122119,"line_start":1099,"line_end":1099,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1678},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122355,"byte_end":122364,"line_start":1110,"line_end":1110,"column_start":15,"column_end":24},"name":"SkipMany1","qualname":"::combinator::SkipMany1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":737},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122738,"byte_end":122748,"line_start":1125,"line_end":1125,"column_start":8,"column_end":18},"name":"skip_many1","qualname":"::combinator::skip_many1","value":"pub fn skip_many1<P>(P) -> SkipMany1<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times ignoring the result.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times ignoring the result.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122431,"byte_end":122484,"line_start":1112,"line_end":1112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122485,"byte_end":122488,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122489,"byte_end":122496,"line_start":1114,"line_end":1114,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122497,"byte_end":122524,"line_start":1115,"line_end":1115,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122525,"byte_end":122546,"line_start":1116,"line_end":1116,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122547,"byte_end":122578,"line_start":1117,"line_end":1117,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122579,"byte_end":122596,"line_start":1118,"line_end":1118,"column_start":1,"column_end":18}},{"value":"/ let result = skip_many1(digit())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122597,"byte_end":122633,"line_start":1119,"line_end":1119,"column_start":1,"column_end":37}},{"value":"/     .parse(\"123A\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122634,"byte_end":122657,"line_start":1120,"line_end":1120,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(result, Ok(((), \"A\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122658,"byte_end":122696,"line_start":1121,"line_end":1121,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122697,"byte_end":122704,"line_start":1122,"line_end":1122,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122705,"byte_end":122712,"line_start":1123,"line_end":1123,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122713,"byte_end":122730,"line_start":1124,"line_end":1124,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":741},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123535,"byte_end":123540,"line_start":1153,"line_end":1153,"column_start":8,"column_end":13},"name":"many1","qualname":"::combinator::many1","value":"pub fn many1<F, P>(P) -> Many1<F, P> where F: FromIterator<P::Output>,\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times returning a collection with the values from `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":122956,"byte_end":123037,"line_start":1135,"line_end":1135,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123038,"byte_end":123041,"line_start":1136,"line_end":1136,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123042,"byte_end":123136,"line_start":1137,"line_end":1137,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123137,"byte_end":123233,"line_start":1138,"line_end":1138,"column_start":1,"column_end":97}},{"value":"/ calling many1 `many1::<Vec<_>, _>(...)`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123234,"byte_end":123278,"line_start":1139,"line_end":1139,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123279,"byte_end":123282,"line_start":1140,"line_end":1140,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123283,"byte_end":123286,"line_start":1141,"line_end":1141,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123287,"byte_end":123294,"line_start":1142,"line_end":1142,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123295,"byte_end":123322,"line_start":1143,"line_end":1143,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123323,"byte_end":123344,"line_start":1144,"line_end":1144,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123345,"byte_end":123376,"line_start":1145,"line_end":1145,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123377,"byte_end":123394,"line_start":1146,"line_end":1146,"column_start":1,"column_end":18}},{"value":"/ let result = many1::<Vec<_>, _>(digit())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123395,"byte_end":123439,"line_start":1147,"line_end":1147,"column_start":1,"column_end":45}},{"value":"/     .parse(\"A123\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123440,"byte_end":123463,"line_start":1148,"line_end":1148,"column_start":1,"column_end":24}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123464,"byte_end":123493,"line_start":1149,"line_end":1149,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123494,"byte_end":123501,"line_start":1150,"line_end":1150,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123502,"byte_end":123509,"line_start":1151,"line_end":1151,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123510,"byte_end":123527,"line_start":1152,"line_end":1152,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1685},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123680,"byte_end":123685,"line_start":1162,"line_end":1162,"column_start":12,"column_end":17},"name":"SepBy","qualname":"::combinator::SepBy","value":"SepBy {  }","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":753},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125124,"byte_end":125130,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"sep_by","qualname":"::combinator::sep_by","value":"pub fn sep_by<F, P, S>(P, S) -> SepBy<F, P, S> where\nF: FromIterator<P::Output>, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124369,"byte_end":124464,"line_start":1190,"line_end":1190,"column_start":1,"column_end":96}},{"value":"/ values from `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124465,"byte_end":124485,"line_start":1191,"line_end":1191,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124486,"byte_end":124489,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124490,"byte_end":124584,"line_start":1193,"line_end":1193,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124585,"byte_end":124681,"line_start":1194,"line_end":1194,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124682,"byte_end":124734,"line_start":1195,"line_end":1195,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124735,"byte_end":124738,"line_start":1196,"line_end":1196,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124739,"byte_end":124746,"line_start":1197,"line_end":1197,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124747,"byte_end":124774,"line_start":1198,"line_end":1198,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124775,"byte_end":124796,"line_start":1199,"line_end":1199,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124797,"byte_end":124828,"line_start":1200,"line_end":1200,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124829,"byte_end":124846,"line_start":1201,"line_end":1201,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by(digit(), token(','));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124847,"byte_end":124896,"line_start":1202,"line_end":1202,"column_start":1,"column_end":50}},{"value":"/ let result_ok = parser.parse(\"1,2,3\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124897,"byte_end":124939,"line_start":1203,"line_end":1203,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124940,"byte_end":124997,"line_start":1204,"line_end":1204,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":124998,"byte_end":125036,"line_start":1205,"line_end":1205,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(result_ok2, Ok((vec![], \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125037,"byte_end":125082,"line_start":1206,"line_end":1206,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125083,"byte_end":125090,"line_start":1207,"line_end":1207,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125091,"byte_end":125098,"line_start":1208,"line_end":1208,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125099,"byte_end":125116,"line_start":1209,"line_end":1209,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125404,"byte_end":125410,"line_start":1224,"line_end":1224,"column_start":12,"column_end":18},"name":"SepBy1","qualname":"::combinator::SepBy1","value":"SepBy1 {  }","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":766},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127326,"byte_end":127333,"line_start":1283,"line_end":1283,"column_start":8,"column_end":15},"name":"sep_by1","qualname":"::combinator::sep_by1","value":"pub fn sep_by1<F, P, S>(P, S) -> SepBy1<F, P, S> where\nF: FromIterator<P::Output>, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126261,"byte_end":126355,"line_start":1255,"line_end":1255,"column_start":1,"column_end":95}},{"value":"/ values from `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126356,"byte_end":126376,"line_start":1256,"line_end":1256,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126377,"byte_end":126380,"line_start":1257,"line_end":1257,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126381,"byte_end":126475,"line_start":1258,"line_end":1258,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126476,"byte_end":126572,"line_start":1259,"line_end":1259,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126573,"byte_end":126626,"line_start":1260,"line_end":1260,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126627,"byte_end":126630,"line_start":1261,"line_end":1261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126631,"byte_end":126638,"line_start":1262,"line_end":1262,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126639,"byte_end":126666,"line_start":1263,"line_end":1263,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126667,"byte_end":126688,"line_start":1264,"line_end":1264,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126689,"byte_end":126720,"line_start":1265,"line_end":1265,"column_start":1,"column_end":32}},{"value":"/ # use combine::primitives::{Error, Positioner};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126721,"byte_end":126772,"line_start":1266,"line_end":1266,"column_start":1,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126773,"byte_end":126790,"line_start":1267,"line_end":1267,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by1(digit(), token(','));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126791,"byte_end":126841,"line_start":1268,"line_end":1268,"column_start":1,"column_end":51}},{"value":"/ let result_ok = parser.parse(State::new(\"1,2,3\"))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126842,"byte_end":126895,"line_start":1269,"line_end":1269,"column_start":1,"column_end":54}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126896,"byte_end":126962,"line_start":1270,"line_end":1270,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":126963,"byte_end":127020,"line_start":1271,"line_end":1271,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.parse(State::new(\"\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127021,"byte_end":127071,"line_start":1272,"line_end":1272,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(result_err, Err(ParseError {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127072,"byte_end":127115,"line_start":1273,"line_end":1273,"column_start":1,"column_end":44}},{"value":"/     position: <char as Positioner>::start(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127116,"byte_end":127164,"line_start":1274,"line_end":1274,"column_start":1,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127165,"byte_end":127186,"line_start":1275,"line_end":1275,"column_start":1,"column_end":22}},{"value":"/         Error::end_of_input(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127187,"byte_end":127221,"line_start":1276,"line_end":1276,"column_start":1,"column_end":35}},{"value":"/         Error::Expected(\"digit\".into())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127222,"byte_end":127265,"line_start":1277,"line_end":1277,"column_start":1,"column_end":44}},{"value":"/     ]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127266,"byte_end":127275,"line_start":1278,"line_end":1278,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127276,"byte_end":127284,"line_start":1279,"line_end":1279,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127285,"byte_end":127292,"line_start":1280,"line_end":1280,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127293,"byte_end":127300,"line_start":1281,"line_end":1281,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127301,"byte_end":127318,"line_start":1282,"line_end":1282,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1709},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127609,"byte_end":127617,"line_start":1297,"line_end":1297,"column_start":12,"column_end":20},"name":"SepEndBy","qualname":"::combinator::SepEndBy","value":"SepEndBy {  }","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":779},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":129097,"byte_end":129107,"line_start":1346,"line_end":1346,"column_start":8,"column_end":18},"name":"sep_end_by","qualname":"::combinator::sep_end_by","value":"pub fn sep_end_by<F, P, S>(P, S) -> SepEndBy<F, P, S> where\nF: FromIterator<P::Output>, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128309,"byte_end":128406,"line_start":1326,"line_end":1326,"column_start":1,"column_end":98}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128407,"byte_end":128436,"line_start":1327,"line_end":1327,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128437,"byte_end":128440,"line_start":1328,"line_end":1328,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128441,"byte_end":128535,"line_start":1329,"line_end":1329,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128536,"byte_end":128632,"line_start":1330,"line_end":1330,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128633,"byte_end":128684,"line_start":1331,"line_end":1331,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128685,"byte_end":128688,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128689,"byte_end":128696,"line_start":1333,"line_end":1333,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128697,"byte_end":128724,"line_start":1334,"line_end":1334,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128725,"byte_end":128746,"line_start":1335,"line_end":1335,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128747,"byte_end":128778,"line_start":1336,"line_end":1336,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128779,"byte_end":128796,"line_start":1337,"line_end":1337,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by(digit(), token(';'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128797,"byte_end":128850,"line_start":1338,"line_end":1338,"column_start":1,"column_end":54}},{"value":"/ let result_ok = parser.parse(\"1;2;3;\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128851,"byte_end":128894,"line_start":1339,"line_end":1339,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128895,"byte_end":128952,"line_start":1340,"line_end":1340,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"1;2;3\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128953,"byte_end":128996,"line_start":1341,"line_end":1341,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok2, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":128997,"byte_end":129055,"line_start":1342,"line_end":1342,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":129056,"byte_end":129063,"line_start":1343,"line_end":1343,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":129064,"byte_end":129071,"line_start":1344,"line_end":1344,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":129072,"byte_end":129089,"line_start":1345,"line_end":1345,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1721},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":129387,"byte_end":129396,"line_start":1360,"line_end":1360,"column_start":12,"column_end":21},"name":"SepEndBy1","qualname":"::combinator::SepEndBy1","value":"SepEndBy1 {  }","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131478,"byte_end":131489,"line_start":1424,"line_end":1424,"column_start":8,"column_end":19},"name":"sep_end_by1","qualname":"::combinator::sep_end_by1","value":"pub fn sep_end_by1<F, P, S>(P, S) -> SepEndBy1<F, P, S> where\nF: FromIterator<P::Output>, P: Parser, S: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130397,"byte_end":130493,"line_start":1396,"line_end":1396,"column_start":1,"column_end":97}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130494,"byte_end":130523,"line_start":1397,"line_end":1397,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130524,"byte_end":130527,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130528,"byte_end":130602,"line_start":1399,"line_end":1399,"column_start":1,"column_end":75}},{"value":"/ supplied, either by annotating the resulting type binding `let collection: Vec<_> = ...` or by","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130603,"byte_end":130701,"line_start":1400,"line_end":1400,"column_start":1,"column_end":99}},{"value":"/ specializing when calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130702,"byte_end":130773,"line_start":1401,"line_end":1401,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130774,"byte_end":130777,"line_start":1402,"line_end":1402,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130778,"byte_end":130785,"line_start":1403,"line_end":1403,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130786,"byte_end":130813,"line_start":1404,"line_end":1404,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130814,"byte_end":130835,"line_start":1405,"line_end":1405,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130836,"byte_end":130867,"line_start":1406,"line_end":1406,"column_start":1,"column_end":32}},{"value":"/ # use combine::primitives::{Error, Positioner};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130868,"byte_end":130919,"line_start":1407,"line_end":1407,"column_start":1,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130920,"byte_end":130937,"line_start":1408,"line_end":1408,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by1(digit(), token(';'));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130938,"byte_end":130992,"line_start":1409,"line_end":1409,"column_start":1,"column_end":55}},{"value":"/ let result_ok = parser.parse(State::new(\"1;2;3;\"))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":130993,"byte_end":131047,"line_start":1410,"line_end":1410,"column_start":1,"column_end":55}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131048,"byte_end":131114,"line_start":1411,"line_end":1411,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131115,"byte_end":131172,"line_start":1412,"line_end":1412,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.parse(State::new(\"\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131173,"byte_end":131223,"line_start":1413,"line_end":1413,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(result_err, Err(ParseError {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131224,"byte_end":131267,"line_start":1414,"line_end":1414,"column_start":1,"column_end":44}},{"value":"/     position: <char as Positioner>::start(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131268,"byte_end":131316,"line_start":1415,"line_end":1415,"column_start":1,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131317,"byte_end":131338,"line_start":1416,"line_end":1416,"column_start":1,"column_end":22}},{"value":"/         Error::end_of_input(),","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131339,"byte_end":131373,"line_start":1417,"line_end":1417,"column_start":1,"column_end":35}},{"value":"/         Error::Expected(\"digit\".into())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131374,"byte_end":131417,"line_start":1418,"line_end":1418,"column_start":1,"column_end":44}},{"value":"/     ]","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131418,"byte_end":131427,"line_start":1419,"line_end":1419,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131428,"byte_end":131436,"line_start":1420,"line_end":1420,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131437,"byte_end":131444,"line_start":1421,"line_end":1421,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131445,"byte_end":131452,"line_start":1422,"line_end":1422,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131453,"byte_end":131470,"line_start":1423,"line_end":1423,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1733},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":131976,"byte_end":131984,"line_start":1446,"line_end":1446,"column_start":12,"column_end":20},"name":"FnParser","qualname":"::combinator::FnParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":804},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133100,"byte_end":133106,"line_start":1481,"line_end":1481,"column_start":8,"column_end":14},"name":"parser","qualname":"::combinator::parser","value":"pub fn parser<I, O, F>(F) -> FnParser<I, F> where I: Stream, F: FnMut(I) ->\nParseResult<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a function, turning it into a parser.","sig":null,"attributes":[{"value":"/ Wraps a function, turning it into a parser.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132021,"byte_end":132068,"line_start":1448,"line_end":1448,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132069,"byte_end":132072,"line_start":1449,"line_end":1449,"column_start":1,"column_end":4}},{"value":"/ Mainly needed to turn closures into parsers as function types can be casted to function pointers","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132073,"byte_end":132173,"line_start":1450,"line_end":1450,"column_start":1,"column_end":101}},{"value":"/ to make them usable as a parser.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132174,"byte_end":132210,"line_start":1451,"line_end":1451,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132211,"byte_end":132214,"line_start":1452,"line_end":1452,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132215,"byte_end":132222,"line_start":1453,"line_end":1453,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132223,"byte_end":132248,"line_start":1454,"line_end":1454,"column_start":1,"column_end":26}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132249,"byte_end":132270,"line_start":1455,"line_end":1455,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132271,"byte_end":132302,"line_start":1456,"line_end":1456,"column_start":1,"column_end":32}},{"value":"/ # use combine::primitives::{Consumed, Error};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132303,"byte_end":132352,"line_start":1457,"line_end":1457,"column_start":1,"column_end":50}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132353,"byte_end":132370,"line_start":1458,"line_end":1458,"column_start":1,"column_end":18}},{"value":"/ let mut even_digit = parser(|input| {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132371,"byte_end":132412,"line_start":1459,"line_end":1459,"column_start":1,"column_end":42}},{"value":"/     // Help type inference out","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132413,"byte_end":132447,"line_start":1460,"line_end":1460,"column_start":1,"column_end":35}},{"value":"/     let _: &str = input;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132448,"byte_end":132476,"line_start":1461,"line_end":1461,"column_start":1,"column_end":29}},{"value":"/     let position = input.position();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132477,"byte_end":132517,"line_start":1462,"line_end":1462,"column_start":1,"column_end":41}},{"value":"/     let (char_digit, input) = try!(digit().parse_stream(input));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132518,"byte_end":132586,"line_start":1463,"line_end":1463,"column_start":1,"column_end":69}},{"value":"/     let d = (char_digit as i32) - ('0' as i32);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132587,"byte_end":132638,"line_start":1464,"line_end":1464,"column_start":1,"column_end":52}},{"value":"/     if d % 2 == 0 {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132639,"byte_end":132662,"line_start":1465,"line_end":1465,"column_start":1,"column_end":24}},{"value":"/         Ok((d, input))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132663,"byte_end":132689,"line_start":1466,"line_end":1466,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132690,"byte_end":132699,"line_start":1467,"line_end":1467,"column_start":1,"column_end":10}},{"value":"/     else {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132700,"byte_end":132714,"line_start":1468,"line_end":1468,"column_start":1,"column_end":15}},{"value":"/         //Return an empty error since we only tested the first token of the stream","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132715,"byte_end":132801,"line_start":1469,"line_end":1469,"column_start":1,"column_end":87}},{"value":"/         let errors = ParseError::new(position, Error::Expected(From::from(\"even number\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132802,"byte_end":132897,"line_start":1470,"line_end":1470,"column_start":1,"column_end":96}},{"value":"/         Err(Consumed::Empty(errors))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132898,"byte_end":132938,"line_start":1471,"line_end":1471,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132939,"byte_end":132948,"line_start":1472,"line_end":1472,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132949,"byte_end":132956,"line_start":1473,"line_end":1473,"column_start":1,"column_end":8}},{"value":"/ let result = even_digit","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132957,"byte_end":132984,"line_start":1474,"line_end":1474,"column_start":1,"column_end":28}},{"value":"/     .parse(\"8\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":132985,"byte_end":133004,"line_start":1475,"line_end":1475,"column_start":1,"column_end":20}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133005,"byte_end":133027,"line_start":1476,"line_end":1476,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(8));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133028,"byte_end":133058,"line_start":1477,"line_end":1477,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133059,"byte_end":133066,"line_start":1478,"line_end":1478,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133067,"byte_end":133074,"line_start":1479,"line_end":1479,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133075,"byte_end":133092,"line_start":1480,"line_end":1480,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1743},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133706,"byte_end":133714,"line_start":1513,"line_end":1513,"column_start":12,"column_end":20},"name":"Optional","qualname":"::combinator::Optional","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":826},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134786,"byte_end":134794,"line_start":1546,"line_end":1546,"column_start":8,"column_end":16},"name":"optional","qualname":"::combinator::optional","value":"pub fn optional<P>(P) -> Optional<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without\n consuming any input. Fails if `parser` fails after having consumed some input.","sig":null,"attributes":[{"value":"/ Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134244,"byte_end":134332,"line_start":1531,"line_end":1531,"column_start":1,"column_end":89}},{"value":"/ consuming any input. Fails if `parser` fails after having consumed some input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134333,"byte_end":134415,"line_start":1532,"line_end":1532,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134416,"byte_end":134419,"line_start":1533,"line_end":1533,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134420,"byte_end":134427,"line_start":1534,"line_end":1534,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134428,"byte_end":134455,"line_start":1535,"line_end":1535,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134456,"byte_end":134477,"line_start":1536,"line_end":1536,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::string;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134478,"byte_end":134510,"line_start":1537,"line_end":1537,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134511,"byte_end":134528,"line_start":1538,"line_end":1538,"column_start":1,"column_end":18}},{"value":"/ let mut parser = optional(string(\"hello\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134529,"byte_end":134576,"line_start":1539,"line_end":1539,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser.parse(\"hello\"), Ok((Some(\"hello\"), \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134577,"byte_end":134640,"line_start":1540,"line_end":1540,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser.parse(\"world\"), Ok((None, \"world\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134641,"byte_end":134700,"line_start":1541,"line_end":1541,"column_start":1,"column_end":60}},{"value":"/ assert!(parser.parse(\"heya\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134701,"byte_end":134744,"line_start":1542,"line_end":1542,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134745,"byte_end":134752,"line_start":1543,"line_end":1543,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134753,"byte_end":134760,"line_start":1544,"line_end":1544,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134761,"byte_end":134778,"line_start":1545,"line_end":1545,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134886,"byte_end":134893,"line_start":1553,"line_end":1553,"column_start":16,"column_end":23},"name":"Between","qualname":"::combinator::Between","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135324,"byte_end":135331,"line_start":1569,"line_end":1569,"column_start":8,"column_end":15},"name":"between","qualname":"::combinator::between","value":"pub fn between<I, L, R, P>(L, R, P) -> Between<L, R, P> where I: Stream,\nL: Parser<Input = I>, R: Parser<Input = I>, P: Parser<Input = I>","parent":null,"children":[],"decl_id":null,"docs":" Parses `open` followed by `parser` followed by `close`.\n Returns the value of `parser`.","sig":null,"attributes":[{"value":"/ Parses `open` followed by `parser` followed by `close`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134926,"byte_end":134985,"line_start":1554,"line_end":1554,"column_start":1,"column_end":60}},{"value":"/ Returns the value of `parser`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":134986,"byte_end":135020,"line_start":1555,"line_end":1555,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135021,"byte_end":135024,"line_start":1556,"line_end":1556,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135025,"byte_end":135032,"line_start":1557,"line_end":1557,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135033,"byte_end":135060,"line_start":1558,"line_end":1558,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135061,"byte_end":135082,"line_start":1559,"line_end":1559,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::string;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135083,"byte_end":135115,"line_start":1560,"line_end":1560,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135116,"byte_end":135133,"line_start":1561,"line_end":1561,"column_start":1,"column_end":18}},{"value":"/ let result = between(token('['), token(']'), string(\"rust\"))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135134,"byte_end":135198,"line_start":1562,"line_end":1562,"column_start":1,"column_end":65}},{"value":"/     .parse(\"[rust]\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135199,"byte_end":135223,"line_start":1563,"line_end":1563,"column_start":1,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135224,"byte_end":135246,"line_start":1564,"line_end":1564,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135247,"byte_end":135282,"line_start":1565,"line_end":1565,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135283,"byte_end":135290,"line_start":1566,"line_end":1566,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135291,"byte_end":135298,"line_start":1567,"line_end":1567,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135299,"byte_end":135316,"line_start":1568,"line_end":1568,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1771},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135569,"byte_end":135576,"line_start":1580,"line_end":1580,"column_start":12,"column_end":19},"name":"Chainl1","qualname":"::combinator::Chainl1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":841},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137104,"byte_end":137111,"line_start":1630,"line_end":1630,"column_start":8,"column_end":15},"name":"chainl1","qualname":"::combinator::chainl1","value":"pub fn chainl1<P, Op>(P, Op) -> Chainl1<P, Op> where P: Parser,\nOp: Parser<Input = P::Input>, Op::Output: FnOnce(P::Output, P::Output) ->\nP::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the\n left associative application of the function returned by the parser `op`.","sig":null,"attributes":[{"value":"/ Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136559,"byte_end":136654,"line_start":1615,"line_end":1615,"column_start":1,"column_end":96}},{"value":"/ left associative application of the function returned by the parser `op`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136655,"byte_end":136732,"line_start":1616,"line_end":1616,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136733,"byte_end":136736,"line_start":1617,"line_end":1617,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136737,"byte_end":136744,"line_start":1618,"line_end":1618,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136745,"byte_end":136772,"line_start":1619,"line_end":1619,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136773,"byte_end":136794,"line_start":1620,"line_end":1620,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136795,"byte_end":136826,"line_start":1621,"line_end":1621,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136827,"byte_end":136844,"line_start":1622,"line_end":1622,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136845,"byte_end":136909,"line_start":1623,"line_end":1623,"column_start":1,"column_end":65}},{"value":"/ let sub = token('-').map(|_| |l: u32, r: u32| l - r);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136910,"byte_end":136967,"line_start":1624,"line_end":1624,"column_start":1,"column_end":58}},{"value":"/ let mut parser = chainl1(number, sub);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":136968,"byte_end":137010,"line_start":1625,"line_end":1625,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(parser.parse(\"9-3-5\"), Ok((1, \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137011,"byte_end":137062,"line_start":1626,"line_end":1626,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137063,"byte_end":137070,"line_start":1627,"line_end":1627,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137071,"byte_end":137078,"line_start":1628,"line_end":1628,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137079,"byte_end":137096,"line_start":1629,"line_end":1629,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1781},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137327,"byte_end":137334,"line_start":1640,"line_end":1640,"column_start":12,"column_end":19},"name":"Chainr1","qualname":"::combinator::Chainr1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139155,"byte_end":139162,"line_start":1694,"line_end":1694,"column_start":8,"column_end":15},"name":"chainr1","qualname":"::combinator::chainr1","value":"pub fn chainr1<P, Op>(P, Op) -> Chainr1<P, Op> where P: Parser,\nOp: Parser<Input = P::Input>, Op::Output: FnOnce(P::Output, P::Output) ->\nP::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times separated by `op`. The value returned is the one produced by the\n right associative application of the function returned by `op`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138611,"byte_end":138708,"line_start":1679,"line_end":1679,"column_start":1,"column_end":98}},{"value":"/ right associative application of the function returned by `op`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138709,"byte_end":138776,"line_start":1680,"line_end":1680,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138777,"byte_end":138780,"line_start":1681,"line_end":1681,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138781,"byte_end":138788,"line_start":1682,"line_end":1682,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138789,"byte_end":138816,"line_start":1683,"line_end":1683,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138817,"byte_end":138838,"line_start":1684,"line_end":1684,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138839,"byte_end":138870,"line_start":1685,"line_end":1685,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138871,"byte_end":138888,"line_start":1686,"line_end":1686,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138889,"byte_end":138953,"line_start":1687,"line_end":1687,"column_start":1,"column_end":65}},{"value":"/ let pow = token('^').map(|_| |l: u32, r: u32| l.pow(r));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":138954,"byte_end":139014,"line_start":1688,"line_end":1688,"column_start":1,"column_end":61}},{"value":"/ let mut parser = chainr1(number, pow);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139015,"byte_end":139057,"line_start":1689,"line_end":1689,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(parser.parse(\"2^3^2\"), Ok((512, \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139058,"byte_end":139115,"line_start":1690,"line_end":1690,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139116,"byte_end":139121,"line_start":1691,"line_end":1691,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139122,"byte_end":139129,"line_start":1692,"line_end":1692,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139130,"byte_end":139147,"line_start":1693,"line_end":1693,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1791},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139378,"byte_end":139381,"line_start":1704,"line_end":1704,"column_start":12,"column_end":15},"name":"Try","qualname":"::combinator::Try","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140175,"byte_end":140178,"line_start":1735,"line_end":1735,"column_start":8,"column_end":11},"name":"try","qualname":"::combinator::try","value":"pub fn try<P>(P) -> Try<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" `try(p)` behaves as `p` except it acts as if the parser hadn't consumed any input if `p` fails after\n consuming input.","sig":null,"attributes":[{"value":"/ `try(p)` behaves as `p` except it acts as if the parser hadn't consumed any input if `p` fails after","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139675,"byte_end":139779,"line_start":1718,"line_end":1718,"column_start":1,"column_end":105}},{"value":"/ consuming input.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139780,"byte_end":139800,"line_start":1719,"line_end":1719,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139801,"byte_end":139804,"line_start":1720,"line_end":1720,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139805,"byte_end":139812,"line_start":1721,"line_end":1721,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139813,"byte_end":139840,"line_start":1722,"line_end":1722,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139841,"byte_end":139862,"line_start":1723,"line_end":1723,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::string;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139863,"byte_end":139895,"line_start":1724,"line_end":1724,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139896,"byte_end":139913,"line_start":1725,"line_end":1725,"column_start":1,"column_end":18}},{"value":"/ let mut p = try(string(\"let\"))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139914,"byte_end":139948,"line_start":1726,"line_end":1726,"column_start":1,"column_end":35}},{"value":"/     .or(string(\"lex\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139949,"byte_end":139976,"line_start":1727,"line_end":1727,"column_start":1,"column_end":28}},{"value":"/ let result = p.parse(\"lex\").map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139977,"byte_end":140022,"line_start":1728,"line_end":1728,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok(\"lex\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140023,"byte_end":140057,"line_start":1729,"line_end":1729,"column_start":1,"column_end":35}},{"value":"/ let result = p.parse(\"aet\").map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140058,"byte_end":140103,"line_start":1730,"line_end":1730,"column_start":1,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140104,"byte_end":140133,"line_start":1731,"line_end":1731,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140134,"byte_end":140141,"line_start":1732,"line_end":1732,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140142,"byte_end":140149,"line_start":1733,"line_end":1733,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140150,"byte_end":140167,"line_start":1734,"line_end":1734,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1798},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140263,"byte_end":140272,"line_start":1743,"line_end":1743,"column_start":12,"column_end":21},"name":"LookAhead","qualname":"::combinator::LookAhead","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":872},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141141,"byte_end":141151,"line_start":1781,"line_end":1781,"column_start":8,"column_end":18},"name":"look_ahead","qualname":"::combinator::look_ahead","value":"pub fn look_ahead<P>(P) -> LookAhead<P> where P: Parser","parent":null,"children":[],"decl_id":null,"docs":" `look_ahead(p)` acts as `p` but doesn't consume input on success.","sig":null,"attributes":[{"value":"/ `look_ahead(p)` acts as `p` but doesn't consume input on success.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140714,"byte_end":140783,"line_start":1764,"line_end":1764,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140784,"byte_end":140787,"line_start":1765,"line_end":1765,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140788,"byte_end":140795,"line_start":1766,"line_end":1766,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140796,"byte_end":140823,"line_start":1767,"line_end":1767,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140824,"byte_end":140845,"line_start":1768,"line_end":1768,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::string;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140846,"byte_end":140878,"line_start":1769,"line_end":1769,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140879,"byte_end":140896,"line_start":1770,"line_end":1770,"column_start":1,"column_end":18}},{"value":"/ let mut p = look_ahead(string(\"test\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140897,"byte_end":140940,"line_start":1771,"line_end":1771,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140941,"byte_end":140944,"line_start":1772,"line_end":1772,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"test str\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140945,"byte_end":140982,"line_start":1773,"line_end":1773,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"test\", \"test str\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140983,"byte_end":141032,"line_start":1774,"line_end":1774,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141033,"byte_end":141036,"line_start":1775,"line_end":1775,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"aet\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141037,"byte_end":141069,"line_start":1776,"line_end":1776,"column_start":1,"column_end":33}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141070,"byte_end":141099,"line_start":1777,"line_end":1777,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141100,"byte_end":141107,"line_start":1778,"line_end":1778,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141108,"byte_end":141115,"line_start":1779,"line_end":1779,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141116,"byte_end":141133,"line_start":1780,"line_end":1780,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1805},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141248,"byte_end":141252,"line_start":1789,"line_end":1789,"column_start":12,"column_end":16},"name":"With","qualname":"::combinator::With","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":883},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141860,"byte_end":141864,"line_start":1814,"line_end":1814,"column_start":8,"column_end":12},"name":"with","qualname":"::combinator::with","value":"pub fn with<P1, P2>(P1, P2) -> With<P1, P2> where P1: Parser, P2: Parser<Input\n= P1::Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.with(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.with(p2)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141731,"byte_end":141765,"line_start":1810,"line_end":1810,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141766,"byte_end":141769,"line_start":1811,"line_end":1811,"column_start":1,"column_end":4}},{"value":"/ [`p1.with(p2)`]: ../primitives/trait.Parser.html#method.with","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141770,"byte_end":141834,"line_start":1812,"line_end":1812,"column_start":1,"column_end":65}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141835,"byte_end":141852,"line_start":1813,"line_end":1813,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1814},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142014,"byte_end":142018,"line_start":1823,"line_end":1823,"column_start":12,"column_end":16},"name":"Skip","qualname":"::combinator::Skip","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142522,"byte_end":142526,"line_start":1845,"line_end":1845,"column_start":8,"column_end":12},"name":"skip","qualname":"::combinator::skip","value":"pub fn skip<P1, P2>(P1, P2) -> Skip<P1, P2> where P1: Parser, P2: Parser<Input\n= P1::Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142497,"byte_end":142514,"line_start":1844,"line_end":1844,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1823},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142676,"byte_end":142683,"line_start":1854,"line_end":1854,"column_start":12,"column_end":19},"name":"Message","qualname":"::combinator::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":905},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":143811,"byte_end":143818,"line_start":1895,"line_end":1895,"column_start":8,"column_end":15},"name":"message","qualname":"::combinator::message","value":"pub fn message<P>(P,\n                  Info<<P::Input as StreamOnce>::Item,\n                       <P::Input as StreamOnce>::Range>) -> Message<P> where\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.message(msg)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.message(msg)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":143671,"byte_end":143709,"line_start":1891,"line_end":1891,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":143710,"byte_end":143713,"line_start":1892,"line_end":1892,"column_start":1,"column_end":4}},{"value":"/ [`p1.message(msg)`]: ../primitives/trait.Parser.html#method.message","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":143714,"byte_end":143785,"line_start":1893,"line_end":1893,"column_start":1,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":143786,"byte_end":143803,"line_start":1894,"line_end":1894,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1831},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":144003,"byte_end":144005,"line_start":1906,"line_end":1906,"column_start":12,"column_end":14},"name":"Or","qualname":"::combinator::Or","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145258,"byte_end":145260,"line_start":1945,"line_end":1945,"column_start":8,"column_end":10},"name":"or","qualname":"::combinator::or","value":"pub fn or<P1, P2>(P1, P2) -> Or<P1, P2> where P1: Parser, P2: Parser<Input =\nP1::Input, Output = P1::Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.or(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.or(p2)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":144956,"byte_end":144988,"line_start":1938,"line_end":1938,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":144989,"byte_end":144992,"line_start":1939,"line_end":1939,"column_start":1,"column_end":4}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":144993,"byte_end":145080,"line_start":1940,"line_end":1940,"column_start":1,"column_end":88}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145081,"byte_end":145167,"line_start":1941,"line_end":1941,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145168,"byte_end":145171,"line_start":1942,"line_end":1942,"column_start":1,"column_end":4}},{"value":"/ [`p1.or(p2)`]: ../primitives/trait.Parser.html#method.or","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145172,"byte_end":145232,"line_start":1943,"line_end":1943,"column_start":1,"column_end":61}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145233,"byte_end":145250,"line_start":1944,"line_end":1944,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1841},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145425,"byte_end":145428,"line_start":1954,"line_end":1954,"column_start":12,"column_end":15},"name":"Map","qualname":"::combinator::Map","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":929},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146208,"byte_end":146211,"line_start":1981,"line_end":1981,"column_start":8,"column_end":11},"name":"map","qualname":"::combinator::map","value":"pub fn map<P, F, B>(P, F) -> Map<P, F> where P: Parser, F: FnMut(P::Output) ->\nB","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.map(f)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146086,"byte_end":146117,"line_start":1977,"line_end":1977,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146118,"byte_end":146121,"line_start":1978,"line_end":1978,"column_start":1,"column_end":4}},{"value":"/ [`p.map(f)`]: ../primitives/trait.Parser.html#method.map","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146122,"byte_end":146182,"line_start":1979,"line_end":1979,"column_start":1,"column_end":61}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146183,"byte_end":146200,"line_start":1980,"line_end":1980,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1851},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146344,"byte_end":146351,"line_start":1990,"line_end":1990,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::combinator::FlatMap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":943},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147362,"byte_end":147370,"line_start":2023,"line_end":2023,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::combinator::flat_map","value":"pub fn flat_map<P, F, B>(P, F) -> FlatMap<P, F> where P: Parser,\nF: FnMut(P::Output) -> Result<B, ParseError<P::Input>>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.flat_map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.flat_map(f)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147225,"byte_end":147261,"line_start":2019,"line_end":2019,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147262,"byte_end":147265,"line_start":2020,"line_end":2020,"column_start":1,"column_end":4}},{"value":"/ [`p.flat_map(f)`]: ../primitives/trait.Parser.html#method.flat_map","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147266,"byte_end":147336,"line_start":2021,"line_end":2021,"column_start":1,"column_end":71}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147337,"byte_end":147354,"line_start":2022,"line_end":2022,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1861},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147541,"byte_end":147545,"line_start":2032,"line_end":2032,"column_start":12,"column_end":16},"name":"Then","qualname":"::combinator::Then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":955},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":148702,"byte_end":148706,"line_start":2068,"line_end":2068,"column_start":8,"column_end":12},"name":"then","qualname":"::combinator::then","value":"pub fn then<P, F, N>(P, F) -> Then<P, F> where F: FnMut(P::Output) -> N,\nP: Parser, N: Parser<Input = P::Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then(f)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":148577,"byte_end":148609,"line_start":2064,"line_end":2064,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":148610,"byte_end":148613,"line_start":2065,"line_end":2065,"column_start":1,"column_end":4}},{"value":"/ [`p.then(f)`]: ../primitives/trait.Parser.html#method.then","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":148614,"byte_end":148676,"line_start":2066,"line_end":2066,"column_start":1,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":148677,"byte_end":148694,"line_start":2067,"line_end":2067,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1871},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":148874,"byte_end":148882,"line_start":2078,"line_end":2078,"column_start":12,"column_end":20},"name":"Expected","qualname":"::combinator::Expected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":966},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":149972,"byte_end":149980,"line_start":2119,"line_end":2119,"column_start":8,"column_end":16},"name":"expected","qualname":"::combinator::expected","value":"pub fn expected<P>(P,\n                   Info<<P::Input as StreamOnce>::Item,\n                        <P::Input as StreamOnce>::Range>) -> Expected<P> where\nP: Parser","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.expected(info)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.expected(info)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":149829,"byte_end":149868,"line_start":2115,"line_end":2115,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":149869,"byte_end":149872,"line_start":2116,"line_end":2116,"column_start":1,"column_end":4}},{"value":"/ [`p.expected(info)`]: ../primitives/trait.Parser.html#method.expected","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":149873,"byte_end":149946,"line_start":2117,"line_end":2117,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":149947,"byte_end":149964,"line_start":2118,"line_end":2118,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1879},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":150169,"byte_end":150176,"line_start":2130,"line_end":2130,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::combinator::AndThen","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":977},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":151363,"byte_end":151371,"line_start":2164,"line_end":2164,"column_start":8,"column_end":16},"name":"and_then","qualname":"::combinator::and_then","value":"pub fn and_then<P, F, O, E>(P, F) -> AndThen<P, F> where P: Parser,\nF: FnMut(P::Output) -> Result<O, E>,\nE: Into<Error<<P::Input as StreamOnce>::Item,\n              <P::Input as StreamOnce>::Range>>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.and_then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.and_then(f)`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":151226,"byte_end":151262,"line_start":2160,"line_end":2160,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":151263,"byte_end":151266,"line_start":2161,"line_end":2161,"column_start":1,"column_end":4}},{"value":"/ [`p.and_then(f)`]: ../primitives/trait.Parser.html#method.and_then","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":151267,"byte_end":151337,"line_start":2162,"line_end":2162,"column_start":1,"column_end":71}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":151338,"byte_end":151355,"line_start":2163,"line_end":2163,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2032},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":158543,"byte_end":158552,"line_start":2371,"line_end":2371,"column_start":12,"column_end":21},"name":"EnvParser","qualname":"::combinator::EnvParser","value":"EnvParser {  }","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":994},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":160050,"byte_end":160060,"line_start":2429,"line_end":2429,"column_start":8,"column_end":18},"name":"env_parser","qualname":"::combinator::env_parser","value":"pub fn env_parser<E, I, O>(E, fn(: E, : I) -> ParseResult<O, I>)\n-> EnvParser<E, I, O> where E: Clone, I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser out of an environment and a function which needs the given environment to\n do the parsing. This is commonly useful to allow multiple parsers to share some environment\n while still allowing the parsers to be written in separate functions.","sig":null,"attributes":[{"value":"/ Constructs a parser out of an environment and a function which needs the given environment to","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":158908,"byte_end":159005,"line_start":2393,"line_end":2393,"column_start":1,"column_end":98}},{"value":"/ do the parsing. This is commonly useful to allow multiple parsers to share some environment","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159006,"byte_end":159101,"line_start":2394,"line_end":2394,"column_start":1,"column_end":96}},{"value":"/ while still allowing the parsers to be written in separate functions.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159102,"byte_end":159175,"line_start":2395,"line_end":2395,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159176,"byte_end":159179,"line_start":2396,"line_end":2396,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159180,"byte_end":159187,"line_start":2397,"line_end":2397,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159188,"byte_end":159215,"line_start":2398,"line_end":2398,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159216,"byte_end":159252,"line_start":2399,"line_end":2399,"column_start":1,"column_end":37}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159253,"byte_end":159274,"line_start":2400,"line_end":2400,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::letter;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159275,"byte_end":159307,"line_start":2401,"line_end":2401,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159308,"byte_end":159325,"line_start":2402,"line_end":2402,"column_start":1,"column_end":18}},{"value":"/ struct Interner(HashMap<String, u32>);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159326,"byte_end":159368,"line_start":2403,"line_end":2403,"column_start":1,"column_end":43}},{"value":"/ impl Interner {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159369,"byte_end":159388,"line_start":2404,"line_end":2404,"column_start":1,"column_end":20}},{"value":"/     fn string<I>(&self, input: I) -> ParseResult<u32, I>","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159389,"byte_end":159449,"line_start":2405,"line_end":2405,"column_start":1,"column_end":61}},{"value":"/         where I: Stream<Item=char>","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159450,"byte_end":159488,"line_start":2406,"line_end":2406,"column_start":1,"column_end":39}},{"value":"/     {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159489,"byte_end":159498,"line_start":2407,"line_end":2407,"column_start":1,"column_end":10}},{"value":"/         many(letter())","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159499,"byte_end":159525,"line_start":2408,"line_end":2408,"column_start":1,"column_end":27}},{"value":"/             .map(|s: String| self.0.get(&s).cloned().unwrap_or(0))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159526,"byte_end":159596,"line_start":2409,"line_end":2409,"column_start":1,"column_end":71}},{"value":"/             .parse_stream(input)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159597,"byte_end":159633,"line_start":2410,"line_end":2410,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159634,"byte_end":159643,"line_start":2411,"line_end":2411,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159644,"byte_end":159649,"line_start":2412,"line_end":2412,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159650,"byte_end":159653,"line_start":2413,"line_end":2413,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159654,"byte_end":159687,"line_start":2414,"line_end":2414,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"hello\".into(), 1);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159688,"byte_end":159722,"line_start":2415,"line_end":2415,"column_start":1,"column_end":35}},{"value":"/ map.insert(\"test\".into(), 2);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159723,"byte_end":159756,"line_start":2416,"line_end":2416,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159757,"byte_end":159760,"line_start":2417,"line_end":2417,"column_start":1,"column_end":4}},{"value":"/ let env = Interner(map);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159761,"byte_end":159789,"line_start":2418,"line_end":2418,"column_start":1,"column_end":29}},{"value":"/ let mut parser = env_parser(&env, Interner::string);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159790,"byte_end":159846,"line_start":2419,"line_end":2419,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159847,"byte_end":159850,"line_start":2420,"line_end":2420,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"hello\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159851,"byte_end":159890,"line_start":2421,"line_end":2421,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((1, \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159891,"byte_end":159927,"line_start":2422,"line_end":2422,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159928,"byte_end":159931,"line_start":2423,"line_end":2423,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"world\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159932,"byte_end":159971,"line_start":2424,"line_end":2424,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((0, \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":159972,"byte_end":160008,"line_start":2425,"line_end":2425,"column_start":1,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":160009,"byte_end":160016,"line_start":2426,"line_end":2426,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":160017,"byte_end":160024,"line_start":2427,"line_end":2427,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":160025,"byte_end":160042,"line_start":2428,"line_end":2428,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":160277,"byte_end":160286,"line_start":2441,"line_end":2441,"column_start":12,"column_end":21},"name":"Recognize","qualname":"::combinator::Recognize","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1007},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162451,"byte_end":162460,"line_start":2504,"line_end":2504,"column_start":8,"column_end":17},"name":"recognize","qualname":"::combinator::recognize","value":"pub fn recognize<F, P>(P) -> Recognize<F, P> where P: Parser,\nF: FromIterator<<P::Input as StreamOnce>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser which returns the tokens parsed by `parser` accumulated in\n `F: FromIterator<P::Input::Item>` instead of `P::Output`.","sig":null,"attributes":[{"value":"/ Constructs a parser which returns the tokens parsed by `parser` accumulated in","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":161909,"byte_end":161991,"line_start":2491,"line_end":2491,"column_start":1,"column_end":83}},{"value":"/ `F: FromIterator<P::Input::Item>` instead of `P::Output`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":161992,"byte_end":162053,"line_start":2492,"line_end":2492,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162054,"byte_end":162057,"line_start":2493,"line_end":2493,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162058,"byte_end":162065,"line_start":2494,"line_end":2494,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162066,"byte_end":162090,"line_start":2495,"line_end":2495,"column_start":1,"column_end":25}},{"value":"/ use combine::combinator::{skip_many1, token, recognize};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162091,"byte_end":162151,"line_start":2496,"line_end":2496,"column_start":1,"column_end":61}},{"value":"/ use combine::char::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162152,"byte_end":162181,"line_start":2497,"line_end":2497,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162182,"byte_end":162185,"line_start":2498,"line_end":2498,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize((skip_many1(digit()), token('.'), skip_many1(digit())));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162186,"byte_end":162273,"line_start":2499,"line_end":2499,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162274,"byte_end":162345,"line_start":2500,"line_end":2500,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162346,"byte_end":162417,"line_start":2501,"line_end":2501,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162418,"byte_end":162425,"line_start":2502,"line_end":2502,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":162426,"byte_end":162443,"line_start":2503,"line_end":2503,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1010},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":2841},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1024},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1038},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1051},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1066},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1079},{"krate":0,"index":1085}],"decl_id":null,"docs":" Module containing zero-copy parsers.\n","sig":null,"attributes":[{"value":"/ Module containing zero-copy parsers.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17289,"byte_end":17329,"line_start":486,"line_end":486,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1020},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":173475,"byte_end":173480,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Range","qualname":"::range::Range","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1031},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174826,"byte_end":174831,"line_start":53,"line_end":53,"column_start":8,"column_end":13},"name":"range","qualname":"::range::range","value":"pub fn range<I>(I::Range) -> Range<I> where I: RangeStream,\nI::Range: PartialEq + ::primitives::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `i.len()` and succeds if `i` is equal to that\n range.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `i.len()` and succeds if `i` is equal to that","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174358,"byte_end":174454,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ range.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174455,"byte_end":174465,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174466,"byte_end":174469,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174470,"byte_end":174477,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174478,"byte_end":174505,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/ # use combine::range::range;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174506,"byte_end":174538,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174539,"byte_end":174560,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174561,"byte_end":174578,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ let mut parser = range(\"hello\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174579,"byte_end":174615,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ let result = parser.parse(\"hello world\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174616,"byte_end":174661,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok((\"hello\", \" world\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174662,"byte_end":174710,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ let result = parser.parse(\"hel world\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174711,"byte_end":174754,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174755,"byte_end":174784,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174785,"byte_end":174792,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174793,"byte_end":174800,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174801,"byte_end":174818,"line_start":52,"line_end":52,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":174962,"byte_end":174966,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"Take","qualname":"::range::Take","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1043},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175967,"byte_end":175971,"line_start":98,"line_end":98,"column_start":8,"column_end":12},"name":"take","qualname":"::range::take","value":"pub fn take<I>(usize) -> Take<I> where I: RangeStream,\nI::Range: ::primitives::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `n`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `n`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175470,"byte_end":175525,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175526,"byte_end":175529,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175530,"byte_end":175537,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175538,"byte_end":175565,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/ # use combine::range::take;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175566,"byte_end":175597,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175598,"byte_end":175619,"line_start":85,"line_end":85,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175620,"byte_end":175637,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take(1);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175638,"byte_end":175667,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"1\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175668,"byte_end":175703,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(result, Ok((\"1\", \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175704,"byte_end":175742,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/ let mut parser = take(4);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175743,"byte_end":175772,"line_start":90,"line_end":90,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175773,"byte_end":175813,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123a\", \"bc\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175814,"byte_end":175857,"line_start":92,"line_end":92,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175858,"byte_end":175895,"line_start":93,"line_end":93,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175896,"byte_end":175925,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175926,"byte_end":175933,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175934,"byte_end":175941,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175942,"byte_end":175959,"line_start":97,"line_end":97,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1045},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176098,"byte_end":176107,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::range::TakeWhile","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1057},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176960,"byte_end":176970,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"take_while","qualname":"::range::take_while","value":"pub fn take_while<I, F>(F) -> TakeWhile<I, F> where I: RangeStream,\nF: FnMut(I::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176498,"byte_end":176577,"line_start":122,"line_end":122,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176578,"byte_end":176581,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176582,"byte_end":176589,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176590,"byte_end":176617,"line_start":125,"line_end":125,"column_start":1,"column_end":28}},{"value":"/ # use combine::range::take_while;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176618,"byte_end":176655,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176656,"byte_end":176677,"line_start":127,"line_end":127,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176678,"byte_end":176695,"line_start":128,"line_end":128,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while(|c: char| c.is_digit(10));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176696,"byte_end":176754,"line_start":129,"line_end":129,"column_start":1,"column_end":59}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176755,"byte_end":176795,"line_start":130,"line_end":130,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176796,"byte_end":176839,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176840,"byte_end":176877,"line_start":132,"line_end":132,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"\", \"abc\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176878,"byte_end":176918,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176919,"byte_end":176926,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176927,"byte_end":176934,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176935,"byte_end":176952,"line_start":136,"line_end":136,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177105,"byte_end":177115,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"TakeWhile1","qualname":"::range::TakeWhile1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1072},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178288,"byte_end":178299,"line_start":184,"line_end":184,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::range::take_while1","value":"pub fn take_while1<I, F>(F) -> TakeWhile1<I, F> where I: RangeStream,\nI::Range: ::primitives::Range, F: FnMut(I::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177835,"byte_end":177914,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177915,"byte_end":177918,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177919,"byte_end":177926,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177927,"byte_end":177954,"line_start":172,"line_end":172,"column_start":1,"column_end":28}},{"value":"/ # use combine::range::take_while1;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177955,"byte_end":177993,"line_start":173,"line_end":173,"column_start":1,"column_end":39}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177994,"byte_end":178015,"line_start":174,"line_end":174,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178016,"byte_end":178033,"line_start":175,"line_end":175,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while1(|c: char| c.is_digit(10));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178034,"byte_end":178093,"line_start":176,"line_end":176,"column_start":1,"column_end":60}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178094,"byte_end":178134,"line_start":177,"line_end":177,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178135,"byte_end":178178,"line_start":178,"line_end":178,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178179,"byte_end":178216,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178217,"byte_end":178246,"line_start":180,"line_end":180,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178247,"byte_end":178254,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178255,"byte_end":178262,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178263,"byte_end":178280,"line_start":183,"line_end":183,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1075},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178471,"byte_end":178485,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"TakeUntilRange","qualname":"::range::TakeUntilRange","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1085},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180630,"byte_end":180646,"line_start":259,"line_end":259,"column_start":8,"column_end":24},"name":"take_until_range","qualname":"::range::take_until_range","value":"pub fn take_until_range<I>(I::Range) -> TakeUntilRange<I> where I: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180026,"byte_end":180106,"line_start":241,"line_end":241,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180107,"byte_end":180110,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ The range `r` will not be consumed. If `r` is not found, the parser will","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180111,"byte_end":180187,"line_start":243,"line_end":243,"column_start":1,"column_end":77}},{"value":"/ return an error.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180188,"byte_end":180208,"line_start":244,"line_end":244,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180209,"byte_end":180212,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180213,"byte_end":180220,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180221,"byte_end":180248,"line_start":247,"line_end":247,"column_start":1,"column_end":28}},{"value":"/ # use combine::range::{range, take_until_range};","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180249,"byte_end":180301,"line_start":248,"line_end":248,"column_start":1,"column_end":53}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180302,"byte_end":180323,"line_start":249,"line_end":249,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180324,"byte_end":180341,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_until_range(\"\\r\\n\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180342,"byte_end":180388,"line_start":251,"line_end":251,"column_start":1,"column_end":47}},{"value":"/ let result = parser.parse(\"To: user@example.com\\r\\n\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180389,"byte_end":180447,"line_start":252,"line_end":252,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(result, Ok((\"To: user@example.com\", \"\\r\\n\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180448,"byte_end":180509,"line_start":253,"line_end":253,"column_start":1,"column_end":62}},{"value":"/ let result = parser.parse(\"Hello, world\\n\");","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180510,"byte_end":180558,"line_start":254,"line_end":254,"column_start":1,"column_end":49}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180559,"byte_end":180588,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180589,"byte_end":180596,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180597,"byte_end":180604,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":180605,"byte_end":180622,"line_start":258,"line_end":258,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1087},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"byte","qualname":"::byte","value":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":2859},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":2066},{"krate":0,"index":2071},{"krate":0,"index":2060},{"krate":0,"index":1112},{"krate":0,"index":2082},{"krate":0,"index":2087},{"krate":0,"index":2076},{"krate":0,"index":1114},{"krate":0,"index":2098},{"krate":0,"index":2103},{"krate":0,"index":2092},{"krate":0,"index":1116},{"krate":0,"index":2112},{"krate":0,"index":2117},{"krate":0,"index":2106},{"krate":0,"index":1118},{"krate":0,"index":2127},{"krate":0,"index":2132},{"krate":0,"index":2121},{"krate":0,"index":1120},{"krate":0,"index":2142},{"krate":0,"index":2147},{"krate":0,"index":2136},{"krate":0,"index":1122},{"krate":0,"index":2157},{"krate":0,"index":2162},{"krate":0,"index":2151},{"krate":0,"index":1124},{"krate":0,"index":2173},{"krate":0,"index":2178},{"krate":0,"index":2167},{"krate":0,"index":1126},{"krate":0,"index":2189},{"krate":0,"index":2194},{"krate":0,"index":2183},{"krate":0,"index":1128},{"krate":0,"index":2205},{"krate":0,"index":2210},{"krate":0,"index":2199},{"krate":0,"index":1130},{"krate":0,"index":2221},{"krate":0,"index":2226},{"krate":0,"index":2215},{"krate":0,"index":1132},{"krate":0,"index":2236},{"krate":0,"index":2241},{"krate":0,"index":2230},{"krate":0,"index":1134},{"krate":0,"index":2246},{"krate":0,"index":2251},{"krate":0,"index":1136},{"krate":0,"index":1146},{"krate":0,"index":2254},{"krate":0,"index":2261},{"krate":0,"index":1149},{"krate":0,"index":1159},{"krate":0,"index":1163}],"decl_id":null,"docs":" Module containing parsers specialized on byte streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on byte streams.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17345,"byte_end":17403,"line_start":488,"line_end":488,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1109},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182478,"byte_end":182482,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"byte","qualname":"::byte::byte","value":"pub fn byte<I>(u8) -> Token<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses a byteacter and succeeds if the byteacter is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a byteacter and succeeds if the byteacter is equal to `c`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182141,"byte_end":182210,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182211,"byte_end":182214,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182215,"byte_end":182222,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182223,"byte_end":182247,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::byte;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182248,"byte_end":182276,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(byte(b'!').parse(&b\"!\"[..]), Ok((b'!', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182277,"byte_end":182343,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ assert!(byte(b'A').parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182344,"byte_end":182393,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ assert!(byte(b'A').parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182394,"byte_end":182444,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182445,"byte_end":182452,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182453,"byte_end":182470,"line_start":20,"line_end":20,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2066},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182576,"byte_end":182581,"line_start":28,"line_end":28,"column_start":22,"column_end":27},"name":"Digit","qualname":"::byte::Digit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183151,"byte_end":183156,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"digit","qualname":"::byte::digit","value":"pub fn digit<I>() -> Digit<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit (0–9).","sig":null,"attributes":[{"value":"/ Parses a base-10 digit (0–9).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182903,"byte_end":182938,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182939,"byte_end":182942,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182943,"byte_end":182950,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182951,"byte_end":182975,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":182976,"byte_end":183005,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(digit().parse(&b\"9\"[..]), Ok((b'9', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183006,"byte_end":183069,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ assert!(digit().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183070,"byte_end":183117,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183118,"byte_end":183125,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183126,"byte_end":183143,"line_start":47,"line_end":47,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183273,"byte_end":183278,"line_start":55,"line_end":55,"column_start":22,"column_end":27},"name":"Space","qualname":"::byte::Space","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1114},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183703,"byte_end":183708,"line_start":68,"line_end":68,"column_start":8,"column_end":13},"name":"space","qualname":"::byte::space","value":"pub fn space<I>() -> Space<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","sig":null,"attributes":[{"value":"/ Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183327,"byte_end":183377,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183378,"byte_end":183381,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183382,"byte_end":183389,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183390,"byte_end":183414,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::space;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183415,"byte_end":183444,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(space().parse(&b\" \"[..]), Ok((b' ', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183445,"byte_end":183508,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(space().parse(&b\"  \"[..]), Ok((b' ', &b\" \"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183509,"byte_end":183574,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ assert!(space().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183575,"byte_end":183622,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ assert!(space().parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183623,"byte_end":183669,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183670,"byte_end":183677,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183678,"byte_end":183695,"line_start":67,"line_end":67,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2098},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183830,"byte_end":183836,"line_start":75,"line_end":75,"column_start":22,"column_end":28},"name":"Spaces","qualname":"::byte::Spaces","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1116},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184180,"byte_end":184186,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"spaces","qualname":"::byte::spaces","value":"pub fn spaces<I>() -> Spaces<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Skips over [`space`] zero or more times","sig":null,"attributes":[{"value":"/ Skips over [`space`] zero or more times","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183875,"byte_end":183918,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183919,"byte_end":183922,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`space`]: fn.space.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183923,"byte_end":183951,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183952,"byte_end":183955,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183956,"byte_end":183963,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183964,"byte_end":183988,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::spaces;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":183989,"byte_end":184019,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(spaces().parse(&b\"\"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184020,"byte_end":184081,"line_start":83,"line_end":83,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(spaces().parse(&b\"   \"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184082,"byte_end":184146,"line_start":84,"line_end":84,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184147,"byte_end":184154,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184155,"byte_end":184172,"line_start":86,"line_end":86,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2112},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184331,"byte_end":184338,"line_start":94,"line_end":94,"column_start":22,"column_end":29},"name":"Newline","qualname":"::byte::Newline","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1118},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184650,"byte_end":184657,"line_start":105,"line_end":105,"column_start":8,"column_end":15},"name":"newline","qualname":"::byte::newline","value":"pub fn newline<I>() -> Newline<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline byteacter (`b'\\n'`).","sig":null,"attributes":[{"value":"/ Parses a newline byteacter (`b'\\n'`).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184387,"byte_end":184428,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184429,"byte_end":184432,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184433,"byte_end":184440,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184441,"byte_end":184465,"line_start":99,"line_end":99,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::newline;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184466,"byte_end":184497,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(newline().parse(&b\"\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184498,"byte_end":184565,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ assert!(newline().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184566,"byte_end":184616,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184617,"byte_end":184624,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184625,"byte_end":184642,"line_start":104,"line_end":104,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2127},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184861,"byte_end":184865,"line_start":115,"line_end":115,"column_start":22,"column_end":26},"name":"CrLf","qualname":"::byte::CrLf","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1120},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185280,"byte_end":185284,"line_start":127,"line_end":127,"column_start":8,"column_end":12},"name":"crlf","qualname":"::byte::crlf","value":"pub fn crlf<I>() -> CrLf<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byteacter.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byteacter.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":184932,"byte_end":185017,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185018,"byte_end":185021,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185022,"byte_end":185029,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185030,"byte_end":185054,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::crlf;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185055,"byte_end":185083,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(crlf().parse(&b\"\\r\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185084,"byte_end":185150,"line_start":122,"line_end":122,"column_start":1,"column_end":67}},{"value":"/ assert!(crlf().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185151,"byte_end":185198,"line_start":123,"line_end":123,"column_start":1,"column_end":48}},{"value":"/ assert!(crlf().parse(&b\"\\n\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185199,"byte_end":185246,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185247,"byte_end":185254,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185255,"byte_end":185272,"line_start":126,"line_end":126,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2142},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185526,"byte_end":185529,"line_start":139,"line_end":139,"column_start":22,"column_end":25},"name":"Tab","qualname":"::byte::Tab","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1122},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185823,"byte_end":185826,"line_start":149,"line_end":149,"column_start":8,"column_end":11},"name":"tab","qualname":"::byte::tab","value":"pub fn tab<I>() -> Tab<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab byteacter (`b'\\t'`).","sig":null,"attributes":[{"value":"/ Parses a tab byteacter (`b'\\t'`).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185577,"byte_end":185614,"line_start":140,"line_end":140,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185615,"byte_end":185618,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185619,"byte_end":185626,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185627,"byte_end":185651,"line_start":143,"line_end":143,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::tab;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185652,"byte_end":185679,"line_start":144,"line_end":144,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(tab().parse(&b\"\\t\"[..]), Ok((b'\\t', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185680,"byte_end":185743,"line_start":145,"line_end":145,"column_start":1,"column_end":64}},{"value":"/ assert!(tab().parse(&b\" \"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185744,"byte_end":185789,"line_start":146,"line_end":146,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185790,"byte_end":185797,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":185798,"byte_end":185815,"line_start":148,"line_end":148,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2157},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186015,"byte_end":186020,"line_start":159,"line_end":159,"column_start":22,"column_end":27},"name":"Upper","qualname":"::byte::Upper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1124},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186326,"byte_end":186331,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"upper","qualname":"::byte::upper","value":"pub fn upper<I>() -> Upper<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase ASCII letter (A–Z).","sig":null,"attributes":[{"value":"/ Parses an uppercase ASCII letter (A–Z).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186068,"byte_end":186113,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186114,"byte_end":186117,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186118,"byte_end":186125,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186126,"byte_end":186150,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::upper;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186151,"byte_end":186180,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(upper().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186181,"byte_end":186244,"line_start":165,"line_end":165,"column_start":1,"column_end":64}},{"value":"/ assert!(upper().parse(&b\"a\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186245,"byte_end":186292,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186293,"byte_end":186300,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186301,"byte_end":186318,"line_start":168,"line_end":168,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2173},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186452,"byte_end":186457,"line_start":176,"line_end":176,"column_start":22,"column_end":27},"name":"Lower","qualname":"::byte::Lower","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1126},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186763,"byte_end":186768,"line_start":186,"line_end":186,"column_start":8,"column_end":13},"name":"lower","qualname":"::byte::lower","value":"pub fn lower<I>() -> Lower<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase ASCII letter (a–z).","sig":null,"attributes":[{"value":"/ Parses an lowercase ASCII letter (a–z).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186505,"byte_end":186550,"line_start":177,"line_end":177,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186551,"byte_end":186554,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186555,"byte_end":186562,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186563,"byte_end":186587,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::lower;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186588,"byte_end":186617,"line_start":181,"line_end":181,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(lower().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186618,"byte_end":186681,"line_start":182,"line_end":182,"column_start":1,"column_end":64}},{"value":"/ assert!(lower().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186682,"byte_end":186729,"line_start":183,"line_end":183,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186730,"byte_end":186737,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186738,"byte_end":186755,"line_start":185,"line_end":185,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2189},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186889,"byte_end":186897,"line_start":193,"line_end":193,"column_start":22,"column_end":30},"name":"AlphaNum","qualname":"::byte::AlphaNum","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1128},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187312,"byte_end":187321,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::byte::alpha_num","value":"pub fn alpha_num<I>() -> AlphaNum<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","sig":null,"attributes":[{"value":"/ Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":186945,"byte_end":187019,"line_start":194,"line_end":194,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187020,"byte_end":187023,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187024,"byte_end":187031,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187032,"byte_end":187056,"line_start":197,"line_end":197,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::alpha_num;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187057,"byte_end":187090,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(alpha_num().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187091,"byte_end":187158,"line_start":199,"line_end":199,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(alpha_num().parse(&b\"1\"[..]), Ok((b'1', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187159,"byte_end":187226,"line_start":200,"line_end":200,"column_start":1,"column_end":68}},{"value":"/ assert!(alpha_num().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187227,"byte_end":187278,"line_start":201,"line_end":201,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187279,"byte_end":187286,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187287,"byte_end":187304,"line_start":203,"line_end":203,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2205},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187455,"byte_end":187461,"line_start":211,"line_end":211,"column_start":22,"column_end":28},"name":"Letter","qualname":"::byte::Letter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1130},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187841,"byte_end":187847,"line_start":222,"line_end":222,"column_start":8,"column_end":14},"name":"letter","qualname":"::byte::letter","value":"pub fn letter<I>() -> Letter<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII alphabet letter (a–z, A–Z).","sig":null,"attributes":[{"value":"/ Parses an ASCII alphabet letter (a–z, A–Z).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187509,"byte_end":187560,"line_start":212,"line_end":212,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187561,"byte_end":187564,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187565,"byte_end":187572,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187573,"byte_end":187597,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::letter;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187598,"byte_end":187628,"line_start":216,"line_end":216,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(letter().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187629,"byte_end":187693,"line_start":217,"line_end":217,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(letter().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187694,"byte_end":187758,"line_start":218,"line_end":218,"column_start":1,"column_end":65}},{"value":"/ assert!(letter().parse(&b\"9\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187759,"byte_end":187807,"line_start":219,"line_end":219,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187808,"byte_end":187815,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187816,"byte_end":187833,"line_start":221,"line_end":221,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2221},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":187972,"byte_end":187980,"line_start":229,"line_end":229,"column_start":22,"column_end":30},"name":"OctDigit","qualname":"::byte::OctDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1132},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188280,"byte_end":188289,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::byte::oct_digit","value":"pub fn oct_digit<I>() -> OctDigit<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188029,"byte_end":188055,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188056,"byte_end":188059,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188060,"byte_end":188067,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188068,"byte_end":188092,"line_start":234,"line_end":234,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::oct_digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188093,"byte_end":188126,"line_start":235,"line_end":235,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(oct_digit().parse(&b\"7\"[..]), Ok((b'7', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188127,"byte_end":188194,"line_start":236,"line_end":236,"column_start":1,"column_end":68}},{"value":"/ assert!(oct_digit().parse(&b\"8\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188195,"byte_end":188246,"line_start":237,"line_end":237,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188247,"byte_end":188254,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188255,"byte_end":188272,"line_start":239,"line_end":239,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2236},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188509,"byte_end":188517,"line_start":250,"line_end":250,"column_start":22,"column_end":30},"name":"HexDigit","qualname":"::byte::HexDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1134},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188866,"byte_end":188875,"line_start":260,"line_end":260,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::byte::hex_digit","value":"pub fn hex_digit<I>() -> HexDigit<I> where I: Stream<Item = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","sig":null,"attributes":[{"value":"/ Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188565,"byte_end":188641,"line_start":251,"line_end":251,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188642,"byte_end":188645,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188646,"byte_end":188653,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188654,"byte_end":188678,"line_start":254,"line_end":254,"column_start":1,"column_end":25}},{"value":"/ use combine::byte::hex_digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188679,"byte_end":188712,"line_start":255,"line_end":255,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(hex_digit().parse(&b\"F\"[..]), Ok((b'F', &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188713,"byte_end":188780,"line_start":256,"line_end":256,"column_start":1,"column_end":68}},{"value":"/ assert!(hex_digit().parse(&b\"H\"[..]).is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188781,"byte_end":188832,"line_start":257,"line_end":257,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188833,"byte_end":188840,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":188841,"byte_end":188858,"line_start":259,"line_end":259,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2246},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189007,"byte_end":189012,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::byte::Bytes","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1146},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190191,"byte_end":190196,"line_start":309,"line_end":309,"column_start":8,"column_end":13},"name":"bytes","qualname":"::byte::bytes","value":"pub fn bytes<'a, I>(&'static [u8]) -> Bytes<I> where I: Stream<Item = u8,\nRange = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s`.","sig":null,"attributes":[{"value":"/ Parses the bytes `s`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189636,"byte_end":189661,"line_start":289,"line_end":289,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189662,"byte_end":189665,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ If you have a stream implementing [`RangeStream`] such as `&[u8]` you can also use the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189666,"byte_end":189756,"line_start":291,"line_end":291,"column_start":1,"column_end":91}},{"value":"/ [`range`] parser which may be more efficient.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189757,"byte_end":189806,"line_start":292,"line_end":292,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189807,"byte_end":189810,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189811,"byte_end":189818,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189819,"byte_end":189846,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189847,"byte_end":189868,"line_start":296,"line_end":296,"column_start":1,"column_end":22}},{"value":"/ # use combine::byte::bytes;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189869,"byte_end":189900,"line_start":297,"line_end":297,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189901,"byte_end":189918,"line_start":298,"line_end":298,"column_start":1,"column_end":18}},{"value":"/ let result = bytes(&b\"rust\"[..])","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189919,"byte_end":189955,"line_start":299,"line_end":299,"column_start":1,"column_end":37}},{"value":"/     .parse(&b\"rust\"[..])","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189956,"byte_end":189984,"line_start":300,"line_end":300,"column_start":1,"column_end":29}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189985,"byte_end":190007,"line_start":301,"line_end":301,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"rust\"[..]));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190008,"byte_end":190049,"line_start":302,"line_end":302,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190050,"byte_end":190057,"line_start":303,"line_end":303,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190058,"byte_end":190065,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190066,"byte_end":190069,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ [`RangeStream`]: ../primitives/trait.RangeStream.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190070,"byte_end":190127,"line_start":306,"line_end":306,"column_start":1,"column_end":58}},{"value":"/ [`range`]: ../range/fn.range.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190128,"byte_end":190165,"line_start":307,"line_end":307,"column_start":1,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190166,"byte_end":190183,"line_start":308,"line_end":308,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2254},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190343,"byte_end":190351,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"BytesCmp","qualname":"::byte::BytesCmp","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191711,"byte_end":191720,"line_start":360,"line_end":360,"column_start":8,"column_end":17},"name":"bytes_cmp","qualname":"::byte::bytes_cmp","value":"pub fn bytes_cmp<'a, C, I>(&'static [u8], C) -> BytesCmp<C, I> where\nC: FnMut(u8, u8) -> bool, I: Stream<Item = u8, Range = u8>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s` using `cmp` to compare each token.","sig":null,"attributes":[{"value":"/ Parses the bytes `s` using `cmp` to compare each token.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191025,"byte_end":191084,"line_start":339,"line_end":339,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191085,"byte_end":191088,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ If you have a stream implementing [`RangeStream`] such as `&[u8]` you can also use the","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191089,"byte_end":191179,"line_start":341,"line_end":341,"column_start":1,"column_end":91}},{"value":"/ [`range`] parser which may be more efficient.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191180,"byte_end":191229,"line_start":342,"line_end":342,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191230,"byte_end":191233,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191234,"byte_end":191241,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191242,"byte_end":191269,"line_start":345,"line_end":345,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191270,"byte_end":191291,"line_start":346,"line_end":346,"column_start":1,"column_end":22}},{"value":"/ # use combine::byte::bytes_cmp;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191292,"byte_end":191327,"line_start":347,"line_end":347,"column_start":1,"column_end":36}},{"value":"/ # use combine::primitives::Info;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191328,"byte_end":191364,"line_start":348,"line_end":348,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191365,"byte_end":191382,"line_start":349,"line_end":349,"column_start":1,"column_end":18}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191383,"byte_end":191412,"line_start":350,"line_end":350,"column_start":1,"column_end":30}},{"value":"/ let result = bytes_cmp(&b\"abc\"[..], |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191413,"byte_end":191487,"line_start":351,"line_end":351,"column_start":1,"column_end":75}},{"value":"/     .parse(&b\"AbC\"[..]);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191488,"byte_end":191516,"line_start":352,"line_end":352,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(result, Ok((&b\"abc\"[..], &b\"\"[..])));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191517,"byte_end":191569,"line_start":353,"line_end":353,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191570,"byte_end":191577,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191578,"byte_end":191585,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191586,"byte_end":191589,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ [`RangeStream`]: ../primitives/trait.RangeStream.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191590,"byte_end":191647,"line_start":357,"line_end":357,"column_start":1,"column_end":58}},{"value":"/ [`range`]: ../range/fn.range.html","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191648,"byte_end":191685,"line_start":358,"line_end":358,"column_start":1,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191686,"byte_end":191703,"line_start":359,"line_end":359,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1163},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191973,"byte_end":191976,"line_start":369,"line_end":369,"column_start":9,"column_end":12},"name":"num","qualname":"::byte::num","value":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":2283},{"krate":0,"index":2288},{"krate":0,"index":2265},{"krate":0,"index":2273},{"krate":0,"index":2277},{"krate":0,"index":2280},{"krate":0,"index":2310},{"krate":0,"index":2315},{"krate":0,"index":2292},{"krate":0,"index":2300},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":2337},{"krate":0,"index":2342},{"krate":0,"index":2319},{"krate":0,"index":2327},{"krate":0,"index":2331},{"krate":0,"index":2334},{"krate":0,"index":2364},{"krate":0,"index":2369},{"krate":0,"index":2346},{"krate":0,"index":2354},{"krate":0,"index":2358},{"krate":0,"index":2361},{"krate":0,"index":2391},{"krate":0,"index":2396},{"krate":0,"index":2373},{"krate":0,"index":2381},{"krate":0,"index":2385},{"krate":0,"index":2388},{"krate":0,"index":2418},{"krate":0,"index":2423},{"krate":0,"index":2400},{"krate":0,"index":2408},{"krate":0,"index":2412},{"krate":0,"index":2415},{"krate":0,"index":2445},{"krate":0,"index":2450},{"krate":0,"index":2427},{"krate":0,"index":2435},{"krate":0,"index":2439},{"krate":0,"index":2442},{"krate":0,"index":2472},{"krate":0,"index":2477},{"krate":0,"index":2454},{"krate":0,"index":2462},{"krate":0,"index":2466},{"krate":0,"index":2469}],"decl_id":null,"docs":" Parsers for decoding numbers in big-endian or little-endian order.\n","sig":null,"attributes":[{"value":"/ Parsers for decoding numbers in big-endian or little-endian order.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":191894,"byte_end":191964,"line_start":368,"line_end":368,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2283},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194227,"byte_end":194230,"line_start":441,"line_end":441,"column_start":13,"column_end":16},"name":"U16","qualname":"::byte::num::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2273},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194232,"byte_end":194235,"line_start":441,"line_end":441,"column_start":18,"column_end":21},"name":"u16","qualname":"::byte::num::u16","value":"pub fn u16<'a, B, I>() -> U16<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2277},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194237,"byte_end":194243,"line_start":441,"line_end":441,"column_start":23,"column_end":29},"name":"be_u16","qualname":"::byte::num::be_u16","value":"pub fn be_u16<'a, I>() -> U16<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2280},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194245,"byte_end":194251,"line_start":441,"line_end":441,"column_start":31,"column_end":37},"name":"le_u16","qualname":"::byte::num::le_u16","value":"pub fn le_u16<'a, I>() -> U16<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2310},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194703,"byte_end":194706,"line_start":454,"line_end":454,"column_start":13,"column_end":16},"name":"U32","qualname":"::byte::num::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2300},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194708,"byte_end":194711,"line_start":454,"line_end":454,"column_start":18,"column_end":21},"name":"u32","qualname":"::byte::num::u32","value":"pub fn u32<'a, B, I>() -> U32<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2304},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194713,"byte_end":194719,"line_start":454,"line_end":454,"column_start":23,"column_end":29},"name":"be_u32","qualname":"::byte::num::be_u32","value":"pub fn be_u32<'a, I>() -> U32<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2307},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":194721,"byte_end":194727,"line_start":454,"line_end":454,"column_start":31,"column_end":37},"name":"le_u32","qualname":"::byte::num::le_u32","value":"pub fn le_u32<'a, I>() -> U32<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2337},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195195,"byte_end":195198,"line_start":467,"line_end":467,"column_start":13,"column_end":16},"name":"U64","qualname":"::byte::num::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2327},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195200,"byte_end":195203,"line_start":467,"line_end":467,"column_start":18,"column_end":21},"name":"u64","qualname":"::byte::num::u64","value":"pub fn u64<'a, B, I>() -> U64<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2331},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195205,"byte_end":195211,"line_start":467,"line_end":467,"column_start":23,"column_end":29},"name":"be_u64","qualname":"::byte::num::be_u64","value":"pub fn be_u64<'a, I>() -> U64<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2334},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195213,"byte_end":195219,"line_start":467,"line_end":467,"column_start":31,"column_end":37},"name":"le_u64","qualname":"::byte::num::le_u64","value":"pub fn le_u64<'a, I>() -> U64<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2364},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195664,"byte_end":195667,"line_start":481,"line_end":481,"column_start":13,"column_end":16},"name":"I16","qualname":"::byte::num::I16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2354},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195669,"byte_end":195672,"line_start":481,"line_end":481,"column_start":18,"column_end":21},"name":"i16","qualname":"::byte::num::i16","value":"pub fn i16<'a, B, I>() -> I16<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2358},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195674,"byte_end":195680,"line_start":481,"line_end":481,"column_start":23,"column_end":29},"name":"be_i16","qualname":"::byte::num::be_i16","value":"pub fn be_i16<'a, I>() -> I16<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2361},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":195682,"byte_end":195688,"line_start":481,"line_end":481,"column_start":31,"column_end":37},"name":"le_i16","qualname":"::byte::num::le_i16","value":"pub fn le_i16<'a, I>() -> I16<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2391},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196141,"byte_end":196144,"line_start":495,"line_end":495,"column_start":13,"column_end":16},"name":"I32","qualname":"::byte::num::I32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2381},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196146,"byte_end":196149,"line_start":495,"line_end":495,"column_start":18,"column_end":21},"name":"i32","qualname":"::byte::num::i32","value":"pub fn i32<'a, B, I>() -> I32<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2385},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196151,"byte_end":196157,"line_start":495,"line_end":495,"column_start":23,"column_end":29},"name":"be_i32","qualname":"::byte::num::be_i32","value":"pub fn be_i32<'a, I>() -> I32<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2388},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196159,"byte_end":196165,"line_start":495,"line_end":495,"column_start":31,"column_end":37},"name":"le_i32","qualname":"::byte::num::le_i32","value":"pub fn le_i32<'a, I>() -> I32<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2418},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196633,"byte_end":196636,"line_start":508,"line_end":508,"column_start":13,"column_end":16},"name":"I64","qualname":"::byte::num::I64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2408},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196638,"byte_end":196641,"line_start":508,"line_end":508,"column_start":18,"column_end":21},"name":"i64","qualname":"::byte::num::i64","value":"pub fn i64<'a, B, I>() -> I64<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2412},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196643,"byte_end":196649,"line_start":508,"line_end":508,"column_start":23,"column_end":29},"name":"be_i64","qualname":"::byte::num::be_i64","value":"pub fn be_i64<'a, I>() -> I64<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2415},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":196651,"byte_end":196657,"line_start":508,"line_end":508,"column_start":31,"column_end":37},"name":"le_i64","qualname":"::byte::num::le_i64","value":"pub fn le_i64<'a, I>() -> I64<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2445},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197197,"byte_end":197200,"line_start":524,"line_end":524,"column_start":13,"column_end":16},"name":"F32","qualname":"::byte::num::F32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197202,"byte_end":197205,"line_start":524,"line_end":524,"column_start":18,"column_end":21},"name":"f32","qualname":"::byte::num::f32","value":"pub fn f32<'a, B, I>() -> F32<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2439},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197207,"byte_end":197213,"line_start":524,"line_end":524,"column_start":23,"column_end":29},"name":"be_f32","qualname":"::byte::num::be_f32","value":"pub fn be_f32<'a, I>() -> F32<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2442},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197215,"byte_end":197221,"line_start":524,"line_end":524,"column_start":31,"column_end":37},"name":"le_f32","qualname":"::byte::num::le_f32","value":"pub fn le_f32<'a, I>() -> F32<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2472},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197768,"byte_end":197771,"line_start":539,"line_end":539,"column_start":13,"column_end":16},"name":"F64","qualname":"::byte::num::F64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2462},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197773,"byte_end":197776,"line_start":539,"line_end":539,"column_start":18,"column_end":21},"name":"f64","qualname":"::byte::num::f64","value":"pub fn f64<'a, B, I>() -> F64<B, I> where I: RangeStream<Range = &'a [u8]>,\nB: ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193065,"byte_end":193082,"line_start":401,"line_end":401,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2466},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197778,"byte_end":197784,"line_start":539,"line_end":539,"column_start":23,"column_end":29},"name":"be_f64","qualname":"::byte::num::be_f64","value":"pub fn be_f64<'a, I>() -> F64<BE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193348,"byte_end":193365,"line_start":411,"line_end":411,"column_start":13,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2469},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":197786,"byte_end":197792,"line_start":539,"line_end":539,"column_start":31,"column_end":37},"name":"le_f64","qualname":"::byte::num::le_f64","value":"pub fn le_f64<'a, I>() -> F64<LE, I> where I: RangeStream<Range = &'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":193586,"byte_end":193603,"line_start":420,"line_end":420,"column_start":13,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1170},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"char","qualname":"::char","value":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":2927},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":2481},{"krate":0,"index":2491},{"krate":0,"index":2507},{"krate":0,"index":2512},{"krate":0,"index":2501},{"krate":0,"index":1190},{"krate":0,"index":2521},{"krate":0,"index":2526},{"krate":0,"index":2515},{"krate":0,"index":1192},{"krate":0,"index":2535},{"krate":0,"index":2540},{"krate":0,"index":2529},{"krate":0,"index":1194},{"krate":0,"index":2550},{"krate":0,"index":2555},{"krate":0,"index":2544},{"krate":0,"index":1196},{"krate":0,"index":2565},{"krate":0,"index":2570},{"krate":0,"index":2559},{"krate":0,"index":1198},{"krate":0,"index":2580},{"krate":0,"index":2585},{"krate":0,"index":2574},{"krate":0,"index":1200},{"krate":0,"index":2595},{"krate":0,"index":2600},{"krate":0,"index":2589},{"krate":0,"index":1202},{"krate":0,"index":2610},{"krate":0,"index":2615},{"krate":0,"index":2604},{"krate":0,"index":1204},{"krate":0,"index":2625},{"krate":0,"index":2630},{"krate":0,"index":2619},{"krate":0,"index":1206},{"krate":0,"index":2640},{"krate":0,"index":2645},{"krate":0,"index":2634},{"krate":0,"index":1208},{"krate":0,"index":2655},{"krate":0,"index":2660},{"krate":0,"index":2649},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":2664},{"krate":0,"index":2669},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":2672},{"krate":0,"index":2679},{"krate":0,"index":1222},{"krate":0,"index":1230}],"decl_id":null,"docs":" Module containing parsers specialized on character streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on character streams.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17418,"byte_end":17481,"line_start":490,"line_end":490,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1187},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198808,"byte_end":198812,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"char","qualname":"::char::char","value":"pub fn char<I>(char) -> Token<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198542,"byte_end":198611,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198612,"byte_end":198615,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198616,"byte_end":198623,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198624,"byte_end":198648,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/ use combine::char::char;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198649,"byte_end":198677,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(char('!').parse(\"!\"), Ok(('!', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198678,"byte_end":198730,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/ assert!(char('A').parse(\"!\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198731,"byte_end":198774,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198775,"byte_end":198782,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198783,"byte_end":198800,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2493},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":198962,"byte_end":198967,"line_start":24,"line_end":24,"column_start":16,"column_end":21},"name":"Digit","qualname":"::char::digit::Digit","value":"Digit {  }","parent":null,"children":[{"krate":0,"index":2495}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2491},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199208,"byte_end":199213,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"digit","qualname":"::char::digit","value":"pub fn digit<I>() -> self::digit::Digit<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":16756,"byte_end":16773,"line_start":464,"line_end":464,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2507},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199370,"byte_end":199375,"line_start":41,"line_end":41,"column_start":22,"column_end":27},"name":"Space","qualname":"::char::Space","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1190},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199956,"byte_end":199961,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"space","qualname":"::char::space","value":"pub fn space<I>() -> Space<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single whitespace according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Parse a single whitespace according to [`std::char::is_whitespace`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199428,"byte_end":199500,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199501,"byte_end":199504,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199505,"byte_end":199559,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199560,"byte_end":199563,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199564,"byte_end":199668,"line_start":47,"line_end":47,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199669,"byte_end":199672,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199673,"byte_end":199680,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199681,"byte_end":199705,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/ use combine::char::space;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199706,"byte_end":199735,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(space().parse(\" \"), Ok((' ', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199736,"byte_end":199786,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(space().parse(\"  \"), Ok((' ', \" \")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199787,"byte_end":199839,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/ assert!(space().parse(\"!\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199840,"byte_end":199881,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ assert!(space().parse(\"\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199882,"byte_end":199922,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199923,"byte_end":199930,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":199931,"byte_end":199948,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2521},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200148,"byte_end":200154,"line_start":66,"line_end":66,"column_start":22,"column_end":28},"name":"Spaces","qualname":"::char::Spaces","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1192},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200646,"byte_end":200652,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"spaces","qualname":"::char::spaces","value":"pub fn spaces<I>() -> Spaces<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Skips over zero or more spaces according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Skips over zero or more spaces according to [`std::char::is_whitespace`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200196,"byte_end":200273,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200274,"byte_end":200277,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200278,"byte_end":200332,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200333,"byte_end":200336,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200337,"byte_end":200441,"line_start":72,"line_end":72,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200442,"byte_end":200445,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200446,"byte_end":200453,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200454,"byte_end":200478,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/ use combine::char::spaces;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200479,"byte_end":200509,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(spaces().parse(\"\"), Ok(((), \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200510,"byte_end":200559,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(spaces().parse(\"   \"), Ok(((), \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200560,"byte_end":200612,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200613,"byte_end":200620,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200621,"byte_end":200638,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2535},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200799,"byte_end":200806,"line_start":88,"line_end":88,"column_start":22,"column_end":29},"name":"Newline","qualname":"::char::Newline","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1194},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201093,"byte_end":201100,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"newline","qualname":"::char::newline","value":"pub fn newline<I>() -> Newline<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline character.","sig":null,"attributes":[{"value":"/ Parses a newline character.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200859,"byte_end":200890,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200891,"byte_end":200894,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200895,"byte_end":200902,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200903,"byte_end":200927,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/ use combine::char::newline;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200928,"byte_end":200959,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(newline().parse(\"\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":200960,"byte_end":201014,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/ assert!(newline().parse(\"\\r\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201015,"byte_end":201059,"line_start":96,"line_end":96,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201060,"byte_end":201067,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201068,"byte_end":201085,"line_start":98,"line_end":98,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2550},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201307,"byte_end":201311,"line_start":109,"line_end":109,"column_start":22,"column_end":26},"name":"CrLf","qualname":"::char::CrLf","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201692,"byte_end":201696,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"crlf","qualname":"::char::crlf","value":"pub fn crlf<I>() -> CrLf<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline, returning the newline character.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline, returning the newline character.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201382,"byte_end":201454,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201455,"byte_end":201458,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201459,"byte_end":201466,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201467,"byte_end":201491,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/ use combine::char::crlf;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201492,"byte_end":201520,"line_start":115,"line_end":115,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(crlf().parse(\"\\r\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201521,"byte_end":201574,"line_start":116,"line_end":116,"column_start":1,"column_end":54}},{"value":"/ assert!(crlf().parse(\"\\r\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201575,"byte_end":201616,"line_start":117,"line_end":117,"column_start":1,"column_end":42}},{"value":"/ assert!(crlf().parse(\"\\n\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201617,"byte_end":201658,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201659,"byte_end":201666,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201667,"byte_end":201684,"line_start":120,"line_end":120,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2565},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201941,"byte_end":201944,"line_start":133,"line_end":133,"column_start":22,"column_end":25},"name":"Tab","qualname":"::char::Tab","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1198},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202214,"byte_end":202217,"line_start":144,"line_end":144,"column_start":8,"column_end":11},"name":"tab","qualname":"::char::tab","value":"pub fn tab<I>() -> Tab<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab character.","sig":null,"attributes":[{"value":"/ Parses a tab character.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":201997,"byte_end":202024,"line_start":135,"line_end":135,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202025,"byte_end":202028,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202029,"byte_end":202036,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202037,"byte_end":202061,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/ use combine::char::tab;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202062,"byte_end":202089,"line_start":139,"line_end":139,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(tab().parse(\"\\t\"), Ok(('\\t', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202090,"byte_end":202140,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/ assert!(tab().parse(\" \").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202141,"byte_end":202180,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202181,"byte_end":202188,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202189,"byte_end":202206,"line_start":143,"line_end":143,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2580},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202409,"byte_end":202414,"line_start":154,"line_end":154,"column_start":22,"column_end":27},"name":"Upper","qualname":"::char::Upper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202840,"byte_end":202845,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"upper","qualname":"::char::upper","value":"pub fn upper<I>() -> Upper<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase letter according to [`std::char::is_uppercase`].","sig":null,"attributes":[{"value":"/ Parses an uppercase letter according to [`std::char::is_uppercase`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202467,"byte_end":202539,"line_start":156,"line_end":156,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202540,"byte_end":202543,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_uppercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_uppercase","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202544,"byte_end":202646,"line_start":158,"line_end":158,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202647,"byte_end":202650,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202651,"byte_end":202658,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202659,"byte_end":202683,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ use combine::char::upper;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202684,"byte_end":202713,"line_start":162,"line_end":162,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(upper().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202714,"byte_end":202764,"line_start":163,"line_end":163,"column_start":1,"column_end":51}},{"value":"/ assert!(upper().parse(\"a\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202765,"byte_end":202806,"line_start":164,"line_end":164,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202807,"byte_end":202814,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":202815,"byte_end":202832,"line_start":166,"line_end":166,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2595},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203060,"byte_end":203065,"line_start":177,"line_end":177,"column_start":22,"column_end":27},"name":"Lower","qualname":"::char::Lower","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1202},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203491,"byte_end":203496,"line_start":190,"line_end":190,"column_start":8,"column_end":13},"name":"lower","qualname":"::char::lower","value":"pub fn lower<I>() -> Lower<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase letter according to [`std::char::is_lowercase`].","sig":null,"attributes":[{"value":"/ Parses an lowercase letter according to [`std::char::is_lowercase`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203118,"byte_end":203190,"line_start":179,"line_end":179,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203191,"byte_end":203194,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_lowercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_lowercase","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203195,"byte_end":203297,"line_start":181,"line_end":181,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203298,"byte_end":203301,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203302,"byte_end":203309,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203310,"byte_end":203334,"line_start":184,"line_end":184,"column_start":1,"column_end":25}},{"value":"/ use combine::char::lower;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203335,"byte_end":203364,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(lower().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203365,"byte_end":203415,"line_start":186,"line_end":186,"column_start":1,"column_end":51}},{"value":"/ assert!(lower().parse(\"A\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203416,"byte_end":203457,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203458,"byte_end":203465,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203466,"byte_end":203483,"line_start":189,"line_end":189,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203712,"byte_end":203720,"line_start":200,"line_end":200,"column_start":22,"column_end":30},"name":"AlphaNum","qualname":"::char::AlphaNum","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1204},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204237,"byte_end":204246,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::char::alpha_num","value":"pub fn alpha_num<I>() -> AlphaNum<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","sig":null,"attributes":[{"value":"/ Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203773,"byte_end":203863,"line_start":202,"line_end":202,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203864,"byte_end":203867,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphanumeric`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphanumeric","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203868,"byte_end":203976,"line_start":204,"line_end":204,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203977,"byte_end":203980,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203981,"byte_end":203988,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":203989,"byte_end":204013,"line_start":207,"line_end":207,"column_start":1,"column_end":25}},{"value":"/ use combine::char::alpha_num;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204014,"byte_end":204047,"line_start":208,"line_end":208,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(alpha_num().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204048,"byte_end":204102,"line_start":209,"line_end":209,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(alpha_num().parse(\"1\"), Ok(('1', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204103,"byte_end":204157,"line_start":210,"line_end":210,"column_start":1,"column_end":55}},{"value":"/ assert!(alpha_num().parse(\"!\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204158,"byte_end":204203,"line_start":211,"line_end":211,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204204,"byte_end":204211,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204212,"byte_end":204229,"line_start":213,"line_end":213,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2625},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204483,"byte_end":204489,"line_start":225,"line_end":225,"column_start":22,"column_end":28},"name":"Letter","qualname":"::char::Letter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204972,"byte_end":204978,"line_start":239,"line_end":239,"column_start":8,"column_end":14},"name":"letter","qualname":"::char::letter","value":"pub fn letter<I>() -> Letter<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses an alphabet letter according to [`std::char::is_alphabetic`].","sig":null,"attributes":[{"value":"/ Parses an alphabet letter according to [`std::char::is_alphabetic`].","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204542,"byte_end":204614,"line_start":227,"line_end":227,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204615,"byte_end":204618,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphabetic`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphabetic","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204619,"byte_end":204723,"line_start":229,"line_end":229,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204724,"byte_end":204727,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204728,"byte_end":204735,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204736,"byte_end":204760,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/ use combine::char::letter;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204761,"byte_end":204791,"line_start":233,"line_end":233,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(letter().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204792,"byte_end":204843,"line_start":234,"line_end":234,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(letter().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204844,"byte_end":204895,"line_start":235,"line_end":235,"column_start":1,"column_end":52}},{"value":"/ assert!(letter().parse(\"9\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204896,"byte_end":204938,"line_start":236,"line_end":236,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204939,"byte_end":204946,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":204947,"byte_end":204964,"line_start":238,"line_end":238,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2640},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205187,"byte_end":205195,"line_start":249,"line_end":249,"column_start":22,"column_end":30},"name":"OctDigit","qualname":"::char::OctDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1208},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205480,"byte_end":205489,"line_start":260,"line_end":260,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::char::oct_digit","value":"pub fn oct_digit<I>() -> OctDigit<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205248,"byte_end":205274,"line_start":251,"line_end":251,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205275,"byte_end":205278,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205279,"byte_end":205286,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205287,"byte_end":205311,"line_start":254,"line_end":254,"column_start":1,"column_end":25}},{"value":"/ use combine::char::oct_digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205312,"byte_end":205345,"line_start":255,"line_end":255,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(oct_digit().parse(\"7\"), Ok(('7', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205346,"byte_end":205400,"line_start":256,"line_end":256,"column_start":1,"column_end":55}},{"value":"/ assert!(oct_digit().parse(\"8\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205401,"byte_end":205446,"line_start":257,"line_end":257,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205447,"byte_end":205454,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205455,"byte_end":205472,"line_start":259,"line_end":259,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2655},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205703,"byte_end":205711,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"name":"HexDigit","qualname":"::char::HexDigit","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206029,"byte_end":206038,"line_start":281,"line_end":281,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::char::hex_digit","value":"pub fn hex_digit<I>() -> HexDigit<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a hexdecimal digit with uppercase and lowercase.","sig":null,"attributes":[{"value":"/ Parses a hexdecimal digit with uppercase and lowercase.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205764,"byte_end":205823,"line_start":272,"line_end":272,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205824,"byte_end":205827,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205828,"byte_end":205835,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205836,"byte_end":205860,"line_start":275,"line_end":275,"column_start":1,"column_end":25}},{"value":"/ use combine::char::hex_digit;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205861,"byte_end":205894,"line_start":276,"line_end":276,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(hex_digit().parse(\"F\"), Ok(('F', \"\")));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205895,"byte_end":205949,"line_start":277,"line_end":277,"column_start":1,"column_end":55}},{"value":"/ assert!(hex_digit().parse(\"H\").is_err());","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205950,"byte_end":205995,"line_start":278,"line_end":278,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":205996,"byte_end":206003,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206004,"byte_end":206021,"line_start":280,"line_end":280,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2664},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206316,"byte_end":206319,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"Str","qualname":"::char::Str","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207176,"byte_end":207182,"line_start":330,"line_end":330,"column_start":8,"column_end":14},"name":"string","qualname":"::char::string","value":"pub fn string<I>(&'static str) -> Str<I> where I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`.","sig":null,"attributes":[{"value":"/ Parses the string `s`.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206881,"byte_end":206907,"line_start":316,"line_end":316,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206908,"byte_end":206911,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206912,"byte_end":206919,"line_start":318,"line_end":318,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206920,"byte_end":206947,"line_start":319,"line_end":319,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206948,"byte_end":206969,"line_start":320,"line_end":320,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::string;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206970,"byte_end":207002,"line_start":321,"line_end":321,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207003,"byte_end":207020,"line_start":322,"line_end":322,"column_start":1,"column_end":18}},{"value":"/ let result = string(\"rust\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207021,"byte_end":207052,"line_start":323,"line_end":323,"column_start":1,"column_end":32}},{"value":"/     .parse(\"rust\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207053,"byte_end":207075,"line_start":324,"line_end":324,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207076,"byte_end":207098,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207099,"byte_end":207134,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207135,"byte_end":207142,"line_start":327,"line_end":327,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207143,"byte_end":207150,"line_start":328,"line_end":328,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207151,"byte_end":207168,"line_start":329,"line_end":329,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2672},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207304,"byte_end":207310,"line_start":338,"line_end":338,"column_start":12,"column_end":18},"name":"StrCmp","qualname":"::char::StrCmp","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208346,"byte_end":208356,"line_start":374,"line_end":374,"column_start":8,"column_end":18},"name":"string_cmp","qualname":"::char::string_cmp","value":"pub fn string_cmp<C, I>(&'static str, C) -> StrCmp<C, I> where\nC: FnMut(char, char) -> bool, I: Stream<Item = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`, using `cmp` to compare each character.","sig":null,"attributes":[{"value":"/ Parses the string `s`, using `cmp` to compare each character.","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207939,"byte_end":208004,"line_start":359,"line_end":359,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208005,"byte_end":208008,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208009,"byte_end":208016,"line_start":361,"line_end":361,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208017,"byte_end":208044,"line_start":362,"line_end":362,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208045,"byte_end":208066,"line_start":363,"line_end":363,"column_start":1,"column_end":22}},{"value":"/ # use combine::char::string_cmp;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208067,"byte_end":208103,"line_start":364,"line_end":364,"column_start":1,"column_end":37}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208104,"byte_end":208133,"line_start":365,"line_end":365,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208134,"byte_end":208151,"line_start":366,"line_end":366,"column_start":1,"column_end":18}},{"value":"/ let result = string_cmp(\"rust\", |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208152,"byte_end":208222,"line_start":367,"line_end":367,"column_start":1,"column_end":71}},{"value":"/     .parse(\"RusT\")","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208223,"byte_end":208245,"line_start":368,"line_end":368,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208246,"byte_end":208268,"line_start":369,"line_end":369,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208269,"byte_end":208304,"line_start":370,"line_end":370,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208305,"byte_end":208312,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208313,"byte_end":208320,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":208321,"byte_end":208338,"line_start":373,"line_end":373,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31119,"byte_end":31131,"line_start":41,"line_end":41,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31766,"byte_end":31770,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":32440,"byte_end":32444,"line_start":89,"line_end":89,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33020,"byte_end":33024,"line_start":102,"line_end":102,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33371,"byte_end":33375,"line_start":113,"line_end":113,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33486,"byte_end":33490,"line_start":118,"line_end":118,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33604,"byte_end":33608,"line_start":124,"line_end":124,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34176,"byte_end":34181,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34955,"byte_end":34960,"line_start":171,"line_end":171,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35322,"byte_end":35327,"line_start":182,"line_end":182,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35472,"byte_end":35477,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38485,"byte_end":38493,"line_start":280,"line_end":280,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38675,"byte_end":38683,"line_start":288,"line_end":288,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38836,"byte_end":38844,"line_start":296,"line_end":296,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43567,"byte_end":43577,"line_start":433,"line_end":433,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46363,"byte_end":46373,"line_start":508,"line_end":508,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46969,"byte_end":46979,"line_start":527,"line_end":527,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47619,"byte_end":47629,"line_start":549,"line_end":549,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47888,"byte_end":47898,"line_start":561,"line_end":561,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48106,"byte_end":48116,"line_start":571,"line_end":571,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48469,"byte_end":48479,"line_start":588,"line_end":588,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48788,"byte_end":48802,"line_start":601,"line_end":601,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48994,"byte_end":48999,"line_start":606,"line_end":606,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49764,"byte_end":49769,"line_start":631,"line_end":631,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":50107,"byte_end":50112,"line_start":647,"line_end":647,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":50457,"byte_end":50462,"line_start":662,"line_end":662,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":51031,"byte_end":51036,"line_start":688,"line_end":688,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":51839,"byte_end":51844,"line_start":718,"line_end":718,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53412,"byte_end":53413,"line_start":761,"line_end":761,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59273,"byte_end":59284,"line_start":983,"line_end":983,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59402,"byte_end":59413,"line_start":989,"line_end":989,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59963,"byte_end":59974,"line_start":1014,"line_end":1014,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":60683,"byte_end":60694,"line_start":1041,"line_end":1041,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61044,"byte_end":61058,"line_start":1060,"line_end":1060,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61432,"byte_end":61446,"line_start":1078,"line_end":1078,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61744,"byte_end":61758,"line_start":1094,"line_end":1094,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62277,"byte_end":62287,"line_start":1121,"line_end":1121,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62779,"byte_end":62789,"line_start":1144,"line_end":1144,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":64708,"byte_end":64719,"line_start":1220,"line_end":1220,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65955,"byte_end":65965,"line_start":1281,"line_end":1281,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":66711,"byte_end":66725,"line_start":1307,"line_end":1307,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67415,"byte_end":67425,"line_start":1330,"line_end":1330,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67786,"byte_end":67800,"line_start":1341,"line_end":1341,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68224,"byte_end":68238,"line_start":1356,"line_end":1356,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":85165,"byte_end":85168,"line_start":1852,"line_end":1852,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":86082,"byte_end":86096,"line_start":1891,"line_end":1891,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":86479,"byte_end":86493,"line_start":1907,"line_end":1907,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":86990,"byte_end":87009,"line_start":1937,"line_end":1937,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":88559,"byte_end":88579,"line_start":1986,"line_end":1986,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89108,"byte_end":89122,"line_start":2008,"line_end":2008,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89774,"byte_end":89788,"line_start":2028,"line_end":2028,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":94886,"byte_end":94889,"line_start":38,"line_end":38,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96312,"byte_end":96319,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97318,"byte_end":97328,"line_start":145,"line_end":145,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98639,"byte_end":98644,"line_start":204,"line_end":204,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99720,"byte_end":99726,"line_start":257,"line_end":257,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102823,"byte_end":102831,"line_start":356,"line_end":356,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103757,"byte_end":103763,"line_start":397,"line_end":397,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105015,"byte_end":105020,"line_start":444,"line_end":444,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106224,"byte_end":106230,"line_start":499,"line_end":499,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107616,"byte_end":107621,"line_start":555,"line_end":555,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":109595,"byte_end":109606,"line_start":635,"line_end":635,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114295,"byte_end":114305,"line_start":794,"line_end":794,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115328,"byte_end":115333,"line_start":833,"line_end":833,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":116709,"byte_end":116712,"line_start":900,"line_end":900,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118079,"byte_end":118083,"line_start":959,"line_end":959,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118954,"byte_end":118958,"line_start":986,"line_end":986,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":119896,"byte_end":119900,"line_start":1018,"line_end":1018,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121050,"byte_end":121055,"line_start":1061,"line_end":1061,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123794,"byte_end":123799,"line_start":1167,"line_end":1167,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125519,"byte_end":125525,"line_start":1229,"line_end":1229,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127727,"byte_end":127735,"line_start":1303,"line_end":1303,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":129506,"byte_end":129515,"line_start":1366,"line_end":1366,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133258,"byte_end":133266,"line_start":1489,"line_end":1489,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133741,"byte_end":133749,"line_start":1514,"line_end":1514,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135618,"byte_end":135625,"line_start":1581,"line_end":1581,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137376,"byte_end":137383,"line_start":1641,"line_end":1641,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139414,"byte_end":139417,"line_start":1705,"line_end":1705,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140306,"byte_end":140315,"line_start":1745,"line_end":1745,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141336,"byte_end":141340,"line_start":1793,"line_end":1793,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142102,"byte_end":142106,"line_start":1827,"line_end":1827,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142815,"byte_end":142822,"line_start":1860,"line_end":1860,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":144090,"byte_end":144092,"line_start":1910,"line_end":1910,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145473,"byte_end":145476,"line_start":1955,"line_end":1955,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146396,"byte_end":146403,"line_start":1991,"line_end":1991,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147584,"byte_end":147588,"line_start":2033,"line_end":2033,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":149011,"byte_end":149019,"line_start":2084,"line_end":2084,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":150218,"byte_end":150225,"line_start":2131,"line_end":2131,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":158668,"byte_end":158677,"line_start":2379,"line_end":2379,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":160344,"byte_end":160353,"line_start":2443,"line_end":2443,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":173540,"byte_end":173545,"line_start":10,"line_end":10,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175022,"byte_end":175026,"line_start":62,"line_end":62,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176165,"byte_end":176174,"line_start":107,"line_end":107,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177173,"byte_end":177183,"line_start":146,"line_end":146,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178544,"byte_end":178558,"line_start":196,"line_end":196,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189103,"byte_end":189108,"line_start":272,"line_end":272,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190451,"byte_end":190459,"line_start":321,"line_end":321,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206415,"byte_end":206418,"line_start":299,"line_end":299,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207415,"byte_end":207421,"line_start":341,"line_end":341,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17213,"byte_end":17223,"line_start":483,"line_end":483,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":53}},{"kind":"Mod","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17277,"byte_end":17287,"line_start":485,"line_end":485,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":526}},{"kind":"Mod","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17338,"byte_end":17343,"line_start":487,"line_end":487,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1010}},{"kind":"Mod","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17412,"byte_end":17416,"line_start":489,"line_end":489,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1087}},{"kind":"Mod","span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/lib.rs","byte_start":17490,"byte_end":17494,"line_start":491,"line_end":491,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1170}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31119,"byte_end":31131,"line_start":41,"line_end":41,"column_start":23,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1260},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":31766,"byte_end":31770,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":32440,"byte_end":32444,"line_start":89,"line_end":89,"column_start":48,"column_end":52},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33020,"byte_end":33024,"line_start":102,"line_end":102,"column_start":57,"column_end":61},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33371,"byte_end":33375,"line_start":113,"line_end":113,"column_start":24,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33486,"byte_end":33490,"line_start":118,"line_end":118,"column_start":29,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":33604,"byte_end":33608,"line_start":124,"line_end":124,"column_start":35,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34176,"byte_end":34181,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":34955,"byte_end":34960,"line_start":171,"line_end":171,"column_start":48,"column_end":53},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35322,"byte_end":35327,"line_start":182,"line_end":182,"column_start":27,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":35472,"byte_end":35477,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38485,"byte_end":38493,"line_start":280,"line_end":280,"column_start":22,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38675,"byte_end":38683,"line_start":288,"line_end":288,"column_start":22,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":38836,"byte_end":38844,"line_start":296,"line_end":296,"column_start":9,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":43567,"byte_end":43577,"line_start":433,"line_end":433,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46363,"byte_end":46373,"line_start":508,"line_end":508,"column_start":10,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":46969,"byte_end":46979,"line_start":527,"line_end":527,"column_start":17,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47619,"byte_end":47629,"line_start":549,"line_end":549,"column_start":22,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":172},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":47888,"byte_end":47898,"line_start":561,"line_end":561,"column_start":23,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":172},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48106,"byte_end":48116,"line_start":571,"line_end":571,"column_start":24,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":172},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48469,"byte_end":48479,"line_start":588,"line_end":588,"column_start":26,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":172},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48788,"byte_end":48802,"line_start":601,"line_end":601,"column_start":23,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":48994,"byte_end":48999,"line_start":606,"line_end":606,"column_start":57,"column_end":62},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":49764,"byte_end":49769,"line_start":631,"line_end":631,"column_start":24,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":50107,"byte_end":50112,"line_start":647,"line_end":647,"column_start":9,"column_end":14},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":50457,"byte_end":50462,"line_start":662,"line_end":662,"column_start":24,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":51031,"byte_end":51036,"line_start":688,"line_end":688,"column_start":28,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":51839,"byte_end":51844,"line_start":718,"line_end":718,"column_start":32,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53370,"byte_end":53380,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":243},"to":{"krate":0,"index":249}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53383,"byte_end":53388,"line_start":759,"line_end":759,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":249}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53412,"byte_end":53413,"line_start":761,"line_end":761,"column_start":20,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":251},"to":{"krate":0,"index":249}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":53866,"byte_end":53872,"line_start":782,"line_end":782,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":249},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":54457,"byte_end":54468,"line_start":795,"line_end":795,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":254},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59273,"byte_end":59284,"line_start":983,"line_end":983,"column_start":23,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1360},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59402,"byte_end":59413,"line_start":989,"line_end":989,"column_start":28,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1360},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":59963,"byte_end":59974,"line_start":1014,"line_end":1014,"column_start":29,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1360},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":60683,"byte_end":60694,"line_start":1041,"line_end":1041,"column_start":33,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1360},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61044,"byte_end":61058,"line_start":1060,"line_end":1060,"column_start":9,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61432,"byte_end":61446,"line_start":1078,"line_end":1078,"column_start":22,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":61744,"byte_end":61758,"line_start":1094,"line_end":1094,"column_start":34,"column_end":48},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62277,"byte_end":62287,"line_start":1121,"line_end":1121,"column_start":30,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":347},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":62779,"byte_end":62789,"line_start":1144,"line_end":1144,"column_start":9,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":63863,"byte_end":63872,"line_start":1183,"line_end":1183,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1697},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":64708,"byte_end":64719,"line_start":1220,"line_end":1220,"column_start":28,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1360},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":65955,"byte_end":65965,"line_start":1281,"line_end":1281,"column_start":12,"column_end":22},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":66711,"byte_end":66725,"line_start":1307,"line_end":1307,"column_start":12,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67415,"byte_end":67425,"line_start":1330,"line_end":1330,"column_start":55,"column_end":65},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":67786,"byte_end":67800,"line_start":1341,"line_end":1341,"column_start":40,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":68224,"byte_end":68238,"line_start":1356,"line_end":1356,"column_start":40,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":85165,"byte_end":85168,"line_start":1852,"line_end":1852,"column_start":34,"column_end":37},"kind":{"Impl":{"id":47}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":86082,"byte_end":86096,"line_start":1891,"line_end":1891,"column_start":28,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":484},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":86479,"byte_end":86493,"line_start":1907,"line_end":1907,"column_start":23,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":484},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":86990,"byte_end":87009,"line_start":1937,"line_end":1937,"column_start":9,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":88559,"byte_end":88579,"line_start":1986,"line_end":1986,"column_start":9,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89108,"byte_end":89122,"line_start":2008,"line_end":2008,"column_start":13,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/primitives.rs","byte_start":89774,"byte_end":89788,"line_start":2028,"line_end":2028,"column_start":28,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":484},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":94886,"byte_end":94889,"line_start":38,"line_end":38,"column_start":20,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1444},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":96312,"byte_end":96319,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1451},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":97318,"byte_end":97328,"line_start":145,"line_end":145,"column_start":26,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1460},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":98639,"byte_end":98644,"line_start":204,"line_end":204,"column_start":20,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1469},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":99720,"byte_end":99726,"line_start":257,"line_end":257,"column_start":26,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1476},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":102823,"byte_end":102831,"line_start":356,"line_end":356,"column_start":20,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1489},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":103757,"byte_end":103763,"line_start":397,"line_end":397,"column_start":29,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1495},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":105015,"byte_end":105020,"line_start":444,"line_end":444,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1505},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":106224,"byte_end":106230,"line_start":499,"line_end":499,"column_start":23,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1514},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":107616,"byte_end":107621,"line_start":555,"line_end":555,"column_start":23,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1523},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":109595,"byte_end":109606,"line_start":635,"line_end":635,"column_start":23,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1555},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":114295,"byte_end":114305,"line_start":794,"line_end":794,"column_start":20,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1589},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":115328,"byte_end":115333,"line_start":833,"line_end":833,"column_start":23,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1597},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":116709,"byte_end":116712,"line_start":900,"line_end":900,"column_start":20,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1628},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118079,"byte_end":118083,"line_start":959,"line_end":959,"column_start":17,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":118954,"byte_end":118958,"line_start":986,"line_end":986,"column_start":30,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":119896,"byte_end":119900,"line_start":1018,"line_end":1018,"column_start":23,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1635},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":121050,"byte_end":121055,"line_start":1061,"line_end":1061,"column_start":23,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1645},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":123794,"byte_end":123799,"line_start":1167,"line_end":1167,"column_start":26,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1685},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":125519,"byte_end":125525,"line_start":1229,"line_end":1229,"column_start":26,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1697},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":127727,"byte_end":127735,"line_start":1303,"line_end":1303,"column_start":26,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1709},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":129506,"byte_end":129515,"line_start":1366,"line_end":1366,"column_start":26,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1721},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133258,"byte_end":133266,"line_start":1489,"line_end":1489,"column_start":26,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1733},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":133741,"byte_end":133749,"line_start":1514,"line_end":1514,"column_start":20,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1743},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":135618,"byte_end":135625,"line_start":1581,"line_end":1581,"column_start":27,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1771},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":137376,"byte_end":137383,"line_start":1641,"line_end":1641,"column_start":27,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1781},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":139414,"byte_end":139417,"line_start":1705,"line_end":1705,"column_start":26,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1791},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":140306,"byte_end":140315,"line_start":1745,"line_end":1745,"column_start":26,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1798},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":141336,"byte_end":141340,"line_start":1793,"line_end":1793,"column_start":28,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1805},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142102,"byte_end":142106,"line_start":1827,"line_end":1827,"column_start":28,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1814},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":142815,"byte_end":142822,"line_start":1860,"line_end":1860,"column_start":23,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1823},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":144090,"byte_end":144092,"line_start":1910,"line_end":1910,"column_start":31,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1831},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":145473,"byte_end":145476,"line_start":1955,"line_end":1955,"column_start":32,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1841},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":146396,"byte_end":146403,"line_start":1991,"line_end":1991,"column_start":32,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1851},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":147584,"byte_end":147588,"line_start":2033,"line_end":2033,"column_start":26,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1861},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":149011,"byte_end":149019,"line_start":2084,"line_end":2084,"column_start":20,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1871},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":150218,"byte_end":150225,"line_start":2131,"line_end":2131,"column_start":29,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1879},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":158668,"byte_end":158677,"line_start":2379,"line_end":2379,"column_start":26,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2032},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/combinator.rs","byte_start":160344,"byte_end":160353,"line_start":2443,"line_end":2443,"column_start":23,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2047},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":173540,"byte_end":173545,"line_start":10,"line_end":10,"column_start":20,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1020},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":175022,"byte_end":175026,"line_start":62,"line_end":62,"column_start":20,"column_end":24},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1033},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":176165,"byte_end":176174,"line_start":107,"line_end":107,"column_start":23,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1045},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":177173,"byte_end":177183,"line_start":146,"line_end":146,"column_start":23,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1060},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/range.rs","byte_start":178544,"byte_end":178558,"line_start":196,"line_end":196,"column_start":20,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1075},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":189103,"byte_end":189108,"line_start":272,"line_end":272,"column_start":24,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2246},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/byte.rs","byte_start":190451,"byte_end":190459,"line_start":321,"line_end":321,"column_start":27,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2254},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":206415,"byte_end":206418,"line_start":299,"line_end":299,"column_start":20,"column_end":23},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2664},"to":{"krate":0,"index":426}},{"span":{"file_name":"/home/djedou/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-2.5.2/src/char.rs","byte_start":207415,"byte_end":207421,"line_start":341,"line_end":341,"column_start":23,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2672},"to":{"krate":0,"index":426}}]}